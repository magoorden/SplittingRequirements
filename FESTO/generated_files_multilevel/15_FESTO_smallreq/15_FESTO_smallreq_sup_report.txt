Reading CIF file "15_FESTO_smallreq.cif".
Preprocessing CIF specification.
Creating matrix.
Prepare clustering.
Start clustering in Matlab.
Import data from clustering.
Prepare synthesis of supervisors.
Starting synthesis of supervisors.
Syntesizing supervisor 1.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name         Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  -----------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_separator  0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_turntable  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_atinput    2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_turntable  3      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  -----------  -----  --------  ----------  ----------  -----------
  Total                                       4      8         16          16          100%

Applying automatic variable ordering:
  Number of hyperedges: 10

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     A_separator.On
Initial   (aut/locs init predicate):     S_atinput.Off
Initial   (aut/locs init predicate):     S_turntable.On
Initial   (aut/locs init predicate):     A_turntable.Off
Initial   (auts/locs init predicate):    A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On)
Initial   (uncontrolled system):         A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On)
Initial   (system, combined init/inv):   A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   A_separator.On
Marked    (aut/locs marker predicate):   S_atinput.Off
Marked    (aut/locs marker predicate):   S_turntable.On
Marked    (aut/locs marker predicate):   A_turntable.Off
Marked    (auts/locs marker predicate):  A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On)
Marked    (uncontrolled system):         A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On)
Marked    (system, combined marked/inv): A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On)

State/event exclusion requirements:
  Event "A_separator_c_off" needs:
    S_turntable.On
  Event "A_turntable_c_on" needs:
    S_atinput.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: A_separator_c_off) (guard: A_separator.On) (assignments: A_separator := A_separator.Off)
    Edge: (event: A_separator_c_on) (guard: A_separator.Off) (assignments: A_separator := A_separator.On)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: A_turntable.Off) (assignments: A_turntable := A_turntable.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_separator_c_off) (guard: A_separator.On) (assignments: A_separator := A_separator.Off): guard: A_separator.On -> A_separator.On and S_turntable.On [requirement: S_turntable.On].
Edge (event: A_turntable_c_on) (guard: A_turntable.Off) (assignments: A_turntable := A_turntable.On): guard: A_turntable.Off -> A_turntable.Off and S_atinput.On [requirement: S_atinput.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: A_separator_c_off) (guard: A_separator.On -> A_separator.On and S_turntable.On) (assignments: A_separator := A_separator.Off)
    Edge: (event: A_separator_c_on) (guard: A_separator.Off) (assignments: A_separator := A_separator.On)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: A_turntable.Off -> A_turntable.Off and S_atinput.On) (assignments: A_turntable := A_turntable.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On) -> A_turntable.Off and (S_atinput.Off and S_turntable.On) [backward reach with edge: (event: A_separator_c_on) (guard: A_separator.Off) (assignments: A_separator := A_separator.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off and (S_atinput.Off and S_turntable.On) -> A_turntable.Off and S_turntable.On [backward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off and S_turntable.On -> A_turntable.Off [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off -> true [backward reach with edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On) -> A_turntable.Off and (S_atinput.Off and S_turntable.On) [forward reach with edge: (event: A_separator_c_off) (guard: A_separator.On -> A_separator.On and S_turntable.On) (assignments: A_separator := A_separator.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and (S_atinput.Off and S_turntable.On) -> A_turntable.Off and S_turntable.On [forward reach with edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and S_turntable.On -> A_turntable.Off [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off -> A_turntable.Off or S_atinput.On [forward reach with edge: (event: A_turntable_c_on) (guard: A_turntable.Off -> A_turntable.Off and S_atinput.On) (assignments: A_turntable := A_turntable.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_turntable.Off or S_atinput.On -> true [forward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: A_separator_c_off) (guard: A_separator.On -> A_separator.On and S_turntable.On) (assignments: A_separator := A_separator.Off)
    Edge: (event: A_separator_c_on) (guard: A_separator.Off) (assignments: A_separator := A_separator.On)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: A_turntable.Off -> A_turntable.Off and S_atinput.On) (assignments: A_turntable := A_turntable.On)

Controlled system:                     exactly 16 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On)
Initial (controlled system):           A_separator.On and A_turntable.Off and (S_atinput.Off and S_turntable.On)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_separator_c_off: guard: A_separator.On and S_turntable.On -> true [assume A_separator.On and S_turntable.On].
  Event A_separator_c_on: guard: A_separator.Off -> true [assume A_separator.Off].
  Event A_turntable_c_off: guard: A_turntable.On -> true [assume A_turntable.On].
  Event A_turntable_c_on: guard: A_turntable.Off and S_atinput.On -> true [assume A_turntable.Off and S_atinput.On].

Constructing output CIF specification.
Syntesizing supervisor 2.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_gripperclose        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_transfer2pickpos    1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_x2distributing      2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_x2testing           3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   A_zdown               4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_gripper             5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_Hinitialized        6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_product4            7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_transfer_atdrop     8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_transfer_athalfway  9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_transfer_atpickup   10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   S_xpos_at1            11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   S_xpos_at2            12     1 * 2     2 * 2       2 * 2       100%
  14     location pointer  n/a   S_xpos_at3            13     1 * 2     2 * 2       2 * 2       100%
  15     location pointer  n/a   S_xpos_atdrop         14     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                15     30        60          60          100%

Applying automatic variable ordering:
  Number of hyperedges: 42

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   42 (total)                 1.00 (avg/edge) [before]
    Total span:                   39 (total)                 0.93 (avg/edge) [iteration 1]
    Total span:                   39 (total)                 0.93 (avg/edge) [iteration 2]
    Total span:                   39 (total)                 0.93 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   39 (total)                 0.93 (avg/edge) [before]
    Total span:                   37 (total)                 0.88 (avg/edge) [window 6..9]
    Total span:                   36 (total)                 0.86 (avg/edge) [window 7..10]
    Total span:                   35 (total)                 0.83 (avg/edge) [window 11..14]
    Total span:                   35 (total)                 0.83 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_gripperclose        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_transfer2pickpos    1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_x2distributing      2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_x2testing           3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   A_zdown               4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_Hinitialized        5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_gripper             6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_transfer_atdrop     7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_transfer_atpickup   8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_transfer_athalfway  9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_product4            10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   S_xpos_at3            11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   S_xpos_atdrop         12     1 * 2     2 * 2       2 * 2       100%
  14     location pointer  n/a   S_xpos_at1            13     1 * 2     2 * 2       2 * 2       100%
  15     location pointer  n/a   S_xpos_at2            14     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                15     30        60          60          100%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_product4.Off
Initial   (aut/locs init predicate):     S_xpos_at1.Off
Initial   (aut/locs init predicate):     S_xpos_at2.Off
Initial   (aut/locs init predicate):     S_xpos_at3.Off
Initial   (aut/locs init predicate):     S_xpos_atdrop.On
Initial   (aut/locs init predicate):     S_gripper.Off
Initial   (aut/locs init predicate):     S_transfer_atpickup.Off
Initial   (aut/locs init predicate):     S_transfer_atdrop.Off
Initial   (aut/locs init predicate):     S_transfer_athalfway.On
Initial   (aut/locs init predicate):     S_Hinitialized.Off
Initial   (aut/locs init predicate):     A_x2distributing.On
Initial   (aut/locs init predicate):     A_x2testing.On
Initial   (aut/locs init predicate):     A_zdown.Off
Initial   (aut/locs init predicate):     A_gripperclose.Off
Initial   (aut/locs init predicate):     A_transfer2pickpos.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    <bdd 15n 1p>
Initial   (uncontrolled system):         <bdd 15n 1p>
Initial   (system, combined init/inv):   <bdd 15n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_product4.Off
Marked    (aut/locs marker predicate):   S_xpos_at1.Off
Marked    (aut/locs marker predicate):   S_xpos_at2.Off
Marked    (aut/locs marker predicate):   S_xpos_at3.Off
Marked    (aut/locs marker predicate):   S_xpos_atdrop.On
Marked    (aut/locs marker predicate):   S_gripper.Off
Marked    (aut/locs marker predicate):   S_transfer_atpickup.Off
Marked    (aut/locs marker predicate):   S_transfer_atdrop.Off
Marked    (aut/locs marker predicate):   S_transfer_athalfway.On
Marked    (aut/locs marker predicate):   S_Hinitialized.Off
Marked    (aut/locs marker predicate):   A_x2distributing.On
Marked    (aut/locs marker predicate):   A_x2testing.On
Marked    (aut/locs marker predicate):   A_zdown.Off
Marked    (aut/locs marker predicate):   A_gripperclose.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  <bdd 14n 1p>
Marked    (uncontrolled system):         <bdd 14n 1p>
Marked    (system, combined marked/inv): <bdd 14n 1p>

State/event exclusion requirements:
  Event "A_x2distributing_c_on" needs:
    S_Hinitialized.On
    (S_transfer_athalfway.Off or S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On)) and ((S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On)) and (S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On)))
  Event "A_x2distributing_c_off" needs:
    S_Hinitialized.On
    (S_gripper.Off or S_transfer_athalfway.Off or (S_product4.Off or (S_xpos_at1.On or S_xpos_at2.On))) and (S_gripper.Off or (S_transfer_athalfway.Off or S_product4.On) or (S_xpos_at3.On or (S_xpos_at1.On or S_xpos_at2.On))) and ((S_gripper.Off or S_transfer_athalfway.On or (S_xpos_at1.On or S_xpos_at2.On)) and S_gripper.On)
  Event "A_x2testing_c_on" needs:
    S_Hinitialized.On
  Event "A_x2testing_c_off" needs:
    S_Hinitialized.On
  Event "A_zdown_c_on" needs:
    S_Hinitialized.On
  Event "A_zdown_c_off" needs:
    S_Hinitialized.On
  Event "A_gripperclose_c_on" needs:
    S_Hinitialized.On
  Event "A_gripperclose_c_off" needs:
    S_Hinitialized.On
  Event "A_transfer2pickpos_c_on" needs:
    S_transfer_atdrop.On or S_transfer_atdrop.Off and S_transfer_athalfway.On and (S_product4.On and S_xpos_at3.On)
  Event "A_transfer2pickpos_c_off" needs:
    S_transfer_atpickup.On or S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_product4.Off)

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off)
    Edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On)
    Edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On) (assignments: A_x2distributing := A_x2distributing.Off)
    Edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off) (assignments: A_x2distributing := A_x2distributing.On)
    Edge: (event: A_x2testing_c_off) (guard: A_x2testing.On) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: A_zdown.On) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: A_zdown.Off) (assignments: A_zdown := A_zdown.On)
    Edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On) (assignments: A_gripperclose := A_gripperclose.Off)
    Edge: (event: A_gripperclose_c_on) (guard: A_gripperclose.Off) (assignments: A_gripperclose := A_gripperclose.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_x2distributing_c_off) (guard: A_x2distributing.On) (assignments: A_x2distributing := A_x2distributing.Off): guard: A_x2distributing.On -> (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.Off or S_product4.Off or (S_xpos_at1.On or S_xpos_at2.On))) and ((A_x2distributing.Off or S_Hinitialized.Off or (S_gripper.Off or S_transfer_athalfway.Off) or (S_product4.On or S_xpos_at3.On or (S_xpos_at1.On or S_xpos_at2.On))) and (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.On or (S_xpos_at1.On or S_xpos_at2.On)))) and ((A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.On)) and ((A_x2distributing.Off or S_Hinitialized.On) and A_x2distributing.On)) [requirement: (S_Hinitialized.Off or (S_gripper.Off or S_transfer_athalfway.Off) or (S_product4.Off or (S_xpos_at1.On or S_xpos_at2.On))) and (S_Hinitialized.Off or (S_gripper.Off or S_transfer_athalfway.Off) or (S_product4.On or S_xpos_at3.On or (S_xpos_at1.On or S_xpos_at2.On))) and ((S_Hinitialized.Off or S_gripper.Off or (S_transfer_athalfway.On or (S_xpos_at1.On or S_xpos_at2.On))) and ((S_Hinitialized.Off or S_gripper.On) and S_Hinitialized.On))].
Edge (event: A_x2distributing_c_on) (guard: A_x2distributing.Off) (assignments: A_x2distributing := A_x2distributing.On): guard: A_x2distributing.Off -> A_x2distributing.Off and (A_x2distributing.On or (S_Hinitialized.Off or S_transfer_athalfway.Off) or (S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2distributing.On or S_Hinitialized.On))) [requirement: (S_Hinitialized.Off or S_transfer_athalfway.Off or (S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and (S_Hinitialized.Off or S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On)) and ((S_Hinitialized.Off or S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On)) and S_Hinitialized.On)].
Edge (event: A_x2testing_c_off) (guard: A_x2testing.On) (assignments: A_x2testing := A_x2testing.Off): guard: A_x2testing.On -> A_x2testing.On and S_Hinitialized.On [requirement: S_Hinitialized.On].
Edge (event: A_x2testing_c_on) (guard: A_x2testing.Off) (assignments: A_x2testing := A_x2testing.On): guard: A_x2testing.Off -> A_x2testing.Off and S_Hinitialized.On [requirement: S_Hinitialized.On].
Edge (event: A_zdown_c_off) (guard: A_zdown.On) (assignments: A_zdown := A_zdown.Off): guard: A_zdown.On -> A_zdown.On and S_Hinitialized.On [requirement: S_Hinitialized.On].
Edge (event: A_zdown_c_on) (guard: A_zdown.Off) (assignments: A_zdown := A_zdown.On): guard: A_zdown.Off -> A_zdown.Off and S_Hinitialized.On [requirement: S_Hinitialized.On].
Edge (event: A_gripperclose_c_off) (guard: A_gripperclose.On) (assignments: A_gripperclose := A_gripperclose.Off): guard: A_gripperclose.On -> A_gripperclose.On and S_Hinitialized.On [requirement: S_Hinitialized.On].
Edge (event: A_gripperclose_c_on) (guard: A_gripperclose.Off) (assignments: A_gripperclose := A_gripperclose.On): guard: A_gripperclose.Off -> A_gripperclose.Off and S_Hinitialized.On [requirement: S_Hinitialized.On].
Edge (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off): guard: A_transfer2pickpos.On -> A_transfer2pickpos.On and S_transfer_atpickup.On or A_transfer2pickpos.On and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_product4.Off) [requirement: S_transfer_atpickup.On or S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_product4.Off)].
Edge (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off) (assignments: A_transfer2pickpos := A_transfer2pickpos.On): guard: A_transfer2pickpos.Off -> A_transfer2pickpos.Off and S_transfer_atdrop.On or A_transfer2pickpos.Off and S_transfer_atdrop.Off and (S_transfer_athalfway.On and (S_product4.On and S_xpos_at3.On)) [requirement: S_transfer_atdrop.On or S_transfer_atdrop.Off and S_transfer_athalfway.On and (S_product4.On and S_xpos_at3.On)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off)
    Edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On)
    Edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.Off or S_product4.Off or (S_xpos_at1.On or S_xpos_at2.On))) and ((A_x2distributing.Off or S_Hinitialized.Off or (S_gripper.Off or S_transfer_athalfway.Off) or (S_product4.On or S_xpos_at3.On or (S_xpos_at1.On or S_xpos_at2.On))) and (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.On or (S_xpos_at1.On or S_xpos_at2.On)))) and ((A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.On)) and ((A_x2distributing.Off or S_Hinitialized.On) and A_x2distributing.On))) (assignments: A_x2distributing := A_x2distributing.Off)
    Edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off -> A_x2distributing.Off and (A_x2distributing.On or (S_Hinitialized.Off or S_transfer_athalfway.Off) or (S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2distributing.On or S_Hinitialized.On)))) (assignments: A_x2distributing := A_x2distributing.On)
    Edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> A_x2testing.On and S_Hinitialized.On) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> A_x2testing.Off and S_Hinitialized.On) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: A_zdown.On -> A_zdown.On and S_Hinitialized.On) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> A_zdown.Off and S_Hinitialized.On) (assignments: A_zdown := A_zdown.On)
    Edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> A_gripperclose.On and S_Hinitialized.On) (assignments: A_gripperclose := A_gripperclose.Off)
    Edge: (event: A_gripperclose_c_on) (guard: A_gripperclose.Off -> A_gripperclose.Off and S_Hinitialized.On) (assignments: A_gripperclose := A_gripperclose.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On -> A_transfer2pickpos.On and S_transfer_atpickup.On or A_transfer2pickpos.On and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_product4.Off)) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off -> A_transfer2pickpos.Off and S_transfer_atdrop.On or A_transfer2pickpos.Off and S_transfer_atdrop.Off and (S_transfer_athalfway.On and (S_product4.On and S_xpos_at3.On))) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 14n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 14n 1p> -> <bdd 13n 1p> [backward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 1p> -> <bdd 12n 1p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 1p> -> A_gripperclose.Off and A_x2distributing.On and (A_x2testing.On and (A_zdown.Off and S_Hinitialized.Off)) and (S_gripper.Off and S_transfer_atdrop.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_xpos_atdrop.On))) [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gripperclose.Off and A_x2distributing.On and (A_x2testing.On and (A_zdown.Off and S_Hinitialized.Off)) and (S_gripper.Off and S_transfer_atdrop.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_xpos_atdrop.On))) -> <bdd 14n 3p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 3p> -> <bdd 13n 3p> [backward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 3p> -> <bdd 12n 3p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 3p> -> <bdd 11n 3p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 3p> -> <bdd 13n 9p> [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 9p> -> <bdd 12n 9p> [backward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 9p> -> <bdd 18n 12p> [backward reach with edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off -> A_x2distributing.Off and (A_x2distributing.On or (S_Hinitialized.Off or S_transfer_athalfway.Off) or (S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2distributing.On or S_Hinitialized.On)))) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 12p> -> <bdd 19n 21p> [backward reach with edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> A_x2testing.Off and S_Hinitialized.On) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 21p> -> <bdd 17n 30p> [backward reach with edge: (event: A_zdown_c_off) (guard: A_zdown.On -> A_zdown.On and S_Hinitialized.On) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 30p> -> <bdd 18n 42p> [backward reach with edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> A_gripperclose.On and S_Hinitialized.On) (assignments: A_gripperclose := A_gripperclose.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 18n 42p> -> <bdd 17n 42p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 42p> -> <bdd 15n 30p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 30p> -> <bdd 14n 18p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 18p> -> <bdd 18n 30p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 30p> -> <bdd 16n 20p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 20p> -> <bdd 12n 10p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 10p> -> (A_x2distributing.On or (S_xpos_at3.Off or S_xpos_atdrop.On)) and ((A_x2distributing.On or S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at1.Off)) and (A_x2distributing.On or S_xpos_at3.On or (S_xpos_atdrop.On or (S_xpos_at1.On or S_xpos_at2.Off)))) [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_x2distributing.On or (S_xpos_at3.Off or S_xpos_atdrop.On)) and ((A_x2distributing.On or S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at1.Off)) and (A_x2distributing.On or S_xpos_at3.On or (S_xpos_atdrop.On or (S_xpos_at1.On or S_xpos_at2.Off)))) -> <bdd 10n 13p> [backward reach with edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off -> A_x2distributing.Off and (A_x2distributing.On or (S_Hinitialized.Off or S_transfer_athalfway.Off) or (S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2distributing.On or S_Hinitialized.On)))) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 10n 13p> -> (A_x2distributing.On or S_Hinitialized.Off or (S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at1.Off))) and (A_x2distributing.On or (S_Hinitialized.Off or S_xpos_at3.On) or (S_xpos_atdrop.On or (S_xpos_at1.On or S_xpos_at2.Off))) and ((A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.Off or S_xpos_atdrop.On)) and ((A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at1.Off))) and (A_x2distributing.On or (S_Hinitialized.On or S_xpos_at3.On) or (S_xpos_atdrop.On or (S_xpos_at1.On or S_xpos_at2.Off))))) [backward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_x2distributing.On or S_Hinitialized.Off or (S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at1.Off))) and (A_x2distributing.On or (S_Hinitialized.Off or S_xpos_at3.On) or (S_xpos_atdrop.On or (S_xpos_at1.On or S_xpos_at2.Off))) and ((A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.Off or S_xpos_atdrop.On)) and ((A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at1.Off))) and (A_x2distributing.On or (S_Hinitialized.On or S_xpos_at3.On) or (S_xpos_atdrop.On or (S_xpos_at1.On or S_xpos_at2.Off))))) -> (A_x2distributing.On or S_Hinitialized.Off or (S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at2.Off))) and ((A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.Off or S_xpos_atdrop.On)) and (A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at2.Off)))) [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_x2distributing.On or S_Hinitialized.Off or (S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at2.Off))) and ((A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.Off or S_xpos_atdrop.On)) and (A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.On or (S_xpos_atdrop.On or S_xpos_at2.Off)))) -> A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.Off or S_xpos_atdrop.On) [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2distributing.On or S_Hinitialized.On or (S_xpos_at3.Off or S_xpos_atdrop.On) -> true [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 15n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 15n 1p> -> <bdd 14n 1p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 1p> -> <bdd 13n 1p> [forward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 1p> -> <bdd 12n 1p> [forward reach with edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 1p> -> A_gripperclose.Off and A_transfer2pickpos.Off and (A_x2distributing.On and (A_x2testing.On and A_zdown.Off)) and (S_transfer_atdrop.Off and S_transfer_atpickup.Off and (S_xpos_at3.Off and (S_xpos_at1.Off and S_xpos_at2.Off))) [forward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gripperclose.Off and A_transfer2pickpos.Off and (A_x2distributing.On and (A_x2testing.On and A_zdown.Off)) and (S_transfer_atdrop.Off and S_transfer_atpickup.Off and (S_xpos_at3.Off and (S_xpos_at1.Off and S_xpos_at2.Off))) -> <bdd 12n 2p> [forward reach with edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> A_x2testing.On and S_Hinitialized.On) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 2p> -> <bdd 11n 3p> [forward reach with edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> A_zdown.Off and S_Hinitialized.On) (assignments: A_zdown := A_zdown.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 3p> -> <bdd 13n 4p> [forward reach with edge: (event: A_gripperclose_c_on) (guard: A_gripperclose.Off -> A_gripperclose.Off and S_Hinitialized.On) (assignments: A_gripperclose := A_gripperclose.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 13n 4p> -> <bdd 14n 8p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 8p> -> <bdd 15n 12p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 12p> -> <bdd 16n 16p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 16p> -> <bdd 17n 32p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 32p> -> <bdd 18n 48p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 48p> -> <bdd 12n 12p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 12p> -> <bdd 25n 23p> [forward reach with edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.Off or S_product4.Off or (S_xpos_at1.On or S_xpos_at2.On))) and ((A_x2distributing.Off or S_Hinitialized.Off or (S_gripper.Off or S_transfer_athalfway.Off) or (S_product4.On or S_xpos_at3.On or (S_xpos_at1.On or S_xpos_at2.On))) and (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.On or (S_xpos_at1.On or S_xpos_at2.On)))) and ((A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.On)) and ((A_x2distributing.Off or S_Hinitialized.On) and A_x2distributing.On))) (assignments: A_x2distributing := A_x2distributing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 25n 23p> -> <bdd 34n 30p> [forward reach with edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off -> A_transfer2pickpos.Off and S_transfer_atdrop.On or A_transfer2pickpos.Off and S_transfer_atdrop.Off and (S_transfer_athalfway.On and (S_product4.On and S_xpos_at3.On))) (assignments: A_transfer2pickpos := A_transfer2pickpos.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 34n 30p> -> <bdd 33n 30p> [forward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 30p> -> <bdd 32n 28p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 32n 28p> -> <bdd 30n 28p> [forward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 30n 28p> -> <bdd 29n 28p> [forward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 28p> -> <bdd 27n 29p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 29p> -> <bdd 22n 34p> [forward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 34p> -> <bdd 20n 34p> [forward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 34p> -> <bdd 19n 38p> [forward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 38p> -> <bdd 17n 40p> [forward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 40p> -> <bdd 13n 20p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 13n 20p> -> <bdd 10n 12p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 10n 12p> [fixed point].
Controlled behavior: true -> <bdd 10n 12p>.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 14n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 14n 1p> -> <bdd 13n 1p> [backward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 13n 1p> -> <bdd 12n 1p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 11n 1p> -> A_gripperclose.Off and A_x2distributing.On and (A_x2testing.On and (A_zdown.Off and S_Hinitialized.Off)) and (S_transfer_atdrop.Off and S_transfer_atpickup.Off and (S_xpos_at3.Off and (S_xpos_at1.Off and S_xpos_at2.Off))) [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: A_gripperclose.Off and A_x2distributing.On and (A_x2testing.On and (A_zdown.Off and S_Hinitialized.Off)) and (S_transfer_atdrop.Off and S_transfer_atpickup.Off and (S_xpos_at3.Off and (S_xpos_at1.Off and S_xpos_at2.Off))) -> A_gripperclose.Off and A_x2distributing.On and (A_x2testing.On and A_zdown.Off) and (S_transfer_atdrop.Off and S_transfer_atpickup.Off and (S_xpos_at3.Off and (S_xpos_at1.Off and S_xpos_at2.Off))) [backward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: A_gripperclose.Off and A_x2distributing.On and (A_x2testing.On and A_zdown.Off) and (S_transfer_atdrop.Off and S_transfer_atpickup.Off and (S_xpos_at3.Off and (S_xpos_at1.Off and S_xpos_at2.Off))) -> <bdd 16n 2p> [backward reach with edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off -> A_x2distributing.Off and (A_x2distributing.On or (S_Hinitialized.Off or S_transfer_athalfway.Off) or (S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2distributing.On or S_Hinitialized.On)))) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 16n 2p> -> <bdd 17n 3p> [backward reach with edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> A_x2testing.Off and S_Hinitialized.On) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 17n 3p> -> <bdd 15n 4p> [backward reach with edge: (event: A_zdown_c_off) (guard: A_zdown.On -> A_zdown.On and S_Hinitialized.On) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 15n 4p> -> <bdd 16n 6p> [backward reach with edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> A_gripperclose.On and S_Hinitialized.On) (assignments: A_gripperclose := A_gripperclose.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 16n 6p> -> <bdd 17n 10p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 17n 10p> -> <bdd 18n 14p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 18n 14p> -> <bdd 19n 18p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 19n 18p> -> <bdd 18n 18p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 18n 18p> -> <bdd 20n 36p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 20n 36p> -> <bdd 22n 54p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 22n 54p> -> <bdd 16n 15p> [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 16n 15p> -> <bdd 24n 24p> [backward reach with edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off -> A_x2distributing.Off and (A_x2distributing.On or (S_Hinitialized.Off or S_transfer_athalfway.Off) or (S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2distributing.On or S_Hinitialized.On)))) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 24n 24p> -> <bdd 22n 21p> [backward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 22n 21p> -> <bdd 23n 27p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 23n 27p> -> <bdd 17n 33p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward controlled-behavior: <bdd 17n 33p> -> <bdd 10n 12p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 12p>]
Backward reachability: iteration 4.
Backward controlled-behavior: <bdd 10n 12p> [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 10n 21p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.Off or S_product4.Off or (S_xpos_at1.On or S_xpos_at2.On))) and ((A_x2distributing.Off or S_Hinitialized.Off or (S_gripper.Off or S_transfer_athalfway.Off) or (S_product4.On or S_xpos_at3.On or (S_xpos_at1.On or S_xpos_at2.On))) and (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.On or (S_xpos_at1.On or S_xpos_at2.On)))) and ((A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.On)) and ((A_x2distributing.Off or S_Hinitialized.On) and A_x2distributing.On))) (assignments: A_x2distributing := A_x2distributing.Off): guard: (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.Off or S_product4.Off or (S_xpos_at1.On or S_xpos_at2.On))) and ((A_x2distributing.Off or S_Hinitialized.Off or (S_gripper.Off or S_transfer_athalfway.Off) or (S_product4.On or S_xpos_at3.On or (S_xpos_at1.On or S_xpos_at2.On))) and (A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.Off) or (S_transfer_athalfway.On or (S_xpos_at1.On or S_xpos_at2.On)))) and ((A_x2distributing.Off or (S_Hinitialized.Off or S_gripper.On)) and ((A_x2distributing.Off or S_Hinitialized.On) and A_x2distributing.On)) -> <bdd 17n 11p>.
Edge (event: A_x2distributing_c_on) (guard: A_x2distributing.Off -> A_x2distributing.Off and (A_x2distributing.On or (S_Hinitialized.Off or S_transfer_athalfway.Off) or (S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2distributing.On or S_Hinitialized.On)))) (assignments: A_x2distributing := A_x2distributing.On): guard: A_x2distributing.Off and (A_x2distributing.On or (S_Hinitialized.Off or S_transfer_athalfway.Off) or (S_product4.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.Off or (S_product4.On or S_xpos_atdrop.On))) and ((A_x2distributing.On or S_Hinitialized.Off or (S_transfer_athalfway.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2distributing.On or S_Hinitialized.On))) -> <bdd 14n 9p>.
Edge (event: A_x2testing_c_off) (guard: A_x2testing.On -> A_x2testing.On and S_Hinitialized.On) (assignments: A_x2testing := A_x2testing.Off): guard: A_x2testing.On and S_Hinitialized.On -> <bdd 12n 12p>.
Edge (event: A_x2testing_c_on) (guard: A_x2testing.Off -> A_x2testing.Off and S_Hinitialized.On) (assignments: A_x2testing := A_x2testing.On): guard: A_x2testing.Off and S_Hinitialized.On -> <bdd 12n 12p>.
Edge (event: A_zdown_c_off) (guard: A_zdown.On -> A_zdown.On and S_Hinitialized.On) (assignments: A_zdown := A_zdown.Off): guard: A_zdown.On and S_Hinitialized.On -> <bdd 12n 12p>.
Edge (event: A_zdown_c_on) (guard: A_zdown.Off -> A_zdown.Off and S_Hinitialized.On) (assignments: A_zdown := A_zdown.On): guard: A_zdown.Off and S_Hinitialized.On -> <bdd 12n 12p>.
Edge (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> A_gripperclose.On and S_Hinitialized.On) (assignments: A_gripperclose := A_gripperclose.Off): guard: A_gripperclose.On and S_Hinitialized.On -> <bdd 12n 12p>.
Edge (event: A_gripperclose_c_on) (guard: A_gripperclose.Off -> A_gripperclose.Off and S_Hinitialized.On) (assignments: A_gripperclose := A_gripperclose.On): guard: A_gripperclose.Off and S_Hinitialized.On -> <bdd 12n 12p>.
Edge (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On -> A_transfer2pickpos.On and S_transfer_atpickup.On or A_transfer2pickpos.On and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_product4.Off)) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off): guard: A_transfer2pickpos.On and S_transfer_atpickup.On or A_transfer2pickpos.On and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_product4.Off) -> <bdd 12n 8p>.
Edge (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off -> A_transfer2pickpos.Off and S_transfer_atdrop.On or A_transfer2pickpos.Off and S_transfer_atdrop.Off and (S_transfer_athalfway.On and (S_product4.On and S_xpos_at3.On))) (assignments: A_transfer2pickpos := A_transfer2pickpos.On): guard: A_transfer2pickpos.Off and S_transfer_atdrop.On or A_transfer2pickpos.Off and S_transfer_atdrop.Off and (S_transfer_athalfway.On and (S_product4.On and S_xpos_at3.On)) -> <bdd 14n 5p>.

Final synthesis result:
  State: (controlled-behavior: <bdd 10n 12p>)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at1.Off and S_xpos_at2.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atdrop.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off)
    Edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On)
    Edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> <bdd 17n 11p>) (assignments: A_x2distributing := A_x2distributing.Off)
    Edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off -> <bdd 14n 9p>) (assignments: A_x2distributing := A_x2distributing.On)
    Edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> <bdd 12n 12p>) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> <bdd 12n 12p>) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: A_zdown.On -> <bdd 12n 12p>) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> <bdd 12n 12p>) (assignments: A_zdown := A_zdown.On)
    Edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> <bdd 12n 12p>) (assignments: A_gripperclose := A_gripperclose.Off)
    Edge: (event: A_gripperclose_c_on) (guard: A_gripperclose.Off -> <bdd 12n 12p>) (assignments: A_gripperclose := A_gripperclose.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On -> <bdd 12n 8p>) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off -> <bdd 14n 5p>) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)

Controlled system:                     exactly 5,120 states.

Initial (synthesis result):            <bdd 10n 12p>
Initial (uncontrolled system):         <bdd 15n 1p>
Initial (controlled system):           <bdd 15n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_x2distributing_c_off: guard: <bdd 17n 11p> -> true [assume <bdd 17n 11p>].
  Event A_x2distributing_c_on: guard: <bdd 14n 9p> -> true [assume <bdd 14n 9p>].
  Event A_x2testing_c_off: guard: <bdd 12n 12p> -> true [assume <bdd 12n 12p>].
  Event A_x2testing_c_on: guard: <bdd 12n 12p> -> true [assume <bdd 12n 12p>].
  Event A_zdown_c_off: guard: <bdd 12n 12p> -> true [assume <bdd 12n 12p>].
  Event A_zdown_c_on: guard: <bdd 12n 12p> -> true [assume <bdd 12n 12p>].
  Event A_gripperclose_c_off: guard: <bdd 12n 12p> -> true [assume <bdd 12n 12p>].
  Event A_gripperclose_c_on: guard: <bdd 12n 12p> -> true [assume <bdd 12n 12p>].
  Event A_transfer2pickpos_c_off: guard: <bdd 12n 8p> -> true [assume <bdd 12n 8p>].
  Event A_transfer2pickpos_c_on: guard: <bdd 14n 5p> -> true [assume <bdd 14n 5p>].

Constructing output CIF specification.
Syntesizing supervisor 3.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name            Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_pusher1       0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_pusher3       1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_x2testing     2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_zdown         3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_Dinitialized  4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_gripper       5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_product1      6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_product2      7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_product3      8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_product4      9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_xpos_at1      10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   S_xpos_at2      11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   S_xpos_at3      12     1 * 2     2 * 2       2 * 2       100%
  14     location pointer  n/a   S_xpos_atdrop   13     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  Total                                          14     28        56          56          100%

Applying automatic variable ordering:
  Number of hyperedges: 35

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   34 (total)                 0.97 (avg/edge) [before]
    Total span:                   34 (total)                 0.97 (avg/edge) [iteration 1]
    Total span:                   34 (total)                 0.97 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   34 (total)                 0.97 (avg/edge) [before]
    Total span:                   33 (total)                 0.94 (avg/edge) [window 6..9]
    Total span:                   33 (total)                 0.94 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name            Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_pusher1       0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_pusher3       1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_x2testing     2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_zdown         3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_Dinitialized  4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_gripper       5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_product4      6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_product3      7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_product2      8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_product1      9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_xpos_at1      10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   S_xpos_at2      11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   S_xpos_at3      12     1 * 2     2 * 2       2 * 2       100%
  14     location pointer  n/a   S_xpos_atdrop   13     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  Total                                          14     28        56          56          100%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_product1.Off
Initial   (aut/locs init predicate):     S_product2.Off
Initial   (aut/locs init predicate):     S_product3.Off
Initial   (aut/locs init predicate):     S_Dinitialized.Off
Initial   (aut/locs init predicate):     A_pusher1.Off
Initial   (aut/locs init predicate):     A_pusher3.Off
Initial   (aut/locs init predicate):     S_product4.Off
Initial   (aut/locs init predicate):     S_xpos_at1.Off
Initial   (aut/locs init predicate):     S_xpos_at2.Off
Initial   (aut/locs init predicate):     S_xpos_at3.Off
Initial   (aut/locs init predicate):     S_xpos_atdrop.On
Initial   (aut/locs init predicate):     S_gripper.Off
Initial   (aut/locs init predicate):     A_x2testing.On
Initial   (aut/locs init predicate):     A_zdown.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    <bdd 14n 1p>
Initial   (uncontrolled system):         <bdd 14n 1p>
Initial   (system, combined init/inv):   <bdd 14n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_product1.Off
Marked    (aut/locs marker predicate):   S_product2.Off
Marked    (aut/locs marker predicate):   S_product3.Off
Marked    (aut/locs marker predicate):   S_Dinitialized.Off
Marked    (aut/locs marker predicate):   A_pusher1.Off
Marked    (aut/locs marker predicate):   A_pusher3.Off
Marked    (aut/locs marker predicate):   S_product4.Off
Marked    (aut/locs marker predicate):   S_xpos_at1.Off
Marked    (aut/locs marker predicate):   S_xpos_at2.Off
Marked    (aut/locs marker predicate):   S_xpos_at3.Off
Marked    (aut/locs marker predicate):   S_xpos_atdrop.On
Marked    (aut/locs marker predicate):   S_gripper.Off
Marked    (aut/locs marker predicate):   A_x2testing.On
Marked    (aut/locs marker predicate):   A_zdown.Off
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  <bdd 14n 1p>
Marked    (uncontrolled system):         <bdd 14n 1p>
Marked    (system, combined marked/inv): <bdd 14n 1p>

State/event exclusion requirements:
  Event "A_pusher1_c_on" needs:
    S_Dinitialized.On
  Event "A_pusher1_c_off" needs:
    S_Dinitialized.On
  Event "A_pusher3_c_on" needs:
    S_Dinitialized.On
  Event "A_pusher3_c_off" needs:
    S_Dinitialized.On
  Event "A_zdown_c_on" needs:
    <bdd 17n 13p>
  Event "A_x2testing_c_off" needs:
    S_gripper.Off and ((S_gripper.On or S_product3.Off or (S_product2.Off or S_xpos_atdrop.On)) and (S_gripper.On or (S_product3.Off or S_product2.On) or (S_product1.Off or (S_xpos_at2.On or S_xpos_atdrop.On)))) and ((S_gripper.On or S_product3.Off or (S_product2.On or (S_product1.On or S_xpos_atdrop.On))) and (S_gripper.On or S_product3.On or (S_product2.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((S_gripper.On or (S_product3.On or S_product2.On) or (S_product1.Off or S_xpos_at2.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (S_gripper.On or S_product3.On or (S_product2.On or (S_product1.On or S_xpos_atdrop.On)))))
  Event "A_x2testing_c_on" needs:
    <bdd 11n 10p>

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off)
    Edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off)
    Edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher1_c_off) (guard: A_pusher1.On) (assignments: A_pusher1 := A_pusher1.Off)
    Edge: (event: A_pusher1_c_on) (guard: A_pusher1.Off) (assignments: A_pusher1 := A_pusher1.On)
    Edge: (event: A_pusher3_c_off) (guard: A_pusher3.On) (assignments: A_pusher3 := A_pusher3.Off)
    Edge: (event: A_pusher3_c_on) (guard: A_pusher3.Off) (assignments: A_pusher3 := A_pusher3.On)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: A_x2testing_c_off) (guard: A_x2testing.On) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: A_zdown.On) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: A_zdown.Off) (assignments: A_zdown := A_zdown.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_pusher1_c_off) (guard: A_pusher1.On) (assignments: A_pusher1 := A_pusher1.Off): guard: A_pusher1.On -> A_pusher1.On and S_Dinitialized.On [requirement: S_Dinitialized.On].
Edge (event: A_pusher1_c_on) (guard: A_pusher1.Off) (assignments: A_pusher1 := A_pusher1.On): guard: A_pusher1.Off -> A_pusher1.Off and S_Dinitialized.On [requirement: S_Dinitialized.On].
Edge (event: A_pusher3_c_off) (guard: A_pusher3.On) (assignments: A_pusher3 := A_pusher3.Off): guard: A_pusher3.On -> A_pusher3.On and S_Dinitialized.On [requirement: S_Dinitialized.On].
Edge (event: A_pusher3_c_on) (guard: A_pusher3.Off) (assignments: A_pusher3 := A_pusher3.On): guard: A_pusher3.Off -> A_pusher3.Off and S_Dinitialized.On [requirement: S_Dinitialized.On].
Edge (event: A_x2testing_c_off) (guard: A_x2testing.On) (assignments: A_x2testing := A_x2testing.Off): guard: A_x2testing.On -> <bdd 11n 10p> [requirement: S_gripper.Off and ((S_gripper.On or S_product3.Off or (S_product2.Off or S_xpos_atdrop.On)) and (S_gripper.On or (S_product3.Off or S_product2.On) or (S_product1.Off or (S_xpos_at2.On or S_xpos_atdrop.On)))) and ((S_gripper.On or S_product3.Off or (S_product2.On or (S_product1.On or S_xpos_atdrop.On))) and (S_gripper.On or S_product3.On or (S_product2.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and ((S_gripper.On or (S_product3.On or S_product2.On) or (S_product1.Off or S_xpos_at2.On or (S_xpos_at3.On or S_xpos_atdrop.On))) and (S_gripper.On or S_product3.On or (S_product2.On or (S_product1.On or S_xpos_atdrop.On)))))].
Edge (event: A_x2testing_c_on) (guard: A_x2testing.Off) (assignments: A_x2testing := A_x2testing.On): guard: A_x2testing.Off -> <bdd 12n 10p> [requirement: <bdd 11n 10p>].
Edge (event: A_zdown_c_on) (guard: A_zdown.Off) (assignments: A_zdown := A_zdown.On): guard: A_zdown.Off -> <bdd 18n 13p> [requirement: <bdd 17n 13p>].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off)
    Edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off)
    Edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and S_Dinitialized.On) (assignments: A_pusher1 := A_pusher1.Off)
    Edge: (event: A_pusher1_c_on) (guard: A_pusher1.Off -> A_pusher1.Off and S_Dinitialized.On) (assignments: A_pusher1 := A_pusher1.On)
    Edge: (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and S_Dinitialized.On) (assignments: A_pusher3 := A_pusher3.Off)
    Edge: (event: A_pusher3_c_on) (guard: A_pusher3.Off -> A_pusher3.Off and S_Dinitialized.On) (assignments: A_pusher3 := A_pusher3.On)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> <bdd 11n 10p>) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> <bdd 12n 10p>) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: A_zdown.On) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> <bdd 18n 13p>) (assignments: A_zdown := A_zdown.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 14n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 14n 1p> -> <bdd 13n 1p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 1p> -> <bdd 12n 1p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 1p> -> A_pusher1.Off and A_pusher3.Off and (A_x2testing.On and (A_zdown.Off and S_gripper.Off)) and (S_product4.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))) [backward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher1.Off and A_pusher3.Off and (A_x2testing.On and (A_zdown.Off and S_gripper.Off)) and (S_product4.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))) -> <bdd 14n 2p> [backward reach with edge: (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and S_Dinitialized.On) (assignments: A_pusher1 := A_pusher1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 2p> -> <bdd 13n 3p> [backward reach with edge: (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and S_Dinitialized.On) (assignments: A_pusher3 := A_pusher3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 3p> -> <bdd 12n 3p> [backward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 3p> -> <bdd 11n 3p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 3p> -> A_pusher1.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_gripper.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or (A_pusher1.Off and A_pusher3.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_gripper.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (A_zdown.Off and S_gripper.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))) [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher1.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_gripper.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or (A_pusher1.Off and A_pusher3.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_gripper.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (A_zdown.Off and S_gripper.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))) -> A_pusher1.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and (S_gripper.Off and S_xpos_atdrop.On)) or (A_pusher1.Off and (A_pusher3.On and A_x2testing.On) and (A_zdown.Off and S_Dinitialized.On and (S_gripper.Off and S_xpos_atdrop.On)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (A_zdown.Off and (S_gripper.Off and S_xpos_atdrop.On))) [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher1.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and (S_gripper.Off and S_xpos_atdrop.On)) or (A_pusher1.Off and (A_pusher3.On and A_x2testing.On) and (A_zdown.Off and S_Dinitialized.On and (S_gripper.Off and S_xpos_atdrop.On)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (A_zdown.Off and (S_gripper.Off and S_xpos_atdrop.On))) -> <bdd 12n 12p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 12p> -> <bdd 11n 12p> [backward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 12p> -> <bdd 25n 42p> [backward reach with edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> <bdd 12n 10p>) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 25n 42p> -> <bdd 21n 42p> [backward reach with edge: (event: A_zdown_c_off) (guard: A_zdown.On) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 21n 42p> -> <bdd 19n 39p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 39p> -> <bdd 15n 27p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 27p> -> <bdd 13n 21p> [backward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 21p> -> (A_x2testing.Off or (S_xpos_at1.Off or S_xpos_atdrop.On)) and ((A_x2testing.Off or S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On)) and (A_x2testing.Off or S_xpos_at1.On or (S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On)))) and ((A_x2testing.On or (S_xpos_at1.Off or S_xpos_atdrop.On)) and (A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On)) and ((A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On))) and (A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On)))) [backward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_x2testing.Off or (S_xpos_at1.Off or S_xpos_atdrop.On)) and ((A_x2testing.Off or S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On)) and (A_x2testing.Off or S_xpos_at1.On or (S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On)))) and ((A_x2testing.On or (S_xpos_at1.Off or S_xpos_atdrop.On)) and (A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On)) and ((A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On))) and (A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On)))) -> A_x2testing.On and (S_xpos_at2.On and S_xpos_atdrop.On) or (A_x2testing.On and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On) or A_x2testing.On and (S_xpos_at2.Off and S_xpos_at3.Off)) or (A_x2testing.Off and (S_xpos_at1.On and S_xpos_atdrop.On) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)))) [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On and (S_xpos_at2.On and S_xpos_atdrop.On) or (A_x2testing.On and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On) or A_x2testing.On and (S_xpos_at2.Off and S_xpos_at3.Off)) or (A_x2testing.Off and (S_xpos_at1.On and S_xpos_atdrop.On) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)))) -> A_x2testing.On and (S_xpos_at3.On and S_xpos_atdrop.On) or A_x2testing.On and S_xpos_at3.Off or (A_x2testing.Off and (S_xpos_at1.On and S_xpos_atdrop.On) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)))) [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On and (S_xpos_at3.On and S_xpos_atdrop.On) or A_x2testing.On and S_xpos_at3.Off or (A_x2testing.Off and (S_xpos_at1.On and S_xpos_atdrop.On) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)))) -> A_x2testing.On or A_x2testing.Off and (S_xpos_at1.On and S_xpos_atdrop.On) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On))) [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On or A_x2testing.Off and (S_xpos_at1.On and S_xpos_atdrop.On) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On))) -> <bdd 17n 18p> [backward reach with edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> <bdd 12n 10p>) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 17n 18p> -> <bdd 14n 15p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 15p> -> (A_x2testing.On or S_product2.Off or (S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On))) and ((A_x2testing.On or (S_product2.On or S_xpos_at1.On) or (S_xpos_at2.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2testing.On or S_product2.On or (S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On)))) [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_x2testing.On or S_product2.Off or (S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On))) and ((A_x2testing.On or (S_product2.On or S_xpos_at1.On) or (S_xpos_at2.Off or (S_xpos_at3.On or S_xpos_atdrop.On))) and (A_x2testing.On or S_product2.On or (S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On)))) -> A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On) [backward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On) -> A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.On or (S_xpos_at3.On or S_xpos_atdrop.Off)) [backward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On or S_xpos_at1.On or (S_xpos_at2.On or (S_xpos_at3.On or S_xpos_atdrop.Off)) -> true [backward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 14n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 14n 1p> -> <bdd 13n 1p> [forward reach with edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 1p> -> <bdd 12n 1p> [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 1p> -> A_pusher1.Off and A_pusher3.Off and (A_x2testing.On and (A_zdown.Off and S_gripper.Off)) and (S_product4.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))) [forward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher1.Off and A_pusher3.Off and (A_x2testing.On and (A_zdown.Off and S_gripper.Off)) and (S_product4.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))) -> <bdd 14n 2p> [forward reach with edge: (event: A_pusher1_c_on) (guard: A_pusher1.Off -> A_pusher1.Off and S_Dinitialized.On) (assignments: A_pusher1 := A_pusher1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 2p> -> <bdd 13n 3p> [forward reach with edge: (event: A_pusher3_c_on) (guard: A_pusher3.Off -> A_pusher3.Off and S_Dinitialized.On) (assignments: A_pusher3 := A_pusher3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 3p> -> <bdd 12n 3p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 3p> -> <bdd 11n 3p> [forward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 3p> -> A_pusher1.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or (A_pusher1.Off and A_pusher3.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (A_zdown.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) [forward reach with edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher1.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or (A_pusher1.Off and A_pusher3.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (A_zdown.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> <bdd 18n 6p> [forward reach with edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> <bdd 11n 10p>) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 6p> -> <bdd 21n 9p> [forward reach with edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> <bdd 18n 13p>) (assignments: A_zdown := A_zdown.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 21n 9p> -> <bdd 13n 3p> [forward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 3p> -> <bdd 12n 3p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 3p> -> <bdd 15n 4p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 4p> -> <bdd 15n 5p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 5p> -> <bdd 15n 6p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 6p> -> <bdd 14n 6p> [forward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 6p> -> <bdd 13n 6p> [forward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 6p> -> <bdd 12n 6p> [forward reach with edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 6p> -> <bdd 28n 17p> [forward reach with edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> <bdd 11n 10p>) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 17p> -> <bdd 40n 38p> [forward reach with edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> <bdd 18n 13p>) (assignments: A_zdown := A_zdown.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 40n 38p> -> <bdd 34n 28p> [forward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 34n 28p> -> <bdd 30n 23p> [forward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 30n 23p> -> <bdd 26n 20p> [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 20p> -> <bdd 24n 17p> [forward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 17p> -> <bdd 21n 15p> [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 15p> -> <bdd 19n 14p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 14p> -> <bdd 17n 17p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 17p> -> <bdd 17n 19p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 19p> -> <bdd 12n 9p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 9p> -> <bdd 11n 9p> [forward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 9p> -> <bdd 22n 19p> [forward reach with edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> <bdd 11n 10p>) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 19p> -> <bdd 21n 34p> [forward reach with edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> <bdd 18n 13p>) (assignments: A_zdown := A_zdown.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 21n 34p> -> <bdd 12n 13p> [forward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 13p> -> <bdd 12n 14p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 14p> -> <bdd 12n 15p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 15p> -> S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) [fixed point].
Controlled behavior: true -> S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)).

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 14n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 14n 1p> -> <bdd 13n 1p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: <bdd 13n 1p> -> <bdd 12n 1p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: <bdd 11n 1p> -> A_pusher1.Off and A_pusher3.Off and (A_x2testing.On and (A_zdown.Off and S_gripper.Off)) and (S_product4.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))) [backward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: A_pusher1.Off and A_pusher3.Off and (A_x2testing.On and (A_zdown.Off and S_gripper.Off)) and (S_product4.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))) -> <bdd 14n 2p> [backward reach with edge: (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and S_Dinitialized.On) (assignments: A_pusher1 := A_pusher1.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: <bdd 14n 2p> -> <bdd 13n 3p> [backward reach with edge: (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and S_Dinitialized.On) (assignments: A_pusher3 := A_pusher3.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: <bdd 13n 3p> -> <bdd 12n 3p> [backward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: <bdd 12n 3p> -> <bdd 11n 3p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: <bdd 11n 3p> -> A_pusher1.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or (A_pusher1.Off and A_pusher3.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (A_zdown.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) [backward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: A_pusher1.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or (A_pusher1.Off and A_pusher3.On and (A_x2testing.On and A_zdown.Off) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (A_zdown.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> A_pusher1.On and (A_x2testing.On and S_Dinitialized.On) and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or (A_pusher1.Off and (A_pusher3.On and A_x2testing.On) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) [backward reach with edge: (event: A_zdown_c_off) (guard: A_zdown.On) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward reachability: iteration 2.
Backward controlled-behavior: A_pusher1.On and (A_x2testing.On and S_Dinitialized.On) and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or (A_pusher1.Off and (A_pusher3.On and A_x2testing.On) and (S_Dinitialized.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) or A_pusher1.Off and (A_pusher3.Off and A_x2testing.On) and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off) [backward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off) -> A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off) [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off) -> A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) -> A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) -> <bdd 19n 14p> [backward reach with edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> <bdd 12n 10p>) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 19n 14p> -> <bdd 17n 13p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: <bdd 17n 13p> -> <bdd 13n 9p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: <bdd 13n 9p> -> A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off))) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off) or A_x2testing.Off and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)))) [backward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off))) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off) or A_x2testing.Off and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)))) -> A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off))) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off) or A_x2testing.Off and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_atdrop.Off))) [backward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward controlled-behavior: A_x2testing.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off))) or (A_x2testing.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off) or A_x2testing.Off and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_atdrop.Off))) -> S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) [backward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))]
Backward reachability: iteration 4.
Backward controlled-behavior: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: (S_xpos_at1.Off or S_xpos_at2.On or (S_xpos_at3.On or S_xpos_atdrop.On)) and (S_xpos_at1.On or S_xpos_at2.Off or (S_xpos_at3.On or S_xpos_atdrop.On)) and ((S_xpos_at1.On or S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On)) and (S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On))) [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and S_Dinitialized.On) (assignments: A_pusher1 := A_pusher1.Off): guard: A_pusher1.On and S_Dinitialized.On -> A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher1.On and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))).
Edge (event: A_pusher1_c_on) (guard: A_pusher1.Off -> A_pusher1.Off and S_Dinitialized.On) (assignments: A_pusher1 := A_pusher1.On): guard: A_pusher1.Off and S_Dinitialized.On -> A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher1.Off and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))).
Edge (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and S_Dinitialized.On) (assignments: A_pusher3 := A_pusher3.Off): guard: A_pusher3.On and S_Dinitialized.On -> A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher3.On and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))).
Edge (event: A_pusher3_c_on) (guard: A_pusher3.Off -> A_pusher3.Off and S_Dinitialized.On) (assignments: A_pusher3 := A_pusher3.On): guard: A_pusher3.Off and S_Dinitialized.On -> A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher3.Off and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))).
Edge (event: A_x2testing_c_off) (guard: A_x2testing.On -> <bdd 11n 10p>) (assignments: A_x2testing := A_x2testing.Off): guard: <bdd 11n 10p> -> <bdd 20n 10p>.
Edge (event: A_x2testing_c_on) (guard: A_x2testing.Off -> <bdd 12n 10p>) (assignments: A_x2testing := A_x2testing.On): guard: <bdd 12n 10p> -> <bdd 16n 10p>.
Edge (event: A_zdown_c_off) (guard: A_zdown.On) (assignments: A_zdown := A_zdown.Off): guard: A_zdown.On -> A_zdown.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)).
Edge (event: A_zdown_c_on) (guard: A_zdown.Off -> <bdd 18n 13p>) (assignments: A_zdown := A_zdown.On): guard: <bdd 18n 13p> -> <bdd 28n 13p>.

Final synthesis result:
  State: (controlled-behavior: S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))
    Edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off)
    Edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off)
    Edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher1.On and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))) (assignments: A_pusher1 := A_pusher1.Off)
    Edge: (event: A_pusher1_c_on) (guard: A_pusher1.Off -> A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher1.Off and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))) (assignments: A_pusher1 := A_pusher1.On)
    Edge: (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher3.On and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))) (assignments: A_pusher3 := A_pusher3.Off)
    Edge: (event: A_pusher3_c_on) (guard: A_pusher3.Off -> A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher3.Off and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))) (assignments: A_pusher3 := A_pusher3.On)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> <bdd 20n 10p>) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> <bdd 16n 10p>) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: A_zdown.On -> A_zdown.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> <bdd 28n 13p>) (assignments: A_zdown := A_zdown.On)

Controlled system:                     exactly 5,120 states.

Initial (synthesis result):            S_xpos_at1.On and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off) or S_xpos_at1.Off and S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off) or (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off) or S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))
Initial (uncontrolled system):         <bdd 14n 1p>
Initial (controlled system):           <bdd 14n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_pusher1_c_off: guard: A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher1.On and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> true [assume A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher1.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher1.On and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))].
  Event A_pusher1_c_on: guard: A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher1.Off and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> true [assume A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher1.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher1.Off and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))].
  Event A_pusher3_c_off: guard: A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher3.On and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> true [assume A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher3.On and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher3.On and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))].
  Event A_pusher3_c_on: guard: A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher3.Off and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> true [assume A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.On) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_pusher3.Off and (S_Dinitialized.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_pusher3.Off and S_Dinitialized.On and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))].
  Event A_x2testing_c_off: guard: <bdd 20n 10p> -> true [assume <bdd 20n 10p>].
  Event A_x2testing_c_on: guard: <bdd 16n 10p> -> true [assume <bdd 16n 10p>].
  Event A_zdown_c_off: guard: A_zdown.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)) -> true [assume A_zdown.On and S_xpos_at1.On and (S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_at3.Off and S_xpos_atdrop.Off)) or (A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.Off)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))].
  Event A_zdown_c_on: guard: <bdd 28n 13p> -> true [assume <bdd 28n 13p>].

Constructing output CIF specification.
Syntesizing supervisor 4.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name             Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_pusher1        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_product1       1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_pusher1_in     2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_pusher1_out    3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_stack1_filled  4      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  Total                                           5      10        20          20          100%

Applying automatic variable ordering:
  Number of hyperedges: 15

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    2 (total)                 0.13 (avg/edge) [before]
    Total span:                    2 (total)                 0.13 (avg/edge) [iteration 1]
    Total span:                    2 (total)                 0.13 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    2 (total)                 0.13 (avg/edge) [before]
    Total span:                    2 (total)                 0.13 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_product1.Off
Initial   (aut/locs init predicate):     S_pusher1_in.On
Initial   (aut/locs init predicate):     S_pusher1_out.Off
Initial   (aut/locs init predicate):     S_stack1_filled.On
Initial   (aut/locs init predicate):     A_pusher1.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On))
Initial   (uncontrolled system):         A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On))
Initial   (system, combined init/inv):   A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_product1.Off
Marked    (aut/locs marker predicate):   S_pusher1_in.On
Marked    (aut/locs marker predicate):   S_pusher1_out.Off
Marked    (aut/locs marker predicate):   S_stack1_filled.On
Marked    (aut/locs marker predicate):   A_pusher1.Off
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On))
Marked    (uncontrolled system):         A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On))
Marked    (system, combined marked/inv): A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On))

State/event exclusion requirements:
  Event "A_pusher1_c_on" needs:
    S_pusher1_in.On
    S_product1.Off
  Event "A_pusher1_c_off" needs:
    S_pusher1_out.On
    S_stack1_filled.On
    S_product1.Off

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off)
    Edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On)
    Edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off)
    Edge: (event: S_pusher1_in_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_in := S_pusher1_in.On)
    Edge: (event: S_pusher1_out_u_off) (guard: S_pusher1_out.On) (assignments: S_pusher1_out := S_pusher1_out.Off)
    Edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_out := S_pusher1_out.On)
    Edge: (event: S_stack1_filled_u_off) (guard: S_stack1_filled.On) (assignments: S_stack1_filled := S_stack1_filled.Off)
    Edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On)
    Edge: (event: A_pusher1_c_off) (guard: A_pusher1.On) (assignments: A_pusher1 := A_pusher1.Off)
    Edge: (event: A_pusher1_c_on) (guard: A_pusher1.Off) (assignments: A_pusher1 := A_pusher1.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_pusher1_c_off) (guard: A_pusher1.On) (assignments: A_pusher1 := A_pusher1.Off): guard: A_pusher1.On -> A_pusher1.On and S_product1.Off and (S_pusher1_out.On and S_stack1_filled.On) [requirement: S_product1.Off and (S_pusher1_out.On and S_stack1_filled.On)].
Edge (event: A_pusher1_c_on) (guard: A_pusher1.Off) (assignments: A_pusher1 := A_pusher1.On): guard: A_pusher1.Off -> A_pusher1.Off and (S_product1.Off and S_pusher1_in.On) [requirement: S_product1.Off and S_pusher1_in.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off)
    Edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On)
    Edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off)
    Edge: (event: S_pusher1_in_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_in := S_pusher1_in.On)
    Edge: (event: S_pusher1_out_u_off) (guard: S_pusher1_out.On) (assignments: S_pusher1_out := S_pusher1_out.Off)
    Edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_out := S_pusher1_out.On)
    Edge: (event: S_stack1_filled_u_off) (guard: S_stack1_filled.On) (assignments: S_stack1_filled := S_stack1_filled.Off)
    Edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On)
    Edge: (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and S_product1.Off and (S_pusher1_out.On and S_stack1_filled.On)) (assignments: A_pusher1 := A_pusher1.Off)
    Edge: (event: A_pusher1_c_on) (guard: A_pusher1.Off -> A_pusher1.Off and (S_product1.Off and S_pusher1_in.On)) (assignments: A_pusher1 := A_pusher1.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On)) -> A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) -> A_pusher1.Off and (S_pusher1_out.Off and S_stack1_filled.On) [backward reach with edge: (event: S_pusher1_in_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_in := S_pusher1_in.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher1.Off and (S_pusher1_out.Off and S_stack1_filled.On) -> A_pusher1.Off and S_stack1_filled.On [backward reach with edge: (event: S_pusher1_out_u_off) (guard: S_pusher1_out.On) (assignments: S_pusher1_out := S_pusher1_out.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher1.Off and S_stack1_filled.On -> A_pusher1.Off [backward reach with edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher1.Off -> A_pusher1.On and S_product1.Off and (S_pusher1_out.On and S_stack1_filled.On) or A_pusher1.Off [backward reach with edge: (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and S_product1.Off and (S_pusher1_out.On and S_stack1_filled.On)) (assignments: A_pusher1 := A_pusher1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: A_pusher1.On and S_product1.Off and (S_pusher1_out.On and S_stack1_filled.On) or A_pusher1.Off -> A_pusher1.On and (S_pusher1_out.On and S_stack1_filled.On) or A_pusher1.Off [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher1.On and (S_pusher1_out.On and S_stack1_filled.On) or A_pusher1.Off -> A_pusher1.On and S_pusher1_in.On and (S_pusher1_out.On and S_stack1_filled.On) or (A_pusher1.On and (S_pusher1_in.Off and S_stack1_filled.On) or A_pusher1.Off) [backward reach with edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_out := S_pusher1_out.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher1.On and S_pusher1_in.On and (S_pusher1_out.On and S_stack1_filled.On) or (A_pusher1.On and (S_pusher1_in.Off and S_stack1_filled.On) or A_pusher1.Off) -> A_pusher1.Off or (S_pusher1_in.Off or S_pusher1_out.On) [backward reach with edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: A_pusher1.Off or (S_pusher1_in.Off or S_pusher1_out.On) -> true [backward reach with edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On)) -> A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) [forward reach with edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) -> A_pusher1.Off and (S_pusher1_out.Off and S_stack1_filled.On) [forward reach with edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher1.Off and (S_pusher1_out.Off and S_stack1_filled.On) -> A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) or A_pusher1.Off and (S_pusher1_in.Off and S_stack1_filled.On) [forward reach with edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_out := S_pusher1_out.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) or A_pusher1.Off and (S_pusher1_in.Off and S_stack1_filled.On) -> A_pusher1.Off and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off)) [forward reach with edge: (event: S_stack1_filled_u_off) (guard: S_stack1_filled.On) (assignments: S_stack1_filled := S_stack1_filled.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher1.Off and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off)) -> A_pusher1.On and S_product1.Off and (S_pusher1_in.On and S_pusher1_out.Off) or (A_pusher1.Off and (S_pusher1_in.On and S_pusher1_out.Off) or A_pusher1.Off and S_pusher1_in.Off) [forward reach with edge: (event: A_pusher1_c_on) (guard: A_pusher1.Off -> A_pusher1.Off and (S_product1.Off and S_pusher1_in.On)) (assignments: A_pusher1 := A_pusher1.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_pusher1.On and S_product1.Off and (S_pusher1_in.On and S_pusher1_out.Off) or (A_pusher1.Off and (S_pusher1_in.On and S_pusher1_out.Off) or A_pusher1.Off and S_pusher1_in.Off) -> (A_pusher1.Off or (S_pusher1_in.Off or S_pusher1_out.Off)) and ((A_pusher1.Off or S_pusher1_in.On) and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off))) [forward reach with edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_pusher1.Off or (S_pusher1_in.Off or S_pusher1_out.Off)) and ((A_pusher1.Off or S_pusher1_in.On) and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off))) -> (A_pusher1.Off or S_pusher1_out.Off) and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off)) [forward reach with edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_pusher1.Off or S_pusher1_out.Off) and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off)) -> S_pusher1_in.Off or S_pusher1_out.Off [forward reach with edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_out := S_pusher1_out.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: S_pusher1_in.Off or S_pusher1_out.Off [fixed point].
Controlled behavior: true -> S_pusher1_in.Off or S_pusher1_out.Off.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On)) -> A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: S_pusher1_in.Off or S_pusher1_out.Off]
Backward controlled-behavior: A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) -> A_pusher1.Off and (S_pusher1_out.Off and S_stack1_filled.On) [backward reach with edge: (event: S_pusher1_in_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_in := S_pusher1_in.On), restricted to current/previous controlled-behavior predicate: S_pusher1_in.Off or S_pusher1_out.Off]
Backward controlled-behavior: A_pusher1.Off and (S_pusher1_out.Off and S_stack1_filled.On) -> A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) or A_pusher1.Off and (S_pusher1_in.Off and S_stack1_filled.On) [backward reach with edge: (event: S_pusher1_out_u_off) (guard: S_pusher1_out.On) (assignments: S_pusher1_out := S_pusher1_out.Off), restricted to current/previous controlled-behavior predicate: S_pusher1_in.Off or S_pusher1_out.Off]
Backward controlled-behavior: A_pusher1.Off and S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On) or A_pusher1.Off and (S_pusher1_in.Off and S_stack1_filled.On) -> A_pusher1.Off and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off)) [backward reach with edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On), restricted to current/previous controlled-behavior predicate: S_pusher1_in.Off or S_pusher1_out.Off]
Backward controlled-behavior: A_pusher1.Off and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off)) -> A_pusher1.On and S_product1.Off and (S_pusher1_in.Off and (S_pusher1_out.On and S_stack1_filled.On)) or (A_pusher1.Off and (S_pusher1_in.On and S_pusher1_out.Off) or A_pusher1.Off and S_pusher1_in.Off) [backward reach with edge: (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and S_product1.Off and (S_pusher1_out.On and S_stack1_filled.On)) (assignments: A_pusher1 := A_pusher1.Off), restricted to current/previous controlled-behavior predicate: S_pusher1_in.Off or S_pusher1_out.Off]
Backward reachability: iteration 2.
Backward controlled-behavior: A_pusher1.On and S_product1.Off and (S_pusher1_in.Off and (S_pusher1_out.On and S_stack1_filled.On)) or (A_pusher1.Off and (S_pusher1_in.On and S_pusher1_out.Off) or A_pusher1.Off and S_pusher1_in.Off) -> A_pusher1.On and S_pusher1_in.Off and (S_pusher1_out.On and S_stack1_filled.On) or (A_pusher1.Off and (S_pusher1_in.On and S_pusher1_out.Off) or A_pusher1.Off and S_pusher1_in.Off) [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: S_pusher1_in.Off or S_pusher1_out.Off]
Backward controlled-behavior: A_pusher1.On and S_pusher1_in.Off and (S_pusher1_out.On and S_stack1_filled.On) or (A_pusher1.Off and (S_pusher1_in.On and S_pusher1_out.Off) or A_pusher1.Off and S_pusher1_in.Off) -> (A_pusher1.Off or S_pusher1_in.Off) and ((A_pusher1.Off or (S_pusher1_in.On or S_stack1_filled.On)) and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off))) [backward reach with edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_out := S_pusher1_out.On), restricted to current/previous controlled-behavior predicate: S_pusher1_in.Off or S_pusher1_out.Off]
Backward controlled-behavior: (A_pusher1.Off or S_pusher1_in.Off) and ((A_pusher1.Off or (S_pusher1_in.On or S_stack1_filled.On)) and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off))) -> (A_pusher1.Off or S_pusher1_in.Off) and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off)) [backward reach with edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On), restricted to current/previous controlled-behavior predicate: S_pusher1_in.Off or S_pusher1_out.Off]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_pusher1.Off or S_pusher1_in.Off) and (A_pusher1.On or (S_pusher1_in.Off or S_pusher1_out.Off)) -> S_pusher1_in.Off or S_pusher1_out.Off [backward reach with edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off), restricted to current/previous controlled-behavior predicate: S_pusher1_in.Off or S_pusher1_out.Off]
Backward reachability: iteration 4.
Backward controlled-behavior: S_pusher1_in.Off or S_pusher1_out.Off [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: S_pusher1_in.On and S_pusher1_out.On [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and S_product1.Off and (S_pusher1_out.On and S_stack1_filled.On)) (assignments: A_pusher1 := A_pusher1.Off): guard: A_pusher1.On and S_product1.Off and (S_pusher1_out.On and S_stack1_filled.On) -> A_pusher1.On and S_product1.Off and (S_pusher1_in.Off and (S_pusher1_out.On and S_stack1_filled.On)).
Edge (event: A_pusher1_c_on) (guard: A_pusher1.Off -> A_pusher1.Off and (S_product1.Off and S_pusher1_in.On)) (assignments: A_pusher1 := A_pusher1.On): guard: A_pusher1.Off and (S_product1.Off and S_pusher1_in.On) -> A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and S_pusher1_out.Off).

Final synthesis result:
  State: (controlled-behavior: S_pusher1_in.Off or S_pusher1_out.Off)
    Edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off)
    Edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On)
    Edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off)
    Edge: (event: S_pusher1_in_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_in := S_pusher1_in.On)
    Edge: (event: S_pusher1_out_u_off) (guard: S_pusher1_out.On) (assignments: S_pusher1_out := S_pusher1_out.Off)
    Edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_in.Off and S_pusher1_out.Off) (assignments: S_pusher1_out := S_pusher1_out.On)
    Edge: (event: S_stack1_filled_u_off) (guard: S_stack1_filled.On) (assignments: S_stack1_filled := S_stack1_filled.Off)
    Edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On)
    Edge: (event: A_pusher1_c_off) (guard: A_pusher1.On -> A_pusher1.On and S_product1.Off and (S_pusher1_in.Off and (S_pusher1_out.On and S_stack1_filled.On))) (assignments: A_pusher1 := A_pusher1.Off)
    Edge: (event: A_pusher1_c_on) (guard: A_pusher1.Off -> A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and S_pusher1_out.Off)) (assignments: A_pusher1 := A_pusher1.On)

Controlled system:                     exactly 24 states.

Initial (synthesis result):            S_pusher1_in.Off or S_pusher1_out.Off
Initial (uncontrolled system):         A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On))
Initial (controlled system):           A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and (S_pusher1_out.Off and S_stack1_filled.On))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_pusher1_c_off: guard: A_pusher1.On and S_product1.Off and (S_pusher1_in.Off and (S_pusher1_out.On and S_stack1_filled.On)) -> true [assume A_pusher1.On and S_product1.Off and (S_pusher1_in.Off and (S_pusher1_out.On and S_stack1_filled.On))].
  Event A_pusher1_c_on: guard: A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and S_pusher1_out.Off) -> true [assume A_pusher1.Off and S_product1.Off and (S_pusher1_in.On and S_pusher1_out.Off)].

Constructing output CIF specification.
Syntesizing supervisor 9.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name             Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_pusher2        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_Dinitialized   1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_product2       2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_pusher2_in     3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_pusher2_out    4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_stack2_filled  5      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  Total                                           6      12        24          24          100%

Applying automatic variable ordering:
  Number of hyperedges: 19

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    2 (total)                 0.11 (avg/edge) [before]
    Total span:                    2 (total)                 0.11 (avg/edge) [iteration 1]
    Total span:                    2 (total)                 0.11 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    2 (total)                 0.11 (avg/edge) [before]
    Total span:                    2 (total)                 0.11 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_product2.Off
Initial   (aut/locs init predicate):     S_pusher2_in.On
Initial   (aut/locs init predicate):     S_pusher2_out.Off
Initial   (aut/locs init predicate):     S_stack2_filled.On
Initial   (aut/locs init predicate):     S_Dinitialized.Off
Initial   (aut/locs init predicate):     A_pusher2.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On))
Initial   (uncontrolled system):         A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On))
Initial   (system, combined init/inv):   A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_product2.Off
Marked    (aut/locs marker predicate):   S_pusher2_in.On
Marked    (aut/locs marker predicate):   S_pusher2_out.Off
Marked    (aut/locs marker predicate):   S_stack2_filled.On
Marked    (aut/locs marker predicate):   S_Dinitialized.Off
Marked    (aut/locs marker predicate):   A_pusher2.Off
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On))
Marked    (uncontrolled system):         A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On))
Marked    (system, combined marked/inv): A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On))

State/event exclusion requirements:
  Event "A_pusher2_c_on" needs:
    S_Dinitialized.On
    S_pusher2_in.On
    S_product2.Off
  Event "A_pusher2_c_off" needs:
    S_Dinitialized.On
    S_pusher2_out.On
    S_stack2_filled.On
    S_product2.Off

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off)
    Edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On)
    Edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off)
    Edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On)
    Edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off)
    Edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher2_c_off) (guard: A_pusher2.On) (assignments: A_pusher2 := A_pusher2.Off)
    Edge: (event: A_pusher2_c_on) (guard: A_pusher2.Off) (assignments: A_pusher2 := A_pusher2.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_pusher2_c_off) (guard: A_pusher2.On) (assignments: A_pusher2 := A_pusher2.Off): guard: A_pusher2.On -> A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_out.On and S_stack2_filled.On)) [requirement: S_Dinitialized.On and S_product2.Off and (S_pusher2_out.On and S_stack2_filled.On)].
Edge (event: A_pusher2_c_on) (guard: A_pusher2.Off) (assignments: A_pusher2 := A_pusher2.On): guard: A_pusher2.Off -> A_pusher2.Off and S_Dinitialized.On and (S_product2.Off and S_pusher2_in.On) [requirement: S_Dinitialized.On and (S_product2.Off and S_pusher2_in.On)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off)
    Edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On)
    Edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off)
    Edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On)
    Edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off)
    Edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_out.On and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off)
    Edge: (event: A_pusher2_c_on) (guard: A_pusher2.Off -> A_pusher2.Off and S_Dinitialized.On and (S_product2.Off and S_pusher2_in.On)) (assignments: A_pusher2 := A_pusher2.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_out.Off and S_stack2_filled.On) [backward reach with edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_out.Off and S_stack2_filled.On) -> A_pusher2.Off and (S_Dinitialized.Off and S_stack2_filled.On) [backward reach with edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off and (S_Dinitialized.Off and S_stack2_filled.On) -> A_pusher2.Off and S_Dinitialized.Off [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off -> A_pusher2.Off [backward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off -> A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_out.On and S_stack2_filled.On)) or A_pusher2.Off [backward reach with edge: (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_out.On and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_out.On and S_stack2_filled.On)) or A_pusher2.Off -> A_pusher2.On and S_Dinitialized.On and (S_pusher2_out.On and S_stack2_filled.On) or A_pusher2.Off [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.On and S_Dinitialized.On and (S_pusher2_out.On and S_stack2_filled.On) or A_pusher2.Off -> A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.On and (S_pusher2_out.On and S_stack2_filled.On)) or (A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.Off and S_stack2_filled.On) or A_pusher2.Off) [backward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.On and (S_pusher2_out.On and S_stack2_filled.On)) or (A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.Off and S_stack2_filled.On) or A_pusher2.Off) -> (A_pusher2.Off or S_Dinitialized.Off or (S_pusher2_in.Off or S_pusher2_out.On)) and (A_pusher2.Off or S_Dinitialized.On) [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_pusher2.Off or S_Dinitialized.Off or (S_pusher2_in.Off or S_pusher2_out.On)) and (A_pusher2.Off or S_Dinitialized.On) -> A_pusher2.Off or (S_pusher2_in.Off or S_pusher2_out.On) [backward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: A_pusher2.Off or (S_pusher2_in.Off or S_pusher2_out.On) -> true [backward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_out.Off and S_stack2_filled.On) [forward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_out.Off and S_stack2_filled.On) -> A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) or A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.Off and S_stack2_filled.On) [forward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) or A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.Off and S_stack2_filled.On) -> A_pusher2.Off and ((A_pusher2.On or S_Dinitialized.Off) and (A_pusher2.On or S_Dinitialized.On or (S_pusher2_in.Off or S_pusher2_out.Off))) [forward reach with edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and ((A_pusher2.On or S_Dinitialized.Off) and (A_pusher2.On or S_Dinitialized.On or (S_pusher2_in.Off or S_pusher2_out.Off))) -> A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) [forward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) -> A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_in.On and S_pusher2_out.Off)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) [forward reach with edge: (event: A_pusher2_c_on) (guard: A_pusher2.Off -> A_pusher2.Off and S_Dinitialized.On and (S_product2.Off and S_pusher2_in.On)) (assignments: A_pusher2 := A_pusher2.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_in.On and S_pusher2_out.Off)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) -> A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.On and S_pusher2_out.Off) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.On and S_pusher2_out.Off) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) -> (A_pusher2.Off or (S_Dinitialized.Off or S_pusher2_out.Off)) and ((A_pusher2.Off or S_Dinitialized.On) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))) [forward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_pusher2.Off or (S_Dinitialized.Off or S_pusher2_out.Off)) and ((A_pusher2.Off or S_Dinitialized.On) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))) -> (A_pusher2.Off or S_Dinitialized.Off or (S_pusher2_in.Off or S_pusher2_out.Off)) and ((A_pusher2.Off or S_Dinitialized.On) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))) [forward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_pusher2.Off or S_Dinitialized.Off or (S_pusher2_in.Off or S_pusher2_out.Off)) and ((A_pusher2.Off or S_Dinitialized.On) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))) -> S_pusher2_in.Off or S_pusher2_out.Off [forward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: S_pusher2_in.Off or S_pusher2_out.Off [fixed point].
Controlled behavior: true -> S_pusher2_in.Off or S_pusher2_out.Off.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_out.Off and S_stack2_filled.On) [backward reach with edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_out.Off and S_stack2_filled.On) -> A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) or A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.Off and S_stack2_filled.On) [backward reach with edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On)) or A_pusher2.Off and S_Dinitialized.Off and (S_pusher2_in.Off and S_stack2_filled.On) -> A_pusher2.Off and ((A_pusher2.On or S_Dinitialized.Off) and (A_pusher2.On or S_Dinitialized.On or (S_pusher2_in.Off or S_pusher2_out.Off))) [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and ((A_pusher2.On or S_Dinitialized.Off) and (A_pusher2.On or S_Dinitialized.On or (S_pusher2_in.Off or S_pusher2_out.Off))) -> A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) [backward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) -> A_pusher2.On and (S_Dinitialized.On and S_product2.Off) and (S_pusher2_in.Off and (S_pusher2_out.On and S_stack2_filled.On)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) [backward reach with edge: (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_out.On and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward reachability: iteration 2.
Backward controlled-behavior: A_pusher2.On and (S_Dinitialized.On and S_product2.Off) and (S_pusher2_in.Off and (S_pusher2_out.On and S_stack2_filled.On)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) -> A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.Off and (S_pusher2_out.On and S_stack2_filled.On)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.Off and (S_pusher2_out.On and S_stack2_filled.On)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) -> A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.Off and S_stack2_filled.On) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) [backward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.On and S_Dinitialized.On and (S_pusher2_in.Off and S_stack2_filled.On) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) -> (A_pusher2.Off or (S_Dinitialized.Off or S_pusher2_in.Off)) and ((A_pusher2.Off or S_Dinitialized.On) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))) [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: (A_pusher2.Off or (S_Dinitialized.Off or S_pusher2_in.Off)) and ((A_pusher2.Off or S_Dinitialized.On) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))) -> (A_pusher2.Off or S_pusher2_in.Off) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) [backward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_pusher2.Off or S_pusher2_in.Off) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) -> S_pusher2_in.Off or S_pusher2_out.Off [backward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward reachability: iteration 4.
Backward controlled-behavior: S_pusher2_in.Off or S_pusher2_out.Off [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: S_pusher2_in.On and S_pusher2_out.On [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_out.On and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off): guard: A_pusher2.On and S_Dinitialized.On and (S_product2.Off and (S_pusher2_out.On and S_stack2_filled.On)) -> A_pusher2.On and (S_Dinitialized.On and S_product2.Off) and (S_pusher2_in.Off and (S_pusher2_out.On and S_stack2_filled.On)).
Edge (event: A_pusher2_c_on) (guard: A_pusher2.Off -> A_pusher2.Off and S_Dinitialized.On and (S_product2.Off and S_pusher2_in.On)) (assignments: A_pusher2 := A_pusher2.On): guard: A_pusher2.Off and S_Dinitialized.On and (S_product2.Off and S_pusher2_in.On) -> A_pusher2.Off and S_Dinitialized.On and (S_product2.Off and (S_pusher2_in.On and S_pusher2_out.Off)).

Final synthesis result:
  State: (controlled-behavior: S_pusher2_in.Off or S_pusher2_out.Off)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off)
    Edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On)
    Edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off)
    Edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On)
    Edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off)
    Edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and (S_Dinitialized.On and S_product2.Off) and (S_pusher2_in.Off and (S_pusher2_out.On and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off)
    Edge: (event: A_pusher2_c_on) (guard: A_pusher2.Off -> A_pusher2.Off and S_Dinitialized.On and (S_product2.Off and (S_pusher2_in.On and S_pusher2_out.Off))) (assignments: A_pusher2 := A_pusher2.On)

Controlled system:                     exactly 48 states.

Initial (synthesis result):            S_pusher2_in.Off or S_pusher2_out.Off
Initial (uncontrolled system):         A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On))
Initial (controlled system):           A_pusher2.Off and (S_Dinitialized.Off and S_product2.Off) and (S_pusher2_in.On and (S_pusher2_out.Off and S_stack2_filled.On))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_pusher2_c_off: guard: A_pusher2.On and (S_Dinitialized.On and S_product2.Off) and (S_pusher2_in.Off and (S_pusher2_out.On and S_stack2_filled.On)) -> true [assume A_pusher2.On and (S_Dinitialized.On and S_product2.Off) and (S_pusher2_in.Off and (S_pusher2_out.On and S_stack2_filled.On))].
  Event A_pusher2_c_on: guard: A_pusher2.Off and S_Dinitialized.On and (S_product2.Off and (S_pusher2_in.On and S_pusher2_out.Off)) -> true [assume A_pusher2.Off and S_Dinitialized.On and (S_product2.Off and (S_pusher2_in.On and S_pusher2_out.Off))].

Constructing output CIF specification.
Syntesizing supervisor 15.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name             Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_pusher3        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_product3       1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_pusher3_in     2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_pusher3_out    3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_stack3_filled  4      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  Total                                           5      10        20          20          100%

Applying automatic variable ordering:
  Number of hyperedges: 15

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    2 (total)                 0.13 (avg/edge) [before]
    Total span:                    2 (total)                 0.13 (avg/edge) [iteration 1]
    Total span:                    2 (total)                 0.13 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    2 (total)                 0.13 (avg/edge) [before]
    Total span:                    2 (total)                 0.13 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_product3.Off
Initial   (aut/locs init predicate):     S_pusher3_in.On
Initial   (aut/locs init predicate):     S_pusher3_out.Off
Initial   (aut/locs init predicate):     S_stack3_filled.On
Initial   (aut/locs init predicate):     A_pusher3.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On))
Initial   (uncontrolled system):         A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On))
Initial   (system, combined init/inv):   A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_product3.Off
Marked    (aut/locs marker predicate):   S_pusher3_in.On
Marked    (aut/locs marker predicate):   S_pusher3_out.Off
Marked    (aut/locs marker predicate):   S_stack3_filled.On
Marked    (aut/locs marker predicate):   A_pusher3.Off
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On))
Marked    (uncontrolled system):         A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On))
Marked    (system, combined marked/inv): A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On))

State/event exclusion requirements:
  Event "A_pusher3_c_on" needs:
    S_pusher3_in.On
    S_product3.Off
  Event "A_pusher3_c_off" needs:
    S_pusher3_out.On
    S_stack3_filled.On
    S_product3.Off

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off)
    Edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On)
    Edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off)
    Edge: (event: S_pusher3_in_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_in := S_pusher3_in.On)
    Edge: (event: S_pusher3_out_u_off) (guard: S_pusher3_out.On) (assignments: S_pusher3_out := S_pusher3_out.Off)
    Edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On)
    Edge: (event: S_stack3_filled_u_off) (guard: S_stack3_filled.On) (assignments: S_stack3_filled := S_stack3_filled.Off)
    Edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On)
    Edge: (event: A_pusher3_c_off) (guard: A_pusher3.On) (assignments: A_pusher3 := A_pusher3.Off)
    Edge: (event: A_pusher3_c_on) (guard: A_pusher3.Off) (assignments: A_pusher3 := A_pusher3.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_pusher3_c_off) (guard: A_pusher3.On) (assignments: A_pusher3 := A_pusher3.Off): guard: A_pusher3.On -> A_pusher3.On and S_product3.Off and (S_pusher3_out.On and S_stack3_filled.On) [requirement: S_product3.Off and (S_pusher3_out.On and S_stack3_filled.On)].
Edge (event: A_pusher3_c_on) (guard: A_pusher3.Off) (assignments: A_pusher3 := A_pusher3.On): guard: A_pusher3.Off -> A_pusher3.Off and (S_product3.Off and S_pusher3_in.On) [requirement: S_product3.Off and S_pusher3_in.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off)
    Edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On)
    Edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off)
    Edge: (event: S_pusher3_in_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_in := S_pusher3_in.On)
    Edge: (event: S_pusher3_out_u_off) (guard: S_pusher3_out.On) (assignments: S_pusher3_out := S_pusher3_out.Off)
    Edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On)
    Edge: (event: S_stack3_filled_u_off) (guard: S_stack3_filled.On) (assignments: S_stack3_filled := S_stack3_filled.Off)
    Edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On)
    Edge: (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and S_product3.Off and (S_pusher3_out.On and S_stack3_filled.On)) (assignments: A_pusher3 := A_pusher3.Off)
    Edge: (event: A_pusher3_c_on) (guard: A_pusher3.Off -> A_pusher3.Off and (S_product3.Off and S_pusher3_in.On)) (assignments: A_pusher3 := A_pusher3.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On)) -> A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) -> A_pusher3.Off and (S_pusher3_out.Off and S_stack3_filled.On) [backward reach with edge: (event: S_pusher3_in_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_in := S_pusher3_in.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher3.Off and (S_pusher3_out.Off and S_stack3_filled.On) -> A_pusher3.Off and S_stack3_filled.On [backward reach with edge: (event: S_pusher3_out_u_off) (guard: S_pusher3_out.On) (assignments: S_pusher3_out := S_pusher3_out.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher3.Off and S_stack3_filled.On -> A_pusher3.Off [backward reach with edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher3.Off -> A_pusher3.On and S_product3.Off and (S_pusher3_out.On and S_stack3_filled.On) or A_pusher3.Off [backward reach with edge: (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and S_product3.Off and (S_pusher3_out.On and S_stack3_filled.On)) (assignments: A_pusher3 := A_pusher3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: A_pusher3.On and S_product3.Off and (S_pusher3_out.On and S_stack3_filled.On) or A_pusher3.Off -> A_pusher3.On and (S_pusher3_out.On and S_stack3_filled.On) or A_pusher3.Off [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher3.On and (S_pusher3_out.On and S_stack3_filled.On) or A_pusher3.Off -> A_pusher3.On and S_pusher3_in.On and (S_pusher3_out.On and S_stack3_filled.On) or (A_pusher3.On and (S_pusher3_in.Off and S_stack3_filled.On) or A_pusher3.Off) [backward reach with edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher3.On and S_pusher3_in.On and (S_pusher3_out.On and S_stack3_filled.On) or (A_pusher3.On and (S_pusher3_in.Off and S_stack3_filled.On) or A_pusher3.Off) -> A_pusher3.Off or (S_pusher3_in.Off or S_pusher3_out.On) [backward reach with edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: A_pusher3.Off or (S_pusher3_in.Off or S_pusher3_out.On) -> true [backward reach with edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On)) -> A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) -> A_pusher3.Off and (S_pusher3_out.Off and S_stack3_filled.On) [forward reach with edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher3.Off and (S_pusher3_out.Off and S_stack3_filled.On) -> A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) or A_pusher3.Off and (S_pusher3_in.Off and S_stack3_filled.On) [forward reach with edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) or A_pusher3.Off and (S_pusher3_in.Off and S_stack3_filled.On) -> A_pusher3.Off and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off)) [forward reach with edge: (event: S_stack3_filled_u_off) (guard: S_stack3_filled.On) (assignments: S_stack3_filled := S_stack3_filled.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher3.Off and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off)) -> A_pusher3.On and S_product3.Off and (S_pusher3_in.On and S_pusher3_out.Off) or (A_pusher3.Off and (S_pusher3_in.On and S_pusher3_out.Off) or A_pusher3.Off and S_pusher3_in.Off) [forward reach with edge: (event: A_pusher3_c_on) (guard: A_pusher3.Off -> A_pusher3.Off and (S_product3.Off and S_pusher3_in.On)) (assignments: A_pusher3 := A_pusher3.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_pusher3.On and S_product3.Off and (S_pusher3_in.On and S_pusher3_out.Off) or (A_pusher3.Off and (S_pusher3_in.On and S_pusher3_out.Off) or A_pusher3.Off and S_pusher3_in.Off) -> (A_pusher3.Off or (S_pusher3_in.Off or S_pusher3_out.Off)) and ((A_pusher3.Off or S_pusher3_in.On) and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off))) [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_pusher3.Off or (S_pusher3_in.Off or S_pusher3_out.Off)) and ((A_pusher3.Off or S_pusher3_in.On) and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off))) -> (A_pusher3.Off or S_pusher3_out.Off) and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off)) [forward reach with edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_pusher3.Off or S_pusher3_out.Off) and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off)) -> S_pusher3_in.Off or S_pusher3_out.Off [forward reach with edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: S_pusher3_in.Off or S_pusher3_out.Off [fixed point].
Controlled behavior: true -> S_pusher3_in.Off or S_pusher3_out.Off.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On)) -> A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: S_pusher3_in.Off or S_pusher3_out.Off]
Backward controlled-behavior: A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) -> A_pusher3.Off and (S_pusher3_out.Off and S_stack3_filled.On) [backward reach with edge: (event: S_pusher3_in_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_in := S_pusher3_in.On), restricted to current/previous controlled-behavior predicate: S_pusher3_in.Off or S_pusher3_out.Off]
Backward controlled-behavior: A_pusher3.Off and (S_pusher3_out.Off and S_stack3_filled.On) -> A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) or A_pusher3.Off and (S_pusher3_in.Off and S_stack3_filled.On) [backward reach with edge: (event: S_pusher3_out_u_off) (guard: S_pusher3_out.On) (assignments: S_pusher3_out := S_pusher3_out.Off), restricted to current/previous controlled-behavior predicate: S_pusher3_in.Off or S_pusher3_out.Off]
Backward controlled-behavior: A_pusher3.Off and S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On) or A_pusher3.Off and (S_pusher3_in.Off and S_stack3_filled.On) -> A_pusher3.Off and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off)) [backward reach with edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On), restricted to current/previous controlled-behavior predicate: S_pusher3_in.Off or S_pusher3_out.Off]
Backward controlled-behavior: A_pusher3.Off and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off)) -> A_pusher3.On and S_product3.Off and (S_pusher3_in.Off and (S_pusher3_out.On and S_stack3_filled.On)) or (A_pusher3.Off and (S_pusher3_in.On and S_pusher3_out.Off) or A_pusher3.Off and S_pusher3_in.Off) [backward reach with edge: (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and S_product3.Off and (S_pusher3_out.On and S_stack3_filled.On)) (assignments: A_pusher3 := A_pusher3.Off), restricted to current/previous controlled-behavior predicate: S_pusher3_in.Off or S_pusher3_out.Off]
Backward reachability: iteration 2.
Backward controlled-behavior: A_pusher3.On and S_product3.Off and (S_pusher3_in.Off and (S_pusher3_out.On and S_stack3_filled.On)) or (A_pusher3.Off and (S_pusher3_in.On and S_pusher3_out.Off) or A_pusher3.Off and S_pusher3_in.Off) -> A_pusher3.On and S_pusher3_in.Off and (S_pusher3_out.On and S_stack3_filled.On) or (A_pusher3.Off and (S_pusher3_in.On and S_pusher3_out.Off) or A_pusher3.Off and S_pusher3_in.Off) [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: S_pusher3_in.Off or S_pusher3_out.Off]
Backward controlled-behavior: A_pusher3.On and S_pusher3_in.Off and (S_pusher3_out.On and S_stack3_filled.On) or (A_pusher3.Off and (S_pusher3_in.On and S_pusher3_out.Off) or A_pusher3.Off and S_pusher3_in.Off) -> (A_pusher3.Off or S_pusher3_in.Off) and ((A_pusher3.Off or (S_pusher3_in.On or S_stack3_filled.On)) and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off))) [backward reach with edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On), restricted to current/previous controlled-behavior predicate: S_pusher3_in.Off or S_pusher3_out.Off]
Backward controlled-behavior: (A_pusher3.Off or S_pusher3_in.Off) and ((A_pusher3.Off or (S_pusher3_in.On or S_stack3_filled.On)) and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off))) -> (A_pusher3.Off or S_pusher3_in.Off) and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off)) [backward reach with edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On), restricted to current/previous controlled-behavior predicate: S_pusher3_in.Off or S_pusher3_out.Off]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_pusher3.Off or S_pusher3_in.Off) and (A_pusher3.On or (S_pusher3_in.Off or S_pusher3_out.Off)) -> S_pusher3_in.Off or S_pusher3_out.Off [backward reach with edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off), restricted to current/previous controlled-behavior predicate: S_pusher3_in.Off or S_pusher3_out.Off]
Backward reachability: iteration 4.
Backward controlled-behavior: S_pusher3_in.Off or S_pusher3_out.Off [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: S_pusher3_in.On and S_pusher3_out.On [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and S_product3.Off and (S_pusher3_out.On and S_stack3_filled.On)) (assignments: A_pusher3 := A_pusher3.Off): guard: A_pusher3.On and S_product3.Off and (S_pusher3_out.On and S_stack3_filled.On) -> A_pusher3.On and S_product3.Off and (S_pusher3_in.Off and (S_pusher3_out.On and S_stack3_filled.On)).
Edge (event: A_pusher3_c_on) (guard: A_pusher3.Off -> A_pusher3.Off and (S_product3.Off and S_pusher3_in.On)) (assignments: A_pusher3 := A_pusher3.On): guard: A_pusher3.Off and (S_product3.Off and S_pusher3_in.On) -> A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and S_pusher3_out.Off).

Final synthesis result:
  State: (controlled-behavior: S_pusher3_in.Off or S_pusher3_out.Off)
    Edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off)
    Edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On)
    Edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off)
    Edge: (event: S_pusher3_in_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_in := S_pusher3_in.On)
    Edge: (event: S_pusher3_out_u_off) (guard: S_pusher3_out.On) (assignments: S_pusher3_out := S_pusher3_out.Off)
    Edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On)
    Edge: (event: S_stack3_filled_u_off) (guard: S_stack3_filled.On) (assignments: S_stack3_filled := S_stack3_filled.Off)
    Edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On)
    Edge: (event: A_pusher3_c_off) (guard: A_pusher3.On -> A_pusher3.On and S_product3.Off and (S_pusher3_in.Off and (S_pusher3_out.On and S_stack3_filled.On))) (assignments: A_pusher3 := A_pusher3.Off)
    Edge: (event: A_pusher3_c_on) (guard: A_pusher3.Off -> A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and S_pusher3_out.Off)) (assignments: A_pusher3 := A_pusher3.On)

Controlled system:                     exactly 24 states.

Initial (synthesis result):            S_pusher3_in.Off or S_pusher3_out.Off
Initial (uncontrolled system):         A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On))
Initial (controlled system):           A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and (S_pusher3_out.Off and S_stack3_filled.On))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_pusher3_c_off: guard: A_pusher3.On and S_product3.Off and (S_pusher3_in.Off and (S_pusher3_out.On and S_stack3_filled.On)) -> true [assume A_pusher3.On and S_product3.Off and (S_pusher3_in.Off and (S_pusher3_out.On and S_stack3_filled.On))].
  Event A_pusher3_c_on: guard: A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and S_pusher3_out.Off) -> true [assume A_pusher3.Off and S_product3.Off and (S_pusher3_in.On and S_pusher3_out.Off)].

Constructing output CIF specification.
Syntesizing supervisor 20.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name              Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_gripperclose    0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_x2distributing  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_x2testing       2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_zdown           3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_gripper         4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_xpos_at1        5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_xpos_at2        6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_xpos_at3        7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_xpos_atdrop     8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_zpos_atdown     9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_zpos_atup       10     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  Total                                            11     22        44          44          100%

Applying automatic variable ordering:
  Number of hyperedges: 34

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   25 (total)                 0.74 (avg/edge) [before]
    Total span:                   25 (total)                 0.74 (avg/edge) [iteration 1]
    Total span:                   25 (total)                 0.74 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   25 (total)                 0.74 (avg/edge) [before]
    Total span:                   22 (total)                 0.65 (avg/edge) [window 0..3]
    Total span:                   22 (total)                 0.65 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name              Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_x2testing       0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_x2distributing  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_zdown           2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_gripperclose    3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_gripper         4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_xpos_at1        5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_xpos_at2        6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_xpos_at3        7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_xpos_atdrop     8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_zpos_atdown     9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_zpos_atup       10     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  Total                                            11     22        44          44          100%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_xpos_at1.Off
Initial   (aut/locs init predicate):     S_xpos_at2.Off
Initial   (aut/locs init predicate):     S_xpos_at3.Off
Initial   (aut/locs init predicate):     S_xpos_atdrop.On
Initial   (aut/locs init predicate):     S_zpos_atup.On
Initial   (aut/locs init predicate):     S_zpos_atdown.Off
Initial   (aut/locs init predicate):     S_gripper.Off
Initial   (aut/locs init predicate):     A_x2distributing.On
Initial   (aut/locs init predicate):     A_x2testing.On
Initial   (aut/locs init predicate):     A_zdown.Off
Initial   (aut/locs init predicate):     A_gripperclose.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    <bdd 11n 1p>
Initial   (uncontrolled system):         <bdd 11n 1p>
Initial   (system, combined init/inv):   <bdd 11n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_xpos_at1.Off
Marked    (aut/locs marker predicate):   S_xpos_at2.Off
Marked    (aut/locs marker predicate):   S_xpos_at3.Off
Marked    (aut/locs marker predicate):   S_xpos_atdrop.On
Marked    (aut/locs marker predicate):   S_zpos_atup.On
Marked    (aut/locs marker predicate):   S_zpos_atdown.Off
Marked    (aut/locs marker predicate):   S_gripper.Off
Marked    (aut/locs marker predicate):   A_x2distributing.On
Marked    (aut/locs marker predicate):   A_x2testing.On
Marked    (aut/locs marker predicate):   A_zdown.Off
Marked    (aut/locs marker predicate):   A_gripperclose.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  <bdd 11n 1p>
Marked    (uncontrolled system):         <bdd 11n 1p>
Marked    (system, combined marked/inv): <bdd 11n 1p>

State/event exclusion requirements:
  Event "A_zdown_c_on" needs:
    S_zpos_atup.On
    A_x2testing.On and A_x2distributing.On
  Event "A_zdown_c_off" needs:
    S_zpos_atdown.On
    (A_gripperclose.Off or S_gripper.Off or (S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On))) and ((A_gripperclose.Off or S_gripper.On) and (A_gripperclose.On or S_xpos_atdrop.On))
  Event "A_gripperclose_c_on" needs:
    S_zpos_atdown.On
    S_xpos_at1.On or (S_xpos_at2.On or S_xpos_at3.On)
  Event "A_gripperclose_c_off" needs:
    S_zpos_atdown.On
    S_xpos_atdrop.On
  Event "A_x2distributing_c_off" needs:
    S_zpos_atup.On
    A_x2testing.On
  Event "A_x2testing_c_off" needs:
    S_zpos_atup.On
    A_x2distributing.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off)
    Edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atup := S_zpos_atup.On)
    Edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off)
    Edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On) (assignments: A_x2distributing := A_x2distributing.Off)
    Edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off) (assignments: A_x2distributing := A_x2distributing.On)
    Edge: (event: A_x2testing_c_off) (guard: A_x2testing.On) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: A_zdown.On) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: A_zdown.Off) (assignments: A_zdown := A_zdown.On)
    Edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On) (assignments: A_gripperclose := A_gripperclose.Off)
    Edge: (event: A_gripperclose_c_on) (guard: A_gripperclose.Off) (assignments: A_gripperclose := A_gripperclose.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_x2distributing_c_off) (guard: A_x2distributing.On) (assignments: A_x2distributing := A_x2distributing.Off): guard: A_x2distributing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On) [requirement: A_x2testing.On and S_zpos_atup.On].
Edge (event: A_x2testing_c_off) (guard: A_x2testing.On) (assignments: A_x2testing := A_x2testing.Off): guard: A_x2testing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On) [requirement: A_x2distributing.On and S_zpos_atup.On].
Edge (event: A_zdown_c_off) (guard: A_zdown.On) (assignments: A_zdown := A_zdown.Off): guard: A_zdown.On -> A_zdown.On and A_gripperclose.On and (S_gripper.On and (S_xpos_at1.On and S_zpos_atdown.On)) or A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On)) or (A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)) or A_zdown.On and A_gripperclose.Off and (S_xpos_atdrop.On and S_zpos_atdown.On)) [requirement: A_gripperclose.On and S_gripper.On and (S_xpos_at1.On and S_zpos_atdown.On) or A_gripperclose.On and S_gripper.On and (S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On)) or (A_gripperclose.On and (S_gripper.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)) or A_gripperclose.Off and (S_xpos_atdrop.On and S_zpos_atdown.On))].
Edge (event: A_zdown_c_on) (guard: A_zdown.Off) (assignments: A_zdown := A_zdown.On): guard: A_zdown.Off -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and S_zpos_atup.On) [requirement: A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)].
Edge (event: A_gripperclose_c_off) (guard: A_gripperclose.On) (assignments: A_gripperclose := A_gripperclose.Off): guard: A_gripperclose.On -> A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On) [requirement: S_xpos_atdrop.On and S_zpos_atdown.On].
Edge (event: A_gripperclose_c_on) (guard: A_gripperclose.Off) (assignments: A_gripperclose := A_gripperclose.On): guard: A_gripperclose.Off -> A_gripperclose.Off and (S_xpos_at1.On and S_zpos_atdown.On) or (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On) or A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On))) [requirement: S_xpos_at1.On and S_zpos_atdown.On or (S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On) or S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On))].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off)
    Edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atup := S_zpos_atup.On)
    Edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off)
    Edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2distributing := A_x2distributing.Off)
    Edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off) (assignments: A_x2distributing := A_x2distributing.On)
    Edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: A_zdown.On -> A_zdown.On and A_gripperclose.On and (S_gripper.On and (S_xpos_at1.On and S_zpos_atdown.On)) or A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On)) or (A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)) or A_zdown.On and A_gripperclose.Off and (S_xpos_atdrop.On and S_zpos_atdown.On))) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and S_zpos_atup.On)) (assignments: A_zdown := A_zdown.On)
    Edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off)
    Edge: (event: A_gripperclose_c_on) (guard: A_gripperclose.Off -> A_gripperclose.Off and (S_xpos_at1.On and S_zpos_atdown.On) or (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On) or A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 11n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 11n 1p> -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_xpos_atdrop.On and (S_zpos_atdown.Off and S_zpos_atup.On))) [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_xpos_atdrop.On and (S_zpos_atdown.Off and S_zpos_atup.On))) -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at3.Off and (S_xpos_atdrop.On and (S_zpos_atdown.Off and S_zpos_atup.On))) [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at3.Off and (S_xpos_atdrop.On and (S_zpos_atdown.Off and S_zpos_atup.On))) -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_atdrop.On and (S_zpos_atdown.Off and S_zpos_atup.On)) [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_atdrop.On and (S_zpos_atdown.Off and S_zpos_atup.On)) -> <bdd 11n 4p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 4p> -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.On and (S_xpos_atdrop.On and S_zpos_atdown.Off)) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_atdrop.On and S_zpos_atdown.Off))) or (A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and (S_xpos_atdrop.On and S_zpos_atdown.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)))) [backward reach with edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atup := S_zpos_atup.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.On and (S_xpos_atdrop.On and S_zpos_atdown.Off)) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_atdrop.On and S_zpos_atdown.Off))) or (A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and (S_xpos_atdrop.On and S_zpos_atdown.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)))) -> A_x2testing.On and (A_x2distributing.On and A_zdown.Off) and (A_gripperclose.Off and S_gripper.Off and (S_xpos_at1.On and S_xpos_atdrop.On)) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On)) or (A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) [backward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On and (A_x2distributing.On and A_zdown.Off) and (A_gripperclose.Off and S_gripper.Off and (S_xpos_at1.On and S_xpos_atdrop.On)) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On)) or (A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> A_x2testing.On and (A_x2distributing.On and A_zdown.Off) and (A_gripperclose.Off and (S_xpos_at1.On and S_xpos_atdrop.On)) or A_x2testing.On and (A_x2distributing.On and A_zdown.Off) and (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On)) or (A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)) or A_x2testing.On and (A_x2distributing.On and A_zdown.Off) and (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) [backward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_x2testing.On and (A_x2distributing.On and A_zdown.Off) and (A_gripperclose.Off and (S_xpos_at1.On and S_xpos_atdrop.On)) or A_x2testing.On and (A_x2distributing.On and A_zdown.Off) and (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On)) or (A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)) or A_x2testing.On and (A_x2distributing.On and A_zdown.Off) and (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> (A_x2testing.Off or A_zdown.Off) and ((A_x2testing.Off or (A_zdown.On or A_gripperclose.Off)) and (A_x2testing.Off or A_zdown.On or (A_gripperclose.On or (S_xpos_at1.Off or S_xpos_atdrop.On)))) and ((A_x2testing.Off or (A_zdown.On or A_gripperclose.On) or (S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On))) and ((A_x2testing.Off or (A_zdown.On or A_gripperclose.On) or (S_xpos_at1.On or S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On))) and A_x2testing.On)) [backward reach with edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_x2testing.Off or A_zdown.Off) and ((A_x2testing.Off or (A_zdown.On or A_gripperclose.Off)) and (A_x2testing.Off or A_zdown.On or (A_gripperclose.On or (S_xpos_at1.Off or S_xpos_atdrop.On)))) and ((A_x2testing.Off or (A_zdown.On or A_gripperclose.On) or (S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On))) and ((A_x2testing.Off or (A_zdown.On or A_gripperclose.On) or (S_xpos_at1.On or S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On))) and A_x2testing.On)) -> A_zdown.Off and (A_zdown.On or A_gripperclose.Off) and ((A_zdown.On or A_gripperclose.On or (S_xpos_at1.Off or S_xpos_atdrop.On)) and ((A_zdown.On or A_gripperclose.On or (S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On))) and (A_zdown.On or (A_gripperclose.On or S_xpos_at1.On) or (S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On))))) [backward reach with edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_zdown.Off and (A_zdown.On or A_gripperclose.Off) and ((A_zdown.On or A_gripperclose.On or (S_xpos_at1.Off or S_xpos_atdrop.On)) and ((A_zdown.On or A_gripperclose.On or (S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On))) and (A_zdown.On or (A_gripperclose.On or S_xpos_at1.On) or (S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On))))) -> A_zdown.On and A_gripperclose.Off and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.Off and A_gripperclose.Off and (S_xpos_at1.On and S_xpos_atdrop.On) or (A_zdown.Off and A_gripperclose.Off and (S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On)) or (A_zdown.Off and (A_gripperclose.Off and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)) or A_zdown.Off and A_gripperclose.Off and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))) [backward reach with edge: (event: A_zdown_c_off) (guard: A_zdown.On -> A_zdown.On and A_gripperclose.On and (S_gripper.On and (S_xpos_at1.On and S_zpos_atdown.On)) or A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On)) or (A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)) or A_zdown.On and A_gripperclose.Off and (S_xpos_atdrop.On and S_zpos_atdown.On))) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_zdown.On and A_gripperclose.Off and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.Off and A_gripperclose.Off and (S_xpos_at1.On and S_xpos_atdrop.On) or (A_zdown.Off and A_gripperclose.Off and (S_xpos_at1.Off and (S_xpos_at2.On and S_xpos_atdrop.On)) or (A_zdown.Off and (A_gripperclose.Off and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)) or A_zdown.Off and A_gripperclose.Off and (S_xpos_at1.Off and (S_xpos_at2.Off and S_xpos_at3.Off)))) -> (A_zdown.Off or (S_xpos_atdrop.Off or S_zpos_atdown.On)) and ((A_zdown.Off or S_xpos_atdrop.On) and (A_zdown.On or A_gripperclose.Off or (S_xpos_atdrop.Off or S_zpos_atdown.On))) and ((A_zdown.On or (A_gripperclose.Off or S_xpos_atdrop.On)) and (A_zdown.On or A_gripperclose.On or (S_xpos_at1.Off or S_xpos_atdrop.On)) and ((A_zdown.On or A_gripperclose.On or (S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On))) and (A_zdown.On or (A_gripperclose.On or S_xpos_at1.On) or (S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On))))) [backward reach with edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: (A_zdown.Off or (S_xpos_atdrop.Off or S_zpos_atdown.On)) and ((A_zdown.Off or S_xpos_atdrop.On) and (A_zdown.On or A_gripperclose.Off or (S_xpos_atdrop.Off or S_zpos_atdown.On))) and ((A_zdown.On or (A_gripperclose.Off or S_xpos_atdrop.On)) and (A_zdown.On or A_gripperclose.On or (S_xpos_at1.Off or S_xpos_atdrop.On)) and ((A_zdown.On or A_gripperclose.On or (S_xpos_at1.On or (S_xpos_at2.Off or S_xpos_atdrop.On))) and (A_zdown.On or (A_gripperclose.On or S_xpos_at1.On) or (S_xpos_at2.On or (S_xpos_at3.Off or S_xpos_atdrop.On))))) -> A_zdown.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.Off and A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or (A_zdown.Off and A_gripperclose.Off and (S_xpos_at2.On and S_xpos_atdrop.On) or (A_zdown.Off and A_gripperclose.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)) or A_zdown.Off and A_gripperclose.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_zdown.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.Off and A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or (A_zdown.Off and A_gripperclose.Off and (S_xpos_at2.On and S_xpos_atdrop.On) or (A_zdown.Off and A_gripperclose.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_xpos_atdrop.On)) or A_zdown.Off and A_gripperclose.Off and (S_xpos_at2.Off and S_xpos_at3.Off))) -> A_zdown.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.Off and A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or (A_zdown.Off and A_gripperclose.Off and (S_xpos_at3.On and S_xpos_atdrop.On) or A_zdown.Off and (A_gripperclose.Off and S_xpos_at3.Off)) [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_zdown.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.Off and A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or (A_zdown.Off and A_gripperclose.Off and (S_xpos_at3.On and S_xpos_atdrop.On) or A_zdown.Off and (A_gripperclose.Off and S_xpos_at3.Off)) -> A_zdown.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or (A_zdown.Off and A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.Off and A_gripperclose.Off) [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_zdown.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or (A_zdown.Off and A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.Off and A_gripperclose.Off) -> A_zdown.On and S_xpos_at1.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or (A_zdown.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.On))) or (A_zdown.Off and A_gripperclose.On and (S_xpos_at1.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or A_zdown.Off and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or (A_zdown.Off and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or (A_zdown.Off and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.On)) or A_zdown.Off and A_gripperclose.Off))) [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_zdown.On and S_xpos_at1.On and (S_xpos_atdrop.On and S_zpos_atdown.On) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or (A_zdown.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or A_zdown.On and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.On))) or (A_zdown.Off and A_gripperclose.On and (S_xpos_at1.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or A_zdown.Off and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or (A_zdown.Off and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) or (A_zdown.Off and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.On)) or A_zdown.Off and A_gripperclose.Off))) -> <bdd 8n 17p> [backward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 8n 17p> -> <bdd 7n 13p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 7n 13p> -> (A_zdown.Off or S_xpos_at3.Off or (S_xpos_atdrop.Off or (S_zpos_atdown.On or S_zpos_atup.Off))) and ((A_zdown.Off or (S_xpos_at3.Off or S_xpos_atdrop.On)) and (A_zdown.Off or S_xpos_at3.On or (S_zpos_atdown.On or S_zpos_atup.Off))) and ((A_zdown.On or (A_gripperclose.Off or S_xpos_at3.Off) or (S_xpos_atdrop.Off or (S_zpos_atdown.On or S_zpos_atup.Off))) and ((A_zdown.On or A_gripperclose.Off or (S_xpos_at3.Off or S_xpos_atdrop.On)) and (A_zdown.On or A_gripperclose.Off or (S_xpos_at3.On or (S_zpos_atdown.On or S_zpos_atup.Off))))) [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_zdown.Off or S_xpos_at3.Off or (S_xpos_atdrop.Off or (S_zpos_atdown.On or S_zpos_atup.Off))) and ((A_zdown.Off or (S_xpos_at3.Off or S_xpos_atdrop.On)) and (A_zdown.Off or S_xpos_at3.On or (S_zpos_atdown.On or S_zpos_atup.Off))) and ((A_zdown.On or (A_gripperclose.Off or S_xpos_at3.Off) or (S_xpos_atdrop.Off or (S_zpos_atdown.On or S_zpos_atup.Off))) and ((A_zdown.On or A_gripperclose.Off or (S_xpos_at3.Off or S_xpos_atdrop.On)) and (A_zdown.On or A_gripperclose.Off or (S_xpos_at3.On or (S_zpos_atdown.On or S_zpos_atup.Off))))) -> (A_zdown.Off or (S_zpos_atdown.On or S_zpos_atup.Off)) and (A_zdown.On or A_gripperclose.Off or (S_zpos_atdown.On or S_zpos_atup.Off)) [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_zdown.Off or (S_zpos_atdown.On or S_zpos_atup.Off)) and (A_zdown.On or A_gripperclose.Off or (S_zpos_atdown.On or S_zpos_atup.Off)) -> true [backward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 11n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 11n 1p> -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On))) [forward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On))) -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) [forward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) [forward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)) [forward reach with edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)) -> <bdd 16n 3p> [forward reach with edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2distributing := A_x2distributing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 3p> -> <bdd 17n 4p> [forward reach with edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 4p> -> <bdd 17n 5p> [forward reach with edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and S_zpos_atup.On)) (assignments: A_zdown := A_zdown.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 17n 5p> -> <bdd 23n 10p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 10p> -> <bdd 23n 15p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 15p> -> <bdd 23n 20p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 20p> -> <bdd 22n 20p> [forward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 20p> -> <bdd 13n 24p> [forward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 24p> -> <bdd 23n 28p> [forward reach with edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2distributing := A_x2distributing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 28p> -> <bdd 22n 32p> [forward reach with edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 32p> -> <bdd 29n 41p> [forward reach with edge: (event: A_gripperclose_c_on) (guard: A_gripperclose.Off -> A_gripperclose.Off and (S_xpos_at1.On and S_zpos_atdown.On) or (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On) or A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 29n 41p> -> <bdd 28n 41p> [forward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 41p> -> <bdd 29n 44p> [forward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 44p> -> <bdd 28n 44p> [forward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 44p> -> <bdd 27n 44p> [forward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 44p> -> <bdd 20n 52p> [forward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 52p> -> <bdd 27n 58p> [forward reach with edge: (event: A_gripperclose_c_on) (guard: A_gripperclose.Off -> A_gripperclose.Off and (S_xpos_at1.On and S_zpos_atdown.On) or (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On) or A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 27n 58p> -> <bdd 26n 58p> [forward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 58p> -> <bdd 27n 60p> [forward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 60p> -> <bdd 20n 48p> [forward reach with edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atup := S_zpos_atup.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 48p> -> <bdd 19n 48p> [forward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 48p> -> <bdd 18n 28p> [forward reach with edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2distributing := A_x2distributing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 28p> -> <bdd 10n 16p> [forward reach with edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 10n 16p> [fixed point].
Controlled behavior: true -> <bdd 10n 16p>.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 11n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 11n 1p> -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On))) [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On))) -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) [backward reach with edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atup := S_zpos_atup.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) [backward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and (A_gripperclose.Off and S_gripper.Off)) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_gripper.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)) [backward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.On and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)) -> A_x2testing.On and A_zdown.Off and (A_gripperclose.Off and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)) [backward reach with edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: A_x2testing.On and A_zdown.Off and (A_gripperclose.Off and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)) -> A_x2testing.On and A_zdown.Off and (A_gripperclose.Off and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.Off and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) [backward reach with edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: A_x2testing.On and A_zdown.Off and (A_gripperclose.Off and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off))) or A_x2testing.Off and A_x2distributing.On and (A_zdown.Off and A_gripperclose.Off) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))) -> <bdd 15n 6p> [backward reach with edge: (event: A_zdown_c_off) (guard: A_zdown.On -> A_zdown.On and A_gripperclose.On and (S_gripper.On and (S_xpos_at1.On and S_zpos_atdown.On)) or A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On)) or (A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)) or A_zdown.On and A_gripperclose.Off and (S_xpos_atdrop.On and S_zpos_atdown.On))) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 15n 6p> -> <bdd 14n 8p> [backward reach with edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 14n 8p> -> <bdd 17n 12p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 17n 12p> -> <bdd 17n 16p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 17n 16p> -> <bdd 17n 20p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 17n 20p> -> <bdd 16n 20p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 16n 20p> -> <bdd 15n 20p> [backward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 15n 20p> -> <bdd 18n 24p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 18n 24p> -> <bdd 18n 28p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 18n 28p> -> <bdd 18n 32p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward controlled-behavior: <bdd 18n 32p> -> <bdd 10n 16p> [backward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: <bdd 10n 16p>]
Backward reachability: iteration 4.
Backward controlled-behavior: <bdd 10n 16p> [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 10n 21p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2distributing := A_x2distributing.Off): guard: A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On) -> A_x2testing.On and A_x2distributing.On and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or (A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On))).
Edge (event: A_x2distributing_c_on) (guard: A_x2distributing.Off) (assignments: A_x2distributing := A_x2distributing.On): guard: A_x2distributing.Off -> A_x2distributing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off))) or (A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)))).
Edge (event: A_x2testing_c_off) (guard: A_x2testing.On -> A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On)) (assignments: A_x2testing := A_x2testing.Off): guard: A_x2testing.On and (A_x2distributing.On and S_zpos_atup.On) -> A_x2testing.On and A_x2distributing.On and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or (A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On))).
Edge (event: A_x2testing_c_on) (guard: A_x2testing.Off) (assignments: A_x2testing := A_x2testing.On): guard: A_x2testing.Off -> A_x2testing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off))) or (A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)))).
Edge (event: A_zdown_c_off) (guard: A_zdown.On -> A_zdown.On and A_gripperclose.On and (S_gripper.On and (S_xpos_at1.On and S_zpos_atdown.On)) or A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On)) or (A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)) or A_zdown.On and A_gripperclose.Off and (S_xpos_atdrop.On and S_zpos_atdown.On))) (assignments: A_zdown := A_zdown.Off): guard: A_zdown.On and A_gripperclose.On and (S_gripper.On and (S_xpos_at1.On and S_zpos_atdown.On)) or A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On)) or (A_zdown.On and (A_gripperclose.On and S_gripper.On) and (S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)) or A_zdown.On and A_gripperclose.Off and (S_xpos_atdrop.On and S_zpos_atdown.On)) -> <bdd 17n 8p>.
Edge (event: A_zdown_c_on) (guard: A_zdown.Off -> A_x2testing.On and A_x2distributing.On and (A_zdown.Off and S_zpos_atup.On)) (assignments: A_zdown := A_zdown.On): guard: A_x2testing.On and A_x2distributing.On and (A_zdown.Off and S_zpos_atup.On) -> <bdd 11n 4p>.
Edge (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off): guard: A_gripperclose.On and (S_xpos_atdrop.On and S_zpos_atdown.On) -> A_x2testing.On and A_gripperclose.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.On and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and A_x2distributing.On and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_xpos_atdrop.On and (S_zpos_atdown.On and S_zpos_atup.Off))).
Edge (event: A_gripperclose_c_on) (guard: A_gripperclose.Off -> A_gripperclose.Off and (S_xpos_at1.On and S_zpos_atdown.On) or (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On) or A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On): guard: A_gripperclose.Off and (S_xpos_at1.On and S_zpos_atdown.On) or (A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.On and S_zpos_atdown.On) or A_gripperclose.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.On and S_zpos_atdown.On))) -> <bdd 11n 6p>.

Final synthesis result:
  State: (controlled-behavior: <bdd 10n 16p>)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at1.Off and S_xpos_at2.Off and (S_xpos_at3.Off and S_xpos_atdrop.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off)
    Edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atup := S_zpos_atup.On)
    Edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off)
    Edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atdown.Off and S_zpos_atup.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: A_x2distributing_c_off) (guard: A_x2distributing.On -> A_x2testing.On and A_x2distributing.On and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or (A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On)))) (assignments: A_x2distributing := A_x2distributing.Off)
    Edge: (event: A_x2distributing_c_on) (guard: A_x2distributing.Off -> A_x2distributing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off))) or (A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))))) (assignments: A_x2distributing := A_x2distributing.On)
    Edge: (event: A_x2testing_c_off) (guard: A_x2testing.On -> A_x2testing.On and A_x2distributing.On and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or (A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On)))) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: A_x2testing.Off -> A_x2testing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off))) or (A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))))) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: A_zdown.On -> <bdd 17n 8p>) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: A_zdown.Off -> <bdd 11n 4p>) (assignments: A_zdown := A_zdown.On)
    Edge: (event: A_gripperclose_c_off) (guard: A_gripperclose.On -> A_x2testing.On and A_gripperclose.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.On and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and A_x2distributing.On and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_xpos_atdrop.On and (S_zpos_atdown.On and S_zpos_atup.Off)))) (assignments: A_gripperclose := A_gripperclose.Off)
    Edge: (event: A_gripperclose_c_on) (guard: A_gripperclose.Off -> <bdd 11n 6p>) (assignments: A_gripperclose := A_gripperclose.On)

Controlled system:                     exactly 360 states.

Initial (synthesis result):            <bdd 10n 16p>
Initial (uncontrolled system):         <bdd 11n 1p>
Initial (controlled system):           <bdd 11n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_x2distributing_c_off: guard: A_x2testing.On and A_x2distributing.On and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or (A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On))) -> true [assume A_x2testing.On and A_x2distributing.On and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or (A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On)))].
  Event A_x2distributing_c_on: guard: A_x2distributing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off))) or (A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2distributing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)))) -> true [assume A_x2testing.On and A_x2distributing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.On and (A_x2distributing.Off and S_xpos_at1.On) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.On and A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.On and (A_x2distributing.Off and S_xpos_at1.Off) and (S_xpos_at2.On and S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off))) or (A_x2testing.On and A_x2distributing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.On and (A_x2distributing.Off and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.On and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.On and (A_x2distributing.Off and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.On and (A_x2distributing.Off and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))))].
  Event A_x2testing_c_off: guard: A_x2testing.On and A_x2distributing.On and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or (A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On))) -> true [assume A_x2testing.On and A_x2distributing.On and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or (A_x2testing.On and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.Off and S_zpos_atup.On)) or A_x2testing.On and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.Off and S_zpos_atup.On)))].
  Event A_x2testing_c_on: guard: A_x2testing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off))) or (A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and S_xpos_at1.Off and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off)))) -> true [assume A_x2testing.Off and A_x2distributing.On and (S_xpos_at1.On and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (A_x2distributing.On and S_xpos_at1.On) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.On) and (S_xpos_at3.Off and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.On and S_xpos_at3.Off and (S_xpos_atdrop.Off and S_zpos_atdown.Off))) or (A_x2testing.Off and A_x2distributing.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.On and S_xpos_atdrop.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.On and (S_xpos_atdrop.Off and S_zpos_atdown.Off)) or (A_x2testing.Off and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and (A_x2distributing.On and S_xpos_at1.Off) and (S_xpos_at2.Off and (S_xpos_at3.Off and S_zpos_atdown.Off))))].
  Event A_zdown_c_off: guard: <bdd 17n 8p> -> true [assume <bdd 17n 8p>].
  Event A_zdown_c_on: guard: <bdd 11n 4p> -> true [assume <bdd 11n 4p>].
  Event A_gripperclose_c_off: guard: A_x2testing.On and A_gripperclose.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.On and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and A_x2distributing.On and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_xpos_atdrop.On and (S_zpos_atdown.On and S_zpos_atup.Off))) -> true [assume A_x2testing.On and A_gripperclose.On and (S_xpos_at1.Off and S_xpos_at2.Off) and (S_xpos_at3.Off and S_xpos_atdrop.On and (S_zpos_atdown.On and S_zpos_atup.Off)) or A_x2testing.Off and A_x2distributing.On and (A_gripperclose.On and S_xpos_at1.Off) and (S_xpos_at2.Off and S_xpos_at3.Off and (S_xpos_atdrop.On and (S_zpos_atdown.On and S_zpos_atup.Off)))].
  Event A_gripperclose_c_on: guard: <bdd 11n 6p> -> true [assume <bdd 11n 6p>].

Constructing output CIF specification.
Syntesizing supervisor 29.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_airslide            0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_conveyerB           1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_elevator_down       2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_elevator_up         3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   A_pusher              4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   A_transfer2droppos    5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   PusherLift            6      2 * 2     4 * 2       4 * 2       100%
  8      location pointer  n/a   S_Binitialized        7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_capacitive          8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_elevator_down       9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_elevator_up         10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   S_pusher              11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   S_Tinitialized        12     1 * 2     2 * 2       2 * 2       100%
  14     location pointer  n/a   S_transfer_atdrop     13     1 * 2     2 * 2       2 * 2       100%
  15     location pointer  n/a   S_transfer_athalfway  14     1 * 2     2 * 2       2 * 2       100%
  16     location pointer  n/a   S_transfer_atpickup   15     1 * 2     2 * 2       2 * 2       100%
  17     location pointer  n/a   TTimer                16     2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                17     38        74          76          ~97%

Applying automatic variable ordering:
  Number of hyperedges: 61

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   34 (total)                 0.56 (avg/edge) [before]
    Total span:                   26 (total)                 0.43 (avg/edge) [iteration 1]
    Total span:                   26 (total)                 0.43 (avg/edge) [iteration 2]
    Total span:                   26 (total)                 0.43 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   26 (total)                 0.43 (avg/edge) [before]
    Total span:                   22 (total)                 0.36 (avg/edge) [window 8..11]
    Total span:                   20 (total)                 0.33 (avg/edge) [window 12..15]
    Total span:                   20 (total)                 0.33 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_airslide            0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_conveyerB           1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_elevator_up         2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_elevator_down       3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   PusherLift            4      2 * 2     4 * 2       4 * 2       100%
  6      location pointer  n/a   A_pusher              5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   A_transfer2droppos    6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_Binitialized        7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_pusher              8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_elevator_up         9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_elevator_down       10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   S_capacitive          11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   S_transfer_athalfway  12     1 * 2     2 * 2       2 * 2       100%
  14     location pointer  n/a   S_transfer_atdrop     13     1 * 2     2 * 2       2 * 2       100%
  15     location pointer  n/a   S_transfer_atpickup   14     1 * 2     2 * 2       2 * 2       100%
  16     location pointer  n/a   S_Tinitialized        15     1 * 2     2 * 2       2 * 2       100%
  17     location pointer  n/a   TTimer                16     2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                17     38        74          76          ~97%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_transfer_atpickup.Off
Initial   (aut/locs init predicate):     S_transfer_atdrop.Off
Initial   (aut/locs init predicate):     S_transfer_athalfway.On
Initial   (aut/locs init predicate):     A_transfer2droppos.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     S_elevator_up.Off
Initial   (aut/locs init predicate):     S_elevator_down.On
Initial   (aut/locs init predicate):     S_pusher.Off
Initial   (aut/locs init predicate):     S_capacitive.Off
Initial   (aut/locs init predicate):     S_Tinitialized.Off
Initial   (aut/locs init predicate):     A_elevator_up.Off
Initial   (aut/locs init predicate):     A_elevator_down.On
Initial   (aut/locs init predicate):     A_pusher.Off
Initial   (aut/locs init predicate):     A_airslide.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     TTimer.Off
Initial   (aut/locs init predicate):     PusherLift.One
Initial   (aut/locs init predicate):     S_Binitialized.Off
Initial   (aut/locs init predicate):     A_conveyerB.Off
Initial   (auts/locs init predicate):    <bdd 19n 1p>
Initial   (uncontrolled system):         <bdd 19n 1p>
Initial   (system, combined init/inv):   <bdd 19n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_transfer_atpickup.Off
Marked    (aut/locs marker predicate):   S_transfer_atdrop.Off
Marked    (aut/locs marker predicate):   S_transfer_athalfway.On
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   S_elevator_up.Off
Marked    (aut/locs marker predicate):   S_elevator_down.On
Marked    (aut/locs marker predicate):   S_pusher.Off
Marked    (aut/locs marker predicate):   S_capacitive.Off
Marked    (aut/locs marker predicate):   S_Tinitialized.Off
Marked    (aut/locs marker predicate):   A_elevator_up.Off
Marked    (aut/locs marker predicate):   A_elevator_down.On
Marked    (aut/locs marker predicate):   A_pusher.Off
Marked    (aut/locs marker predicate):   A_airslide.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   not TTimer.Running
Marked    (aut/locs marker predicate):   PusherLift.One
Marked    (aut/locs marker predicate):   S_Binitialized.Off
Marked    (aut/locs marker predicate):   A_conveyerB.Off
Marked    (auts/locs marker predicate):  <bdd 17n 1p>
Marked    (uncontrolled system):         <bdd 17n 1p>
Marked    (system, combined marked/inv): <bdd 17n 1p>

State/event exclusion requirements:
  Event "A_elevator_up_c_on" needs:
    S_transfer_athalfway.On
    S_Tinitialized.On
    S_elevator_down.On
    S_pusher.Off
    TTimer.Timeout
    S_capacitive.On
  Event "A_elevator_down_c_off" needs:
    S_transfer_athalfway.On
    S_Tinitialized.On
    S_elevator_down.On
    S_pusher.Off
    TTimer.Timeout
    S_capacitive.On
    PusherLift.One
  Event "A_transfer2droppos_c_on" needs:
    (S_elevator_down.Off or (S_capacitive.Off or S_transfer_atpickup.On)) and ((S_elevator_down.Off or S_capacitive.On or (S_transfer_athalfway.On or S_transfer_atpickup.On)) and (S_elevator_down.On or S_transfer_atpickup.On))
  Event "A_transfer2droppos_c_off" needs:
    (S_elevator_down.Off or S_capacitive.Off or (S_transfer_athalfway.On or S_transfer_atdrop.On)) and ((S_elevator_down.Off or (S_capacitive.On or S_transfer_atdrop.On)) and (S_elevator_down.On or (S_transfer_athalfway.On or S_transfer_atdrop.On)))
  Event "A_elevator_up_c_off" needs:
    S_Tinitialized.On
    S_elevator_up.On
    S_pusher.Off
    TTimer.Timeout
  Event "A_elevator_down_c_on" needs:
    S_Tinitialized.On
    S_elevator_up.On
    S_pusher.Off
    TTimer.Timeout
    PusherLift.Four
  Event "A_airslide_c_on" needs:
    S_Tinitialized.On
    S_pusher.On and S_elevator_up.On
  Event "A_airslide_c_off" needs:
    S_Tinitialized.On
  Event "A_pusher_c_on" needs:
    S_elevator_up.On
    PusherLift.Two
  Event "A_conveyerB_c_on" needs:
    S_Binitialized.On
  Event "A_conveyerB_c_off" needs:
    S_Binitialized.On
  Event "A_pusher_c_off" needs:
    PusherLift.Three

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On) (assignments: A_transfer2droppos := A_transfer2droppos.Off)
    Edge: (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off) (assignments: A_transfer2droppos := A_transfer2droppos.On)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off)
    Edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On and PusherLift.One) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two)
    Edge: (event: A_elevator_down_c_off) (guard: (A_elevator_down.Off or not PusherLift.One) and A_elevator_down.On) (assignments: A_elevator_down := A_elevator_down.Off)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and PusherLift.Four) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and (A_elevator_down.On or not PusherLift.Four)) (assignments: A_elevator_down := A_elevator_down.On)
    Edge: (event: A_pusher_c_off) (guard: PusherLift.Three and A_pusher.On) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four)
    Edge: (event: A_pusher_c_off) (guard: PusherLift.One and A_pusher.On or (PusherLift.Two or PusherLift.Four) and A_pusher.On) (assignments: A_pusher := A_pusher.Off)
    Edge: (event: A_pusher_c_on) (guard: PusherLift.Two and A_pusher.Off) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three)
    Edge: (event: A_pusher_c_on) (guard: (PusherLift.One or PusherLift.Three) and A_pusher.Off or PusherLift.Four and A_pusher.Off) (assignments: A_pusher := A_pusher.On)
    Edge: (event: A_airslide_c_off) (guard: A_airslide.On) (assignments: A_airslide := A_airslide.Off)
    Edge: (event: A_airslide_c_on) (guard: A_airslide.Off) (assignments: A_airslide := A_airslide.On)
    Edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Running) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off)
    Edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off)
    Edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On)
    Edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On) (assignments: A_conveyerB := A_conveyerB.Off)
    Edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off) (assignments: A_conveyerB := A_conveyerB.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "TTimer" (group: 16, domain: 32+33, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On) (assignments: A_transfer2droppos := A_transfer2droppos.Off): guard: A_transfer2droppos.On -> (A_transfer2droppos.Off or S_elevator_down.Off or (S_capacitive.Off or (S_transfer_athalfway.On or S_transfer_atdrop.On))) and (A_transfer2droppos.Off or S_elevator_down.Off or (S_capacitive.On or S_transfer_atdrop.On)) and ((A_transfer2droppos.Off or S_elevator_down.On or (S_transfer_athalfway.On or S_transfer_atdrop.On)) and A_transfer2droppos.On) [requirement: (S_elevator_down.Off or S_capacitive.Off or (S_transfer_athalfway.On or S_transfer_atdrop.On)) and ((S_elevator_down.Off or (S_capacitive.On or S_transfer_atdrop.On)) and (S_elevator_down.On or (S_transfer_athalfway.On or S_transfer_atdrop.On)))].
Edge (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off) (assignments: A_transfer2droppos := A_transfer2droppos.On): guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and (A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.Off or S_transfer_atpickup.On)) and ((A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.On or (S_transfer_athalfway.On or S_transfer_atpickup.On))) and (A_transfer2droppos.On or (S_elevator_down.On or S_transfer_atpickup.On))) [requirement: (S_elevator_down.Off or (S_capacitive.Off or S_transfer_atpickup.On)) and ((S_elevator_down.Off or S_capacitive.On or (S_transfer_athalfway.On or S_transfer_atpickup.On)) and (S_elevator_down.On or S_transfer_atpickup.On))].
Edge (event: A_elevator_up_c_off) (guard: A_elevator_up.On) (assignments: A_elevator_up := A_elevator_up.Off): guard: A_elevator_up.On -> A_elevator_up.On and S_pusher.Off and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout)) [requirement: S_pusher.Off and S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout)].
Edge (event: A_elevator_up_c_on) (guard: A_elevator_up.Off) (assignments: A_elevator_up := A_elevator_up.On): guard: A_elevator_up.Off -> A_elevator_up.Off and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout)) [requirement: S_pusher.Off and (S_elevator_down.On and S_capacitive.On) and (S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))].
Edge (event: A_elevator_down_c_off) (guard: A_elevator_down.On and PusherLift.One) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two): guard: A_elevator_down.On and PusherLift.One -> A_elevator_down.On and PusherLift.One and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout)) [requirement: PusherLift.One and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))].
Edge (event: A_elevator_down_c_off) (guard: (A_elevator_down.Off or not PusherLift.One) and A_elevator_down.On) (assignments: A_elevator_down := A_elevator_down.Off): guard: (A_elevator_down.Off or not PusherLift.One) and A_elevator_down.On -> false [requirement: PusherLift.One and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))].
Edge (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and PusherLift.Four) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One): guard: A_elevator_down.Off and PusherLift.Four -> A_elevator_down.Off and (PusherLift.Four and S_pusher.Off) and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout)) [requirement: PusherLift.Four and S_pusher.Off and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))].
Edge (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and (A_elevator_down.On or not PusherLift.Four)) (assignments: A_elevator_down := A_elevator_down.On): guard: A_elevator_down.Off and (A_elevator_down.On or not PusherLift.Four) -> false [requirement: PusherLift.Four and S_pusher.Off and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))].
Edge (event: A_pusher_c_off) (guard: PusherLift.One and A_pusher.On or (PusherLift.Two or PusherLift.Four) and A_pusher.On) (assignments: A_pusher := A_pusher.Off): guard: PusherLift.One and A_pusher.On or (PusherLift.Two or PusherLift.Four) and A_pusher.On -> false [requirement: PusherLift.Three].
Edge (event: A_pusher_c_on) (guard: PusherLift.Two and A_pusher.Off) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three): guard: PusherLift.Two and A_pusher.Off -> PusherLift.Two and (A_pusher.Off and S_elevator_up.On) [requirement: PusherLift.Two and S_elevator_up.On].
Edge (event: A_pusher_c_on) (guard: (PusherLift.One or PusherLift.Three) and A_pusher.Off or PusherLift.Four and A_pusher.Off) (assignments: A_pusher := A_pusher.On): guard: (PusherLift.One or PusherLift.Three) and A_pusher.Off or PusherLift.Four and A_pusher.Off -> false [requirement: PusherLift.Two and S_elevator_up.On].
Edge (event: A_airslide_c_off) (guard: A_airslide.On) (assignments: A_airslide := A_airslide.Off): guard: A_airslide.On -> A_airslide.On and S_Tinitialized.On [requirement: S_Tinitialized.On].
Edge (event: A_airslide_c_on) (guard: A_airslide.Off) (assignments: A_airslide := A_airslide.On): guard: A_airslide.Off -> A_airslide.Off and S_pusher.On and (S_elevator_up.On and S_Tinitialized.On) [requirement: S_pusher.On and (S_elevator_up.On and S_Tinitialized.On)].
Edge (event: A_conveyerB_c_off) (guard: A_conveyerB.On) (assignments: A_conveyerB := A_conveyerB.Off): guard: A_conveyerB.On -> A_conveyerB.On and S_Binitialized.On [requirement: S_Binitialized.On].
Edge (event: A_conveyerB_c_on) (guard: A_conveyerB.Off) (assignments: A_conveyerB := A_conveyerB.On): guard: A_conveyerB.Off -> A_conveyerB.Off and S_Binitialized.On [requirement: S_Binitialized.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On -> (A_transfer2droppos.Off or S_elevator_down.Off or (S_capacitive.Off or (S_transfer_athalfway.On or S_transfer_atdrop.On))) and (A_transfer2droppos.Off or S_elevator_down.Off or (S_capacitive.On or S_transfer_atdrop.On)) and ((A_transfer2droppos.Off or S_elevator_down.On or (S_transfer_athalfway.On or S_transfer_atdrop.On)) and A_transfer2droppos.On)) (assignments: A_transfer2droppos := A_transfer2droppos.Off)
    Edge: (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and (A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.Off or S_transfer_atpickup.On)) and ((A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.On or (S_transfer_athalfway.On or S_transfer_atpickup.On))) and (A_transfer2droppos.On or (S_elevator_down.On or S_transfer_atpickup.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off)
    Edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_pusher.Off and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_up.Off and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On and PusherLift.One -> A_elevator_down.On and PusherLift.One and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two)
    Edge: (event: A_elevator_down_c_off) (guard: (A_elevator_down.Off or not PusherLift.One) and A_elevator_down.On -> false) (assignments: A_elevator_down := A_elevator_down.Off)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and PusherLift.Four -> A_elevator_down.Off and (PusherLift.Four and S_pusher.Off) and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and (A_elevator_down.On or not PusherLift.Four) -> false) (assignments: A_elevator_down := A_elevator_down.On)
    Edge: (event: A_pusher_c_off) (guard: PusherLift.Three and A_pusher.On) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four)
    Edge: (event: A_pusher_c_off) (guard: PusherLift.One and A_pusher.On or (PusherLift.Two or PusherLift.Four) and A_pusher.On -> false) (assignments: A_pusher := A_pusher.Off)
    Edge: (event: A_pusher_c_on) (guard: PusherLift.Two and A_pusher.Off -> PusherLift.Two and (A_pusher.Off and S_elevator_up.On)) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three)
    Edge: (event: A_pusher_c_on) (guard: (PusherLift.One or PusherLift.Three) and A_pusher.Off or PusherLift.Four and A_pusher.Off -> false) (assignments: A_pusher := A_pusher.On)
    Edge: (event: A_airslide_c_off) (guard: A_airslide.On -> A_airslide.On and S_Tinitialized.On) (assignments: A_airslide := A_airslide.Off)
    Edge: (event: A_airslide_c_on) (guard: A_airslide.Off -> A_airslide.Off and S_pusher.On and (S_elevator_up.On and S_Tinitialized.On)) (assignments: A_airslide := A_airslide.On)
    Edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Running) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off)
    Edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off)
    Edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On)
    Edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> A_conveyerB.On and S_Binitialized.On) (assignments: A_conveyerB := A_conveyerB.Off)
    Edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off -> A_conveyerB.Off and S_Binitialized.On) (assignments: A_conveyerB := A_conveyerB.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 17n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 17n 1p> -> <bdd 16n 1p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 1p> -> <bdd 15n 1p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 1p> -> <bdd 17n 2p> [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 2p> -> <bdd 16n 2p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 2p> -> <bdd 17n 4p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 4p> -> <bdd 16n 4p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 4p> -> <bdd 15n 4p> [backward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 4p> -> <bdd 14n 4p> [backward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 4p> -> <bdd 28n 6p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_pusher.Off and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 28n 6p> -> <bdd 30n 10p> [backward reach with edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and PusherLift.Four -> A_elevator_down.Off and (PusherLift.Four and S_pusher.Off) and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 30n 10p> -> <bdd 32n 14p> [backward reach with edge: (event: A_pusher_c_off) (guard: PusherLift.Three and A_pusher.On) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 32n 14p> -> <bdd 31n 14p> [backward reach with edge: (event: A_pusher_c_on) (guard: PusherLift.Two and A_pusher.Off -> PusherLift.Two and (A_pusher.Off and S_elevator_up.On)) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 31n 14p> -> <bdd 44n 28p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On -> A_airslide.On and S_Tinitialized.On) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 44n 28p> -> <bdd 45n 56p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 45n 56p> -> <bdd 42n 56p> [backward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 42n 56p> -> <bdd 62n 112p> [backward reach with edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> A_conveyerB.On and S_Binitialized.On) (assignments: A_conveyerB := A_conveyerB.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 62n 112p> -> <bdd 59n 112p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 59n 112p> -> <bdd 53n 56p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 53n 56p> -> <bdd 49n 48p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 49n 48p> -> <bdd 48n 48p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 48n 48p> -> <bdd 33n 24p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 33n 24p> -> <bdd 41n 30p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_pusher.Off and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 41n 30p> -> <bdd 43n 50p> [backward reach with edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and PusherLift.Four -> A_elevator_down.Off and (PusherLift.Four and S_pusher.Off) and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 43n 50p> -> <bdd 43n 62p> [backward reach with edge: (event: A_pusher_c_off) (guard: PusherLift.Three and A_pusher.On) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 43n 62p> -> <bdd 38n 54p> [backward reach with edge: (event: A_pusher_c_on) (guard: PusherLift.Two and A_pusher.Off -> PusherLift.Two and (A_pusher.Off and S_elevator_up.On)) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 38n 54p> -> <bdd 37n 54p> [backward reach with edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 37n 54p> -> <bdd 37n 64p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 37n 64p> -> <bdd 22n 32p> [backward reach with edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 22n 32p> -> <bdd 23n 42p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 23n 42p> -> <bdd 22n 42p> [backward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 22n 42p> -> <bdd 19n 32p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 32p> -> <bdd 18n 32p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 32p> -> (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off)))) [backward reach with edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off)))) [fixed point].
Controlled behavior: true -> (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off)))).

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: A_elevator_down.On and (PusherLift.One and A_pusher.On) or (A_elevator_down.On and PusherLift.Three or A_elevator_down.On and (PusherLift.Two or PusherLift.Four)) or (A_elevator_down.Off and PusherLift.One or (A_elevator_down.Off and (PusherLift.Three and A_pusher.Off) or A_elevator_down.Off and ((PusherLift.Two or PusherLift.Four) and A_pusher.On))) [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 19n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 19n 1p> -> <bdd 18n 1p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 18n 1p> -> <bdd 24n 2p> [forward reach with edge: (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and (A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.Off or S_transfer_atpickup.On)) and ((A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.On or (S_transfer_athalfway.On or S_transfer_atpickup.On))) and (A_transfer2droppos.On or (S_elevator_down.On or S_transfer_atpickup.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 24n 2p> -> <bdd 22n 2p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 22n 2p> -> <bdd 20n 2p> [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 20n 2p> -> <bdd 18n 2p> [forward reach with edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 18n 2p> -> <bdd 17n 2p> [forward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 17n 2p> -> <bdd 16n 2p> [forward reach with edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 16n 2p> -> <bdd 17n 4p> [forward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 17n 4p> -> <bdd 15n 4p> [forward reach with edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 15n 4p> -> <bdd 23n 8p> [forward reach with edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off -> A_conveyerB.Off and S_Binitialized.On) (assignments: A_conveyerB := A_conveyerB.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 23n 8p> -> <bdd 25n 12p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 25n 12p> -> <bdd 25n 16p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 25n 16p> -> <bdd 24n 16p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 24n 16p> -> <bdd 26n 20p> [forward reach with edge: (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and (A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.Off or S_transfer_atpickup.On)) and ((A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.On or (S_transfer_athalfway.On or S_transfer_atpickup.On))) and (A_transfer2droppos.On or (S_elevator_down.On or S_transfer_atpickup.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 26n 20p> -> <bdd 28n 40p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 28n 40p> -> <bdd 47n 42p> [forward reach with edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_up.Off and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 47n 42p> -> <bdd 49n 46p> [forward reach with edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On and PusherLift.One -> A_elevator_down.On and PusherLift.One and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 49n 46p> -> <bdd 77n 66p> [forward reach with edge: (event: A_airslide_c_on) (guard: A_airslide.Off -> A_airslide.Off and S_pusher.On and (S_elevator_up.On and S_Tinitialized.On)) (assignments: A_airslide := A_airslide.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 77n 66p> -> <bdd 76n 66p> [forward reach with edge: (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 76n 66p> -> <bdd 52n 33p> [forward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 52n 33p> -> <bdd 41n 21p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 41n 21p> -> <bdd 40n 21p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 40n 21p> -> <bdd 39n 21p> [forward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 39n 21p> -> <bdd 38n 21p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 38n 21p> -> <bdd 39n 27p> [forward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 39n 27p> -> <bdd 38n 27p> [forward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 38n 27p> -> <bdd 37n 27p> [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 37n 27p> -> <bdd 36n 27p> [forward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 36n 27p> -> <bdd 25n 27p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 25n 27p> -> <bdd 39n 28p> [forward reach with edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_up.Off and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 39n 28p> -> <bdd 40n 30p> [forward reach with edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On and PusherLift.One -> A_elevator_down.On and PusherLift.One and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 40n 30p> -> <bdd 37n 33p> [forward reach with edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 37n 33p> -> <bdd 36n 33p> [forward reach with edge: (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 36n 33p> -> <bdd 38n 39p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 38n 39p> -> <bdd 36n 45p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 36n 45p> -> <bdd 35n 45p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 35n 45p> -> <bdd 29n 39p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 29n 39p> -> <bdd 28n 39p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 28n 39p> -> <bdd 27n 39p> [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 27n 39p> -> <bdd 26n 39p> [forward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 26n 39p> -> <bdd 25n 39p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 25n 39p> -> <bdd 28n 45p> [forward reach with edge: (event: A_pusher_c_on) (guard: PusherLift.Two and A_pusher.Off -> PusherLift.Two and (A_pusher.Off and S_elevator_up.On)) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 28n 45p> -> <bdd 40n 78p> [forward reach with edge: (event: A_airslide_c_on) (guard: A_airslide.Off -> A_airslide.Off and S_pusher.On and (S_elevator_up.On and S_Tinitialized.On)) (assignments: A_airslide := A_airslide.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 40n 78p> -> <bdd 37n 84p> [forward reach with edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 37n 84p> -> <bdd 39n 96p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 39n 96p> -> <bdd 37n 108p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 37n 108p> -> <bdd 35n 108p> [forward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 35n 108p> -> <bdd 27n 60p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 27n 60p> -> <bdd 28n 72p> [forward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 28n 72p> -> <bdd 27n 72p> [forward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 27n 72p> -> <bdd 15n 36p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward controlled-behavior: <bdd 15n 36p> -> <bdd 15n 36p> [forward reach with edge: (event: A_pusher_c_off) (guard: PusherLift.Three and A_pusher.On) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off))))]
Forward reachability: iteration 6.
Forward controlled-behavior: <bdd 15n 36p> [fixed point].
Controlled behavior: (A_elevator_down.Off or (not PusherLift.One or A_pusher.Off)) and ((A_elevator_down.Off or not PusherLift.Three) and (A_elevator_down.Off or (PusherLift.One or PusherLift.Three))) and ((A_elevator_down.On or not PusherLift.One) and ((A_elevator_down.On or (not PusherLift.Three or A_pusher.On)) and (A_elevator_down.On or PusherLift.One or (PusherLift.Three or A_pusher.Off)))) -> <bdd 15n 36p>.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 17n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 17n 1p> -> <bdd 16n 1p> [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 16n 1p> -> <bdd 15n 1p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 15n 1p> -> <bdd 14n 1p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 14n 1p> -> <bdd 13n 1p> [backward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 13n 1p> -> <bdd 12n 1p> [backward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 23n 2p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On -> A_airslide.On and S_Tinitialized.On) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 23n 2p> -> <bdd 24n 4p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 24n 4p> -> <bdd 22n 4p> [backward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 22n 4p> -> <bdd 34n 8p> [backward reach with edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> A_conveyerB.On and S_Binitialized.On) (assignments: A_conveyerB := A_conveyerB.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 34n 8p> -> <bdd 38n 16p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 38n 16p> -> <bdd 38n 24p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 38n 24p> -> <bdd 40n 48p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 40n 48p> -> <bdd 20n 24p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 20n 24p> -> <bdd 39n 30p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_pusher.Off and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 39n 30p> -> <bdd 43n 42p> [backward reach with edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and PusherLift.Four -> A_elevator_down.Off and (PusherLift.Four and S_pusher.Off) and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 43n 42p> -> <bdd 47n 54p> [backward reach with edge: (event: A_pusher_c_off) (guard: PusherLift.Three and A_pusher.On) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 47n 54p> -> <bdd 45n 54p> [backward reach with edge: (event: A_pusher_c_on) (guard: PusherLift.Two and A_pusher.Off -> PusherLift.Two and (A_pusher.Off and S_elevator_up.On)) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 45n 54p> -> <bdd 45n 84p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 45n 84p> -> <bdd 30n 42p> [backward reach with edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 30n 42p> -> <bdd 29n 42p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 29n 42p> -> <bdd 30n 72p> [backward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 30n 72p> -> <bdd 29n 72p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 29n 72p> -> <bdd 28n 72p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward controlled-behavior: <bdd 28n 72p> -> <bdd 15n 36p> [backward reach with edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 15n 36p>]
Backward reachability: iteration 4.
Backward controlled-behavior: <bdd 15n 36p> [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 15n 45p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On -> (A_transfer2droppos.Off or S_elevator_down.Off or (S_capacitive.Off or (S_transfer_athalfway.On or S_transfer_atdrop.On))) and (A_transfer2droppos.Off or S_elevator_down.Off or (S_capacitive.On or S_transfer_atdrop.On)) and ((A_transfer2droppos.Off or S_elevator_down.On or (S_transfer_athalfway.On or S_transfer_atdrop.On)) and A_transfer2droppos.On)) (assignments: A_transfer2droppos := A_transfer2droppos.Off): guard: (A_transfer2droppos.Off or S_elevator_down.Off or (S_capacitive.Off or (S_transfer_athalfway.On or S_transfer_atdrop.On))) and (A_transfer2droppos.Off or S_elevator_down.Off or (S_capacitive.On or S_transfer_atdrop.On)) and ((A_transfer2droppos.Off or S_elevator_down.On or (S_transfer_athalfway.On or S_transfer_atdrop.On)) and A_transfer2droppos.On) -> <bdd 19n 42p>.
Edge (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and (A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.Off or S_transfer_atpickup.On)) and ((A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.On or (S_transfer_athalfway.On or S_transfer_atpickup.On))) and (A_transfer2droppos.On or (S_elevator_down.On or S_transfer_atpickup.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On): guard: A_transfer2droppos.Off and (A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.Off or S_transfer_atpickup.On)) and ((A_transfer2droppos.On or S_elevator_down.Off or (S_capacitive.On or (S_transfer_athalfway.On or S_transfer_atpickup.On))) and (A_transfer2droppos.On or (S_elevator_down.On or S_transfer_atpickup.On))) -> <bdd 20n 30p>.
Edge (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_pusher.Off and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off): guard: A_elevator_up.On and S_pusher.Off and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout)) -> <bdd 18n 9p>.
Edge (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_up.Off and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.On): guard: A_elevator_up.Off and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout)) -> <bdd 18n 3p>.
Edge (event: A_elevator_down_c_off) (guard: A_elevator_down.On and PusherLift.One -> A_elevator_down.On and PusherLift.One and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two): guard: A_elevator_down.On and PusherLift.One and (S_pusher.Off and S_elevator_down.On) and (S_capacitive.On and S_transfer_athalfway.On and (S_Tinitialized.On and TTimer.Timeout)) -> <bdd 14n 1p>.
Edge (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and PusherLift.Four -> A_elevator_down.Off and (PusherLift.Four and S_pusher.Off) and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One): guard: A_elevator_down.Off and (PusherLift.Four and S_pusher.Off) and (S_elevator_up.On and (S_Tinitialized.On and TTimer.Timeout)) -> <bdd 14n 3p>.
Edge (event: A_pusher_c_off) (guard: PusherLift.Three and A_pusher.On) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four): guard: PusherLift.Three and A_pusher.On -> <bdd 12n 12p>.
Edge (event: A_pusher_c_on) (guard: PusherLift.Two and A_pusher.Off -> PusherLift.Two and (A_pusher.Off and S_elevator_up.On)) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three): guard: PusherLift.Two and (A_pusher.Off and S_elevator_up.On) -> <bdd 12n 6p>.
Edge (event: A_airslide_c_off) (guard: A_airslide.On -> A_airslide.On and S_Tinitialized.On) (assignments: A_airslide := A_airslide.Off): guard: A_airslide.On and S_Tinitialized.On -> <bdd 17n 36p>.
Edge (event: A_airslide_c_on) (guard: A_airslide.Off -> A_airslide.Off and S_pusher.On and (S_elevator_up.On and S_Tinitialized.On)) (assignments: A_airslide := A_airslide.On): guard: A_airslide.Off and S_pusher.On and (S_elevator_up.On and S_Tinitialized.On) -> <bdd 18n 18p>.
Edge (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running): guard: TTimer.Off -> <bdd 15n 18p>.
Edge (event: TTimer_c_reset) (guard: TTimer.Running) (assignments: TTimer := TTimer.Off): guard: TTimer.Running -> <bdd 15n 18p>.
Edge (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off): guard: TTimer.Timeout -> <bdd 15n 18p>.
Edge (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> A_conveyerB.On and S_Binitialized.On) (assignments: A_conveyerB := A_conveyerB.Off): guard: A_conveyerB.On and S_Binitialized.On -> <bdd 17n 36p>.
Edge (event: A_conveyerB_c_on) (guard: A_conveyerB.Off -> A_conveyerB.Off and S_Binitialized.On) (assignments: A_conveyerB := A_conveyerB.On): guard: A_conveyerB.Off and S_Binitialized.On -> <bdd 17n 36p>.

Final synthesis result:
  State: (controlled-behavior: <bdd 15n 36p>)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On -> <bdd 19n 42p>) (assignments: A_transfer2droppos := A_transfer2droppos.Off)
    Edge: (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off -> <bdd 20n 30p>) (assignments: A_transfer2droppos := A_transfer2droppos.On)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off)
    Edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> <bdd 18n 9p>) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> <bdd 18n 3p>) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On and PusherLift.One -> <bdd 14n 1p>) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two)
    Edge: (event: A_elevator_down_c_off) (guard: (A_elevator_down.Off or not PusherLift.One) and A_elevator_down.On -> false) (assignments: A_elevator_down := A_elevator_down.Off)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and PusherLift.Four -> <bdd 14n 3p>) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off and (A_elevator_down.On or not PusherLift.Four) -> false) (assignments: A_elevator_down := A_elevator_down.On)
    Edge: (event: A_pusher_c_off) (guard: PusherLift.Three and A_pusher.On -> <bdd 12n 12p>) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four)
    Edge: (event: A_pusher_c_off) (guard: PusherLift.One and A_pusher.On or (PusherLift.Two or PusherLift.Four) and A_pusher.On -> false) (assignments: A_pusher := A_pusher.Off)
    Edge: (event: A_pusher_c_on) (guard: PusherLift.Two and A_pusher.Off -> <bdd 12n 6p>) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three)
    Edge: (event: A_pusher_c_on) (guard: (PusherLift.One or PusherLift.Three) and A_pusher.Off or PusherLift.Four and A_pusher.Off -> false) (assignments: A_pusher := A_pusher.On)
    Edge: (event: A_airslide_c_off) (guard: A_airslide.On -> <bdd 17n 36p>) (assignments: A_airslide := A_airslide.Off)
    Edge: (event: A_airslide_c_on) (guard: A_airslide.Off -> <bdd 18n 18p>) (assignments: A_airslide := A_airslide.On)
    Edge: (event: TTimer_c_on) (guard: TTimer.Off -> <bdd 15n 18p>) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Running -> <bdd 15n 18p>) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Timeout -> <bdd 15n 18p>) (assignments: TTimer := TTimer.Off)
    Edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off)
    Edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On)
    Edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> <bdd 17n 36p>) (assignments: A_conveyerB := A_conveyerB.Off)
    Edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off -> <bdd 17n 36p>) (assignments: A_conveyerB := A_conveyerB.On)

Controlled system:                     exactly 36,864 states.

Initial (synthesis result):            <bdd 15n 36p>
Initial (uncontrolled system):         <bdd 19n 1p>
Initial (controlled system):           <bdd 19n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_transfer2droppos_c_off: guard: <bdd 19n 42p> -> true [assume <bdd 19n 42p>].
  Event A_transfer2droppos_c_on: guard: <bdd 20n 30p> -> true [assume <bdd 20n 30p>].
  Event A_elevator_up_c_off: guard: <bdd 18n 9p> -> true [assume <bdd 18n 9p>].
  Event A_elevator_up_c_on: guard: <bdd 18n 3p> -> true [assume <bdd 18n 3p>].
  Event A_elevator_down_c_off: guard: <bdd 14n 1p> -> true [assume <bdd 14n 1p>].
  Event A_elevator_down_c_on: guard: <bdd 14n 3p> -> true [assume <bdd 14n 3p>].
  Event A_pusher_c_off: guard: <bdd 12n 12p> -> true [assume <bdd 12n 12p>].
  Event A_pusher_c_on: guard: <bdd 12n 6p> -> true [assume <bdd 12n 6p>].
  Event A_airslide_c_off: guard: <bdd 17n 36p> -> true [assume <bdd 17n 36p>].
  Event A_airslide_c_on: guard: <bdd 18n 18p> -> true [assume <bdd 18n 18p>].
  Event TTimer_c_on: guard: <bdd 15n 18p> -> true [assume <bdd 15n 18p>].
  Event TTimer_c_reset: guard: <bdd 16n 36p> -> true [assume <bdd 16n 36p>].
  Event A_conveyerB_c_off: guard: <bdd 17n 36p> -> true [assume <bdd 17n 36p>].
  Event A_conveyerB_c_on: guard: <bdd 17n 36p> -> true [assume <bdd 17n 36p>].

Constructing output CIF specification.
Syntesizing supervisor 30.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_ejectpulse          0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_transfer2droppos    1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_transfer2pickpos    2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_vacuum              3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_Hinitialized        4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_transfer_atdrop     5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_transfer_athalfway  6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_transfer_atpickup   7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_vacuum              8      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                9      18        36          36          100%

Applying automatic variable ordering:
  Number of hyperedges: 34

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                    9 (total)                 0.26 (avg/edge) [before]
    Total span:                    9 (total)                 0.26 (avg/edge) [iteration 1]
    Total span:                    9 (total)                 0.26 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    9 (total)                 0.26 (avg/edge) [before]
    Total span:                    8 (total)                 0.24 (avg/edge) [window 3..6]
    Total span:                    7 (total)                 0.21 (avg/edge) [window 4..7]
    Total span:                    7 (total)                 0.21 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_ejectpulse          0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_transfer2droppos    1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_transfer2pickpos    2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_Hinitialized        3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   A_vacuum              4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_transfer_atpickup   5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_transfer_athalfway  6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_transfer_atdrop     7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_vacuum              8      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                9      18        36          36          100%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_transfer_atpickup.Off
Initial   (aut/locs init predicate):     S_transfer_atdrop.Off
Initial   (aut/locs init predicate):     S_transfer_athalfway.On
Initial   (aut/locs init predicate):     S_vacuum.Off
Initial   (aut/locs init predicate):     S_Hinitialized.Off
Initial   (aut/locs init predicate):     A_transfer2pickpos.Off
Initial   (aut/locs init predicate):     A_transfer2droppos.Off
Initial   (aut/locs init predicate):     A_vacuum.Off
Initial   (aut/locs init predicate):     A_ejectpulse.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)))
Initial   (uncontrolled system):         A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)))
Initial   (system, combined init/inv):   A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_transfer_atpickup.Off
Marked    (aut/locs marker predicate):   S_transfer_atdrop.Off
Marked    (aut/locs marker predicate):   S_transfer_athalfway.On
Marked    (aut/locs marker predicate):   S_vacuum.Off
Marked    (aut/locs marker predicate):   S_Hinitialized.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   A_vacuum.Off
Marked    (aut/locs marker predicate):   A_ejectpulse.Off
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off))
Marked    (uncontrolled system):         A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off))
Marked    (system, combined marked/inv): A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off))

State/event exclusion requirements:
  Event "A_transfer2pickpos_c_on" needs:
    S_Hinitialized.On
    A_transfer2droppos.Off
    S_vacuum.Off
  Event "A_transfer2pickpos_c_off" needs:
    S_Hinitialized.On
  Event "A_transfer2droppos_c_on" needs:
    S_Hinitialized.On
    A_transfer2pickpos.Off
    S_vacuum.On
  Event "A_transfer2droppos_c_off" needs:
    S_Hinitialized.On
  Event "A_vacuum_c_on" needs:
    S_Hinitialized.On
    S_transfer_atpickup.On
  Event "A_vacuum_c_off" needs:
    S_Hinitialized.On
    S_transfer_atdrop.On
  Event "A_ejectpulse_c_on" needs:
    S_Hinitialized.On
    S_transfer_atdrop.On and S_vacuum.On
  Event "A_ejectpulse_c_off" needs:
    S_Hinitialized.On
    S_vacuum.Off

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off)
    Edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On)
    Edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off)
    Edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)
    Edge: (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On) (assignments: A_transfer2droppos := A_transfer2droppos.Off)
    Edge: (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off) (assignments: A_transfer2droppos := A_transfer2droppos.On)
    Edge: (event: A_vacuum_c_off) (guard: A_vacuum.On) (assignments: A_vacuum := A_vacuum.Off)
    Edge: (event: A_vacuum_c_on) (guard: A_vacuum.Off) (assignments: A_vacuum := A_vacuum.On)
    Edge: (event: A_ejectpulse_c_off) (guard: A_ejectpulse.On) (assignments: A_ejectpulse := A_ejectpulse.Off)
    Edge: (event: A_ejectpulse_c_on) (guard: A_ejectpulse.Off) (assignments: A_ejectpulse := A_ejectpulse.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off): guard: A_transfer2pickpos.On -> A_transfer2pickpos.On and S_Hinitialized.On [requirement: S_Hinitialized.On].
Edge (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off) (assignments: A_transfer2pickpos := A_transfer2pickpos.On): guard: A_transfer2pickpos.Off -> A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.Off) [requirement: A_transfer2droppos.Off and (S_Hinitialized.On and S_vacuum.Off)].
Edge (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On) (assignments: A_transfer2droppos := A_transfer2droppos.Off): guard: A_transfer2droppos.On -> A_transfer2droppos.On and S_Hinitialized.On [requirement: S_Hinitialized.On].
Edge (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off) (assignments: A_transfer2droppos := A_transfer2droppos.On): guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.On) [requirement: A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.On)].
Edge (event: A_vacuum_c_off) (guard: A_vacuum.On) (assignments: A_vacuum := A_vacuum.Off): guard: A_vacuum.On -> S_Hinitialized.On and (A_vacuum.On and S_transfer_atdrop.On) [requirement: S_Hinitialized.On and S_transfer_atdrop.On].
Edge (event: A_vacuum_c_on) (guard: A_vacuum.Off) (assignments: A_vacuum := A_vacuum.On): guard: A_vacuum.Off -> S_Hinitialized.On and (A_vacuum.Off and S_transfer_atpickup.On) [requirement: S_Hinitialized.On and S_transfer_atpickup.On].
Edge (event: A_ejectpulse_c_off) (guard: A_ejectpulse.On) (assignments: A_ejectpulse := A_ejectpulse.Off): guard: A_ejectpulse.On -> A_ejectpulse.On and (S_Hinitialized.On and S_vacuum.Off) [requirement: S_Hinitialized.On and S_vacuum.Off].
Edge (event: A_ejectpulse_c_on) (guard: A_ejectpulse.Off) (assignments: A_ejectpulse := A_ejectpulse.On): guard: A_ejectpulse.Off -> A_ejectpulse.Off and S_Hinitialized.On and (S_transfer_atdrop.On and S_vacuum.On) [requirement: S_Hinitialized.On and (S_transfer_atdrop.On and S_vacuum.On)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off)
    Edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On)
    Edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off)
    Edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On -> A_transfer2pickpos.On and S_Hinitialized.On) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off -> A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.Off)) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)
    Edge: (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On -> A_transfer2droppos.On and S_Hinitialized.On) (assignments: A_transfer2droppos := A_transfer2droppos.Off)
    Edge: (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.On)) (assignments: A_transfer2droppos := A_transfer2droppos.On)
    Edge: (event: A_vacuum_c_off) (guard: A_vacuum.On -> S_Hinitialized.On and (A_vacuum.On and S_transfer_atdrop.On)) (assignments: A_vacuum := A_vacuum.Off)
    Edge: (event: A_vacuum_c_on) (guard: A_vacuum.Off -> S_Hinitialized.On and (A_vacuum.Off and S_transfer_atpickup.On)) (assignments: A_vacuum := A_vacuum.On)
    Edge: (event: A_ejectpulse_c_off) (guard: A_ejectpulse.On -> A_ejectpulse.On and (S_Hinitialized.On and S_vacuum.Off)) (assignments: A_ejectpulse := A_ejectpulse.Off)
    Edge: (event: A_ejectpulse_c_on) (guard: A_ejectpulse.Off -> A_ejectpulse.Off and S_Hinitialized.On and (S_transfer_atdrop.On and S_vacuum.On)) (assignments: A_ejectpulse := A_ejectpulse.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) -> A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) -> A_ejectpulse.Off and S_Hinitialized.Off and (A_vacuum.Off and (S_transfer_athalfway.On and S_vacuum.Off)) [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_ejectpulse.Off and S_Hinitialized.Off and (A_vacuum.Off and (S_transfer_athalfway.On and S_vacuum.Off)) -> A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.On and S_vacuum.Off)) or (A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_vacuum.Off)) or A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off))) [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.On and S_vacuum.Off)) or (A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_vacuum.Off)) or A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off))) -> A_ejectpulse.Off and S_Hinitialized.Off and (A_vacuum.Off and (S_transfer_atpickup.On and S_transfer_athalfway.On)) or (A_ejectpulse.Off and S_Hinitialized.Off and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.On)) or A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) [backward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_ejectpulse.Off and S_Hinitialized.Off and (A_vacuum.Off and (S_transfer_atpickup.On and S_transfer_athalfway.On)) or (A_ejectpulse.Off and S_Hinitialized.Off and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.On)) or A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) -> A_ejectpulse.Off and (A_ejectpulse.On or A_vacuum.Off) and ((A_ejectpulse.On or A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.On)) and (A_ejectpulse.On or A_vacuum.On or (S_transfer_atpickup.On or (S_transfer_athalfway.On or S_transfer_atdrop.Off)))) [backward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_ejectpulse.Off and (A_ejectpulse.On or A_vacuum.Off) and ((A_ejectpulse.On or A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.On)) and (A_ejectpulse.On or A_vacuum.On or (S_transfer_atpickup.On or (S_transfer_athalfway.On or S_transfer_atdrop.Off)))) -> A_ejectpulse.Off and (A_ejectpulse.On or S_Hinitialized.Off or (A_vacuum.Off or (S_transfer_athalfway.Off or S_transfer_atdrop.On))) and ((A_ejectpulse.On or S_Hinitialized.Off or (A_vacuum.Off or S_transfer_athalfway.On)) and (A_ejectpulse.On or S_Hinitialized.Off or (A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.On)))) and ((A_ejectpulse.On or (S_Hinitialized.Off or A_vacuum.On) or (S_transfer_atpickup.On or (S_transfer_athalfway.On or S_transfer_atdrop.Off))) and (A_ejectpulse.On or (S_Hinitialized.On or A_vacuum.Off)) and ((A_ejectpulse.On or S_Hinitialized.On or (A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.On))) and (A_ejectpulse.On or (S_Hinitialized.On or A_vacuum.On) or (S_transfer_atpickup.On or (S_transfer_athalfway.On or S_transfer_atdrop.Off))))) [backward reach with edge: (event: A_vacuum_c_off) (guard: A_vacuum.On -> S_Hinitialized.On and (A_vacuum.On and S_transfer_atdrop.On)) (assignments: A_vacuum := A_vacuum.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_ejectpulse.Off and (A_ejectpulse.On or S_Hinitialized.Off or (A_vacuum.Off or (S_transfer_athalfway.Off or S_transfer_atdrop.On))) and ((A_ejectpulse.On or S_Hinitialized.Off or (A_vacuum.Off or S_transfer_athalfway.On)) and (A_ejectpulse.On or S_Hinitialized.Off or (A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.On)))) and ((A_ejectpulse.On or (S_Hinitialized.Off or A_vacuum.On) or (S_transfer_atpickup.On or (S_transfer_athalfway.On or S_transfer_atdrop.Off))) and (A_ejectpulse.On or (S_Hinitialized.On or A_vacuum.Off)) and ((A_ejectpulse.On or S_Hinitialized.On or (A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.On))) and (A_ejectpulse.On or (S_Hinitialized.On or A_vacuum.On) or (S_transfer_atpickup.On or (S_transfer_athalfway.On or S_transfer_atdrop.Off))))) -> <bdd 19n 11p> [backward reach with edge: (event: A_ejectpulse_c_off) (guard: A_ejectpulse.On -> A_ejectpulse.On and (S_Hinitialized.On and S_vacuum.Off)) (assignments: A_ejectpulse := A_ejectpulse.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 19n 11p> -> <bdd 15n 8p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 8p> -> <bdd 11n 5p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 5p> -> A_ejectpulse.On and S_Hinitialized.On and (A_vacuum.On and (S_transfer_athalfway.On and S_transfer_atdrop.On)) or A_ejectpulse.On and (S_Hinitialized.On and A_vacuum.Off) or (A_ejectpulse.Off and S_Hinitialized.On and (A_vacuum.On and (S_transfer_athalfway.On and S_transfer_atdrop.On)) or (A_ejectpulse.Off and (S_Hinitialized.On and A_vacuum.Off) or A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off))) [backward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_ejectpulse.On and S_Hinitialized.On and (A_vacuum.On and (S_transfer_athalfway.On and S_transfer_atdrop.On)) or A_ejectpulse.On and (S_Hinitialized.On and A_vacuum.Off) or (A_ejectpulse.Off and S_Hinitialized.On and (A_vacuum.On and (S_transfer_athalfway.On and S_transfer_atdrop.On)) or (A_ejectpulse.Off and (S_Hinitialized.On and A_vacuum.Off) or A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off))) -> A_vacuum.On and (S_transfer_athalfway.On and S_transfer_atdrop.On) or A_vacuum.Off [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_vacuum.On and (S_transfer_athalfway.On and S_transfer_atdrop.On) or A_vacuum.Off -> (S_Hinitialized.Off or (A_vacuum.Off or S_transfer_atdrop.On)) and ((S_Hinitialized.On or A_vacuum.Off or (S_transfer_athalfway.Off or S_transfer_atdrop.On)) and (S_Hinitialized.On or (A_vacuum.Off or S_transfer_athalfway.On))) [backward reach with edge: (event: A_vacuum_c_off) (guard: A_vacuum.On -> S_Hinitialized.On and (A_vacuum.On and S_transfer_atdrop.On)) (assignments: A_vacuum := A_vacuum.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: (S_Hinitialized.Off or (A_vacuum.Off or S_transfer_atdrop.On)) and ((S_Hinitialized.On or A_vacuum.Off or (S_transfer_athalfway.Off or S_transfer_atdrop.On)) and (S_Hinitialized.On or (A_vacuum.Off or S_transfer_athalfway.On))) -> (S_Hinitialized.Off or A_vacuum.Off or (S_transfer_atpickup.Off or S_transfer_atdrop.On)) and (S_Hinitialized.Off or A_vacuum.Off or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.On))) and ((S_Hinitialized.On or A_vacuum.Off or (S_transfer_athalfway.Off or S_transfer_atdrop.On)) and (S_Hinitialized.On or (A_vacuum.Off or S_transfer_athalfway.On))) [backward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (S_Hinitialized.Off or A_vacuum.Off or (S_transfer_atpickup.Off or S_transfer_atdrop.On)) and (S_Hinitialized.Off or A_vacuum.Off or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.On))) and ((S_Hinitialized.On or A_vacuum.Off or (S_transfer_athalfway.Off or S_transfer_atdrop.On)) and (S_Hinitialized.On or (A_vacuum.Off or S_transfer_athalfway.On))) -> (S_Hinitialized.Off or A_vacuum.Off or (S_transfer_atpickup.Off or S_transfer_atdrop.On)) and ((S_Hinitialized.On or A_vacuum.Off or (S_transfer_athalfway.Off or S_transfer_atdrop.On)) and (S_Hinitialized.On or (A_vacuum.Off or S_transfer_athalfway.On))) [backward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (S_Hinitialized.Off or A_vacuum.Off or (S_transfer_atpickup.Off or S_transfer_atdrop.On)) and ((S_Hinitialized.On or A_vacuum.Off or (S_transfer_athalfway.Off or S_transfer_atdrop.On)) and (S_Hinitialized.On or (A_vacuum.Off or S_transfer_athalfway.On))) -> A_vacuum.Off or (S_transfer_atpickup.Off or S_transfer_atdrop.On) [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: A_vacuum.Off or (S_transfer_atpickup.Off or S_transfer_atdrop.On) -> true [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 5.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off))) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off))) -> A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) -> A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (S_Hinitialized.Off and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) [forward reach with edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (S_Hinitialized.Off and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) -> A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) [forward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) -> <bdd 11n 2p> [forward reach with edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off -> A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.Off)) (assignments: A_transfer2pickpos := A_transfer2pickpos.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 2p> -> <bdd 17n 3p> [forward reach with edge: (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.On)) (assignments: A_transfer2droppos := A_transfer2droppos.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 17n 3p> -> <bdd 20n 6p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 6p> -> <bdd 23n 9p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 9p> -> <bdd 17n 9p> [forward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 9p> -> A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (S_Hinitialized.On and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.On and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.On and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.On) and (S_Hinitialized.On and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))))) [forward reach with edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (S_Hinitialized.On and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.On and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.On and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.On) and (S_Hinitialized.On and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_ejectpulse.Off and (A_transfer2droppos.Off and A_transfer2pickpos.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))))) -> A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) or (A_ejectpulse.Off and (A_transfer2droppos.Off and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_ejectpulse.Off and A_transfer2droppos.Off and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))) [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) or (A_ejectpulse.Off and (A_transfer2droppos.Off and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_ejectpulse.Off and (A_transfer2droppos.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_ejectpulse.Off and A_transfer2droppos.Off and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))) -> <bdd 11n 14p> [forward reach with edge: (event: A_vacuum_c_on) (guard: A_vacuum.Off -> S_Hinitialized.On and (A_vacuum.Off and S_transfer_atpickup.On)) (assignments: A_vacuum := A_vacuum.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 14p> -> <bdd 19n 16p> [forward reach with edge: (event: A_ejectpulse_c_on) (guard: A_ejectpulse.Off -> A_ejectpulse.Off and S_Hinitialized.On and (S_transfer_atdrop.On and S_vacuum.On)) (assignments: A_ejectpulse := A_ejectpulse.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 19n 16p> -> <bdd 18n 16p> [forward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 16p> -> <bdd 17n 16p> [forward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 16p> -> <bdd 19n 18p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 18p> -> <bdd 17n 16p> [forward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 16p> -> <bdd 14n 16p> [forward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 16p> -> <bdd 11n 10p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 10p> -> <bdd 17n 16p> [forward reach with edge: (event: A_ejectpulse_c_on) (guard: A_ejectpulse.Off -> A_ejectpulse.Off and S_Hinitialized.On and (S_transfer_atdrop.On and S_vacuum.On)) (assignments: A_ejectpulse := A_ejectpulse.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 17n 16p> -> <bdd 16n 20p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 20p> -> <bdd 15n 20p> [forward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 20p> -> <bdd 16n 22p> [forward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 22p> -> <bdd 13n 22p> [forward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 22p> -> <bdd 11n 16p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 16p> -> <bdd 12n 22p> [forward reach with edge: (event: A_vacuum_c_on) (guard: A_vacuum.Off -> S_Hinitialized.On and (A_vacuum.Off and S_transfer_atpickup.On)) (assignments: A_vacuum := A_vacuum.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 12n 22p> -> A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 6.
Forward controlled-behavior: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) [fixed point].
Controlled behavior: true -> A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))).

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) [marker predicate]
Backward controlled-behavior: A_ejectpulse.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) -> A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off))) or A_ejectpulse.Off and A_transfer2droppos.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) [restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward reachability: iteration 1.
Backward controlled-behavior: A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off))) or A_ejectpulse.Off and A_transfer2droppos.Off and (S_Hinitialized.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) -> A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.Off and (A_transfer2droppos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward controlled-behavior: A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.Off and (A_transfer2droppos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) -> A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (S_Hinitialized.Off and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) or A_ejectpulse.Off and (A_transfer2droppos.Off and S_Hinitialized.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) [backward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward controlled-behavior: A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (S_Hinitialized.Off and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) or A_ejectpulse.Off and (A_transfer2droppos.Off and S_Hinitialized.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) -> A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) or A_ejectpulse.Off and A_transfer2droppos.Off and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) [backward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward controlled-behavior: A_ejectpulse.Off and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) or A_ejectpulse.Off and A_transfer2droppos.Off and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) -> <bdd 13n 4p> [backward reach with edge: (event: A_ejectpulse_c_off) (guard: A_ejectpulse.On -> A_ejectpulse.On and (S_Hinitialized.On and S_vacuum.Off)) (assignments: A_ejectpulse := A_ejectpulse.Off), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 13n 4p> -> <bdd 15n 8p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward controlled-behavior: <bdd 15n 8p> -> <bdd 17n 12p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward controlled-behavior: <bdd 17n 12p> -> <bdd 11n 12p> [backward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward controlled-behavior: <bdd 11n 12p> -> A_transfer2droppos.On and (A_transfer2pickpos.Off and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and (A_transfer2pickpos.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) or (A_transfer2droppos.Off and A_vacuum.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.Off and A_vacuum.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.Off and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward controlled-behavior: A_transfer2droppos.On and (A_transfer2pickpos.Off and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and (A_transfer2pickpos.Off and A_vacuum.Off) and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) or (A_transfer2droppos.Off and A_vacuum.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.Off and A_vacuum.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.Off and A_vacuum.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) -> <bdd 12n 14p> [backward reach with edge: (event: A_vacuum_c_off) (guard: A_vacuum.On -> S_Hinitialized.On and (A_vacuum.On and S_transfer_atdrop.On)) (assignments: A_vacuum := A_vacuum.Off), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 12n 14p> -> <bdd 11n 14p> [backward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward controlled-behavior: <bdd 11n 14p> -> <bdd 10n 16p> [backward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward controlled-behavior: <bdd 10n 16p> -> (A_transfer2droppos.Off or A_transfer2pickpos.Off) and (A_transfer2droppos.Off or A_transfer2pickpos.On or (A_vacuum.Off or S_transfer_atpickup.Off)) and ((A_transfer2droppos.Off or (A_transfer2pickpos.On or A_vacuum.Off) or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.Off))) and ((A_transfer2droppos.Off or A_transfer2pickpos.On or (A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.Off))) and (A_transfer2droppos.Off or (A_transfer2pickpos.On or A_vacuum.On) or (S_transfer_atpickup.Off or (S_transfer_athalfway.On or S_transfer_atdrop.Off))))) and ((A_transfer2droppos.Off or (A_transfer2pickpos.On or A_vacuum.On) or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.Off))) and ((A_transfer2droppos.On or (A_vacuum.Off or S_transfer_atpickup.Off)) and (A_transfer2droppos.On or A_vacuum.Off or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.Off)))) and ((A_transfer2droppos.On or A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.Off)) and ((A_transfer2droppos.On or A_vacuum.On or (S_transfer_atpickup.Off or (S_transfer_athalfway.On or S_transfer_atdrop.Off))) and (A_transfer2droppos.On or A_vacuum.On or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.Off)))))) [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward reachability: iteration 4.
Backward controlled-behavior: (A_transfer2droppos.Off or A_transfer2pickpos.Off) and (A_transfer2droppos.Off or A_transfer2pickpos.On or (A_vacuum.Off or S_transfer_atpickup.Off)) and ((A_transfer2droppos.Off or (A_transfer2pickpos.On or A_vacuum.Off) or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.Off))) and ((A_transfer2droppos.Off or A_transfer2pickpos.On or (A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.Off))) and (A_transfer2droppos.Off or (A_transfer2pickpos.On or A_vacuum.On) or (S_transfer_atpickup.Off or (S_transfer_athalfway.On or S_transfer_atdrop.Off))))) and ((A_transfer2droppos.Off or (A_transfer2pickpos.On or A_vacuum.On) or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.Off))) and ((A_transfer2droppos.On or (A_vacuum.Off or S_transfer_atpickup.Off)) and (A_transfer2droppos.On or A_vacuum.Off or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.Off)))) and ((A_transfer2droppos.On or A_vacuum.On or (S_transfer_atpickup.Off or S_transfer_athalfway.Off)) and ((A_transfer2droppos.On or A_vacuum.On or (S_transfer_atpickup.Off or (S_transfer_athalfway.On or S_transfer_atdrop.Off))) and (A_transfer2droppos.On or A_vacuum.On or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.Off)))))) -> A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))]
Backward reachability: iteration 5.
Backward controlled-behavior: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: (A_transfer2droppos.Off or A_transfer2pickpos.On or (S_transfer_atpickup.Off or (S_transfer_athalfway.On or S_transfer_atdrop.On))) and ((A_transfer2droppos.Off or A_transfer2pickpos.On or (S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.On))) and (A_transfer2droppos.Off or A_transfer2pickpos.On or (S_transfer_atpickup.On or S_transfer_athalfway.On))) and ((A_transfer2droppos.On or S_transfer_atpickup.Off or (S_transfer_athalfway.On or S_transfer_atdrop.On)) and ((A_transfer2droppos.On or S_transfer_atpickup.On or (S_transfer_athalfway.Off or S_transfer_atdrop.On)) and (A_transfer2droppos.On or (S_transfer_atpickup.On or S_transfer_athalfway.On)))) [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On -> A_transfer2pickpos.On and S_Hinitialized.On) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off): guard: A_transfer2pickpos.On and S_Hinitialized.On -> A_transfer2pickpos.On and S_Hinitialized.On and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2pickpos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2pickpos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)).
Edge (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off -> A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.Off)) (assignments: A_transfer2pickpos := A_transfer2pickpos.On): guard: A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.Off) -> A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off))).
Edge (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On -> A_transfer2droppos.On and S_Hinitialized.On) (assignments: A_transfer2droppos := A_transfer2droppos.Off): guard: A_transfer2droppos.On and S_Hinitialized.On -> A_transfer2droppos.On and S_Hinitialized.On and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)).
Edge (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.On)) (assignments: A_transfer2droppos := A_transfer2droppos.On): guard: A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_Hinitialized.On and S_vacuum.On) -> A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.On)) or (A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.On)) or A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.On))).
Edge (event: A_vacuum_c_off) (guard: A_vacuum.On -> S_Hinitialized.On and (A_vacuum.On and S_transfer_atdrop.On)) (assignments: A_vacuum := A_vacuum.Off): guard: S_Hinitialized.On and (A_vacuum.On and S_transfer_atdrop.On) -> A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.On and S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.On)) or A_transfer2droppos.Off and (S_Hinitialized.On and A_vacuum.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.On)).
Edge (event: A_vacuum_c_on) (guard: A_vacuum.Off -> S_Hinitialized.On and (A_vacuum.Off and S_transfer_atpickup.On)) (assignments: A_vacuum := A_vacuum.On): guard: S_Hinitialized.On and (A_vacuum.Off and S_transfer_atpickup.On) -> A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or A_transfer2droppos.Off and (S_Hinitialized.On and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)).
Edge (event: A_ejectpulse_c_off) (guard: A_ejectpulse.On -> A_ejectpulse.On and (S_Hinitialized.On and S_vacuum.Off)) (assignments: A_ejectpulse := A_ejectpulse.Off): guard: A_ejectpulse.On and (S_Hinitialized.On and S_vacuum.Off) -> A_ejectpulse.On and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_ejectpulse.On and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.On and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (S_Hinitialized.On and S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off))) or (A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off)))).
Edge (event: A_ejectpulse_c_on) (guard: A_ejectpulse.Off -> A_ejectpulse.Off and S_Hinitialized.On and (S_transfer_atdrop.On and S_vacuum.On)) (assignments: A_ejectpulse := A_ejectpulse.On): guard: A_ejectpulse.Off and S_Hinitialized.On and (S_transfer_atdrop.On and S_vacuum.On) -> A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_vacuum.On)) or A_ejectpulse.Off and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_vacuum.On)).

Final synthesis result:
  State: (controlled-behavior: A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))))
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off)
    Edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On)
    Edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off)
    Edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On -> A_transfer2pickpos.On and S_Hinitialized.On and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2pickpos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2pickpos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off -> A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off)))) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)
    Edge: (event: A_transfer2droppos_c_off) (guard: A_transfer2droppos.On -> A_transfer2droppos.On and S_Hinitialized.On and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and S_transfer_athalfway.Off))) (assignments: A_transfer2droppos := A_transfer2droppos.Off)
    Edge: (event: A_transfer2droppos_c_on) (guard: A_transfer2droppos.Off -> A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.On)) or (A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.On)) or A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On)
    Edge: (event: A_vacuum_c_off) (guard: A_vacuum.On -> A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.On and S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.On)) or A_transfer2droppos.Off and (S_Hinitialized.On and A_vacuum.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.On))) (assignments: A_vacuum := A_vacuum.Off)
    Edge: (event: A_vacuum_c_on) (guard: A_vacuum.Off -> A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or A_transfer2droppos.Off and (S_Hinitialized.On and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) (assignments: A_vacuum := A_vacuum.On)
    Edge: (event: A_ejectpulse_c_off) (guard: A_ejectpulse.On -> A_ejectpulse.On and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_ejectpulse.On and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.On and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (S_Hinitialized.On and S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off))) or (A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off))))) (assignments: A_ejectpulse := A_ejectpulse.Off)
    Edge: (event: A_ejectpulse_c_on) (guard: A_ejectpulse.Off -> A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_vacuum.On)) or A_ejectpulse.Off and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_vacuum.On))) (assignments: A_ejectpulse := A_ejectpulse.On)

Controlled system:                     exactly 192 states.

Initial (synthesis result):            A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) or (A_transfer2droppos.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (A_transfer2droppos.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off) or A_transfer2droppos.Off and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))
Initial (uncontrolled system):         A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)))
Initial (controlled system):           A_ejectpulse.Off and A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.Off) and (A_vacuum.Off and S_transfer_atpickup.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_transfer2pickpos_c_off: guard: A_transfer2pickpos.On and S_Hinitialized.On and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2pickpos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2pickpos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) -> true [assume A_transfer2droppos.Off and (A_transfer2pickpos.On and S_Hinitialized.On) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.Off and (A_transfer2pickpos.On and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.Off and A_transfer2pickpos.On and (S_Hinitialized.On and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))].
  Event A_transfer2pickpos_c_on: guard: A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off))) -> true [assume A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off)))].
  Event A_transfer2droppos_c_off: guard: A_transfer2droppos.On and S_Hinitialized.On and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and S_Hinitialized.On and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)) -> true [assume A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.On and S_transfer_atdrop.Off)) or A_transfer2droppos.On and A_transfer2pickpos.Off and (S_Hinitialized.On and (S_transfer_atpickup.Off and S_transfer_athalfway.Off)))].
  Event A_transfer2droppos_c_on: guard: A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.On)) or (A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.On)) or A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.On))) -> true [assume A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.On)) or (A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.On)) or A_transfer2droppos.Off and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.On)))].
  Event A_vacuum_c_off: guard: A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.On and S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.On)) or A_transfer2droppos.Off and (S_Hinitialized.On and A_vacuum.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.On)) -> true [assume A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.On and S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.On)) or A_transfer2droppos.Off and (S_Hinitialized.On and A_vacuum.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.On))].
  Event A_vacuum_c_on: guard: A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or A_transfer2droppos.Off and (S_Hinitialized.On and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) -> true [assume A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (A_vacuum.Off and S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or A_transfer2droppos.Off and (S_Hinitialized.On and A_vacuum.Off) and (S_transfer_atpickup.On and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))].
  Event A_ejectpulse_c_off: guard: A_ejectpulse.On and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_ejectpulse.On and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.On and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (S_Hinitialized.On and S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off))) or (A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off)))) -> true [assume A_ejectpulse.On and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_ejectpulse.On and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.On and (A_transfer2droppos.On and A_transfer2pickpos.Off) and (S_Hinitialized.On and S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off))) or (A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.On and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_vacuum.Off)) or (A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_vacuum.Off)) or A_ejectpulse.On and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and (S_transfer_athalfway.Off and S_vacuum.Off))))].
  Event A_ejectpulse_c_on: guard: A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_vacuum.On)) or A_ejectpulse.Off and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_vacuum.On)) -> true [assume A_ejectpulse.Off and A_transfer2droppos.On and (A_transfer2pickpos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_vacuum.On)) or A_ejectpulse.Off and (A_transfer2droppos.Off and S_Hinitialized.On) and (S_transfer_atpickup.Off and S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_vacuum.On))].

Constructing output CIF specification.
Syntesizing supervisor 39.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name             Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_elevator_down  0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_elevator_up    1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_opticalT       2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_reflective     3      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  Total                                           4      8         16          16          100%

Applying automatic variable ordering:
  Number of hyperedges: 16

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_opticalT.Off
Initial   (aut/locs init predicate):     S_reflective.Off
Initial   (aut/locs init predicate):     A_elevator_up.Off
Initial   (aut/locs init predicate):     A_elevator_down.On
Initial   (auts/locs init predicate):    A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off)
Initial   (uncontrolled system):         A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off)
Initial   (system, combined init/inv):   A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_opticalT.Off
Marked    (aut/locs marker predicate):   S_reflective.Off
Marked    (aut/locs marker predicate):   A_elevator_up.Off
Marked    (aut/locs marker predicate):   A_elevator_down.On
Marked    (auts/locs marker predicate):  A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off)
Marked    (uncontrolled system):         A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off)
Marked    (system, combined marked/inv): A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off)

State/event exclusion requirements:
  Event "A_elevator_up_c_on" needs:
    S_reflective.Off
    A_elevator_down.Off
    S_reflective.Off
  Event "A_elevator_down_c_off" needs:
    S_reflective.Off
    S_reflective.Off
  Event "A_elevator_down_c_on" needs:
    A_elevator_up.Off
    S_opticalT.Off
  Event "A_elevator_up_c_off" needs:
    S_opticalT.Off

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off)
    Edge: (event: S_opticalT_u_on) (guard: S_opticalT.Off) (assignments: S_opticalT := S_opticalT.On)
    Edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off)
    Edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On)
    Edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On) (assignments: A_elevator_down := A_elevator_down.Off)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off) (assignments: A_elevator_down := A_elevator_down.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_elevator_up_c_off) (guard: A_elevator_up.On) (assignments: A_elevator_up := A_elevator_up.Off): guard: A_elevator_up.On -> A_elevator_up.On and S_opticalT.Off [requirement: S_opticalT.Off].
Edge (event: A_elevator_up_c_on) (guard: A_elevator_up.Off) (assignments: A_elevator_up := A_elevator_up.On): guard: A_elevator_up.Off -> A_elevator_down.Off and (A_elevator_up.Off and S_reflective.Off) [requirement: A_elevator_down.Off and S_reflective.Off].
Edge (event: A_elevator_down_c_off) (guard: A_elevator_down.On) (assignments: A_elevator_down := A_elevator_down.Off): guard: A_elevator_down.On -> A_elevator_down.On and S_reflective.Off [requirement: S_reflective.Off].
Edge (event: A_elevator_down_c_on) (guard: A_elevator_down.Off) (assignments: A_elevator_down := A_elevator_down.On): guard: A_elevator_down.Off -> A_elevator_down.Off and (A_elevator_up.Off and S_opticalT.Off) [requirement: A_elevator_up.Off and S_opticalT.Off].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off)
    Edge: (event: S_opticalT_u_on) (guard: S_opticalT.Off) (assignments: S_opticalT := S_opticalT.On)
    Edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off)
    Edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On)
    Edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_opticalT.Off) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_down.Off and (A_elevator_up.Off and S_reflective.Off)) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On -> A_elevator_down.On and S_reflective.Off) (assignments: A_elevator_down := A_elevator_down.Off)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off -> A_elevator_down.Off and (A_elevator_up.Off and S_opticalT.Off)) (assignments: A_elevator_down := A_elevator_down.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off) -> A_elevator_down.On and (A_elevator_up.Off and S_reflective.Off) [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_elevator_down.On and (A_elevator_up.Off and S_reflective.Off) -> A_elevator_down.On and A_elevator_up.Off [backward reach with edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_elevator_down.On and A_elevator_up.Off -> (A_elevator_down.Off or (A_elevator_up.Off or S_opticalT.Off)) and A_elevator_down.On [backward reach with edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_opticalT.Off) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_elevator_down.Off or (A_elevator_up.Off or S_opticalT.Off)) and A_elevator_down.On -> (A_elevator_down.Off or (A_elevator_up.Off or S_opticalT.Off)) and ((A_elevator_down.On or A_elevator_up.Off) and (A_elevator_down.On or (A_elevator_up.On or S_opticalT.Off))) [backward reach with edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off -> A_elevator_down.Off and (A_elevator_up.Off and S_opticalT.Off)) (assignments: A_elevator_down := A_elevator_down.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: (A_elevator_down.Off or (A_elevator_up.Off or S_opticalT.Off)) and ((A_elevator_down.On or A_elevator_up.Off) and (A_elevator_down.On or (A_elevator_up.On or S_opticalT.Off))) -> A_elevator_down.On or A_elevator_up.Off [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_elevator_down.On or A_elevator_up.Off -> A_elevator_down.On or (A_elevator_up.Off or S_opticalT.Off) [backward reach with edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_opticalT.Off) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: A_elevator_down.On or (A_elevator_up.Off or S_opticalT.Off) -> true [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off) -> A_elevator_down.On and (A_elevator_up.Off and S_reflective.Off) [forward reach with edge: (event: S_opticalT_u_on) (guard: S_opticalT.Off) (assignments: S_opticalT := S_opticalT.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_down.On and (A_elevator_up.Off and S_reflective.Off) -> A_elevator_down.On and A_elevator_up.Off [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_down.On and A_elevator_up.Off -> A_elevator_down.On and A_elevator_up.Off or A_elevator_down.Off and (A_elevator_up.Off and S_reflective.Off) [forward reach with edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On -> A_elevator_down.On and S_reflective.Off) (assignments: A_elevator_down := A_elevator_down.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_elevator_down.On and A_elevator_up.Off or A_elevator_down.Off and (A_elevator_up.Off and S_reflective.Off) -> A_elevator_up.Off [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_up.Off -> (A_elevator_down.Off or A_elevator_up.Off) and (A_elevator_down.On or (A_elevator_up.Off or S_reflective.Off)) [forward reach with edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_down.Off and (A_elevator_up.Off and S_reflective.Off)) (assignments: A_elevator_up := A_elevator_up.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: (A_elevator_down.Off or A_elevator_up.Off) and (A_elevator_down.On or (A_elevator_up.Off or S_reflective.Off)) -> A_elevator_down.Off or A_elevator_up.Off [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: A_elevator_down.Off or A_elevator_up.Off [fixed point].
Controlled behavior: true -> A_elevator_down.Off or A_elevator_up.Off.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off) -> A_elevator_down.On and (A_elevator_up.Off and S_reflective.Off) [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: A_elevator_down.Off or A_elevator_up.Off]
Backward controlled-behavior: A_elevator_down.On and (A_elevator_up.Off and S_reflective.Off) -> A_elevator_down.On and A_elevator_up.Off [backward reach with edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off), restricted to current/previous controlled-behavior predicate: A_elevator_down.Off or A_elevator_up.Off]
Backward controlled-behavior: A_elevator_down.On and A_elevator_up.Off -> A_elevator_down.On and A_elevator_up.Off or A_elevator_down.Off and (A_elevator_up.Off and S_opticalT.Off) [backward reach with edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off -> A_elevator_down.Off and (A_elevator_up.Off and S_opticalT.Off)) (assignments: A_elevator_down := A_elevator_down.On), restricted to current/previous controlled-behavior predicate: A_elevator_down.Off or A_elevator_up.Off]
Backward reachability: iteration 2.
Backward controlled-behavior: A_elevator_down.On and A_elevator_up.Off or A_elevator_down.Off and (A_elevator_up.Off and S_opticalT.Off) -> A_elevator_up.Off [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: A_elevator_down.Off or A_elevator_up.Off]
Backward controlled-behavior: A_elevator_up.Off -> (A_elevator_down.Off or A_elevator_up.Off) and (A_elevator_down.On or (A_elevator_up.Off or S_opticalT.Off)) [backward reach with edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_opticalT.Off) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: A_elevator_down.Off or A_elevator_up.Off]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_elevator_down.Off or A_elevator_up.Off) and (A_elevator_down.On or (A_elevator_up.Off or S_opticalT.Off)) -> A_elevator_down.Off or A_elevator_up.Off [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: A_elevator_down.Off or A_elevator_up.Off]
Backward reachability: iteration 4.
Backward controlled-behavior: A_elevator_down.Off or A_elevator_up.Off [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: A_elevator_down.On and A_elevator_up.On [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: A_elevator_down.Off or A_elevator_up.Off)
    Edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off)
    Edge: (event: S_opticalT_u_on) (guard: S_opticalT.Off) (assignments: S_opticalT := S_opticalT.On)
    Edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off)
    Edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On)
    Edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> A_elevator_up.On and S_opticalT.Off) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_down.Off and (A_elevator_up.Off and S_reflective.Off)) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On -> A_elevator_down.On and S_reflective.Off) (assignments: A_elevator_down := A_elevator_down.Off)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off -> A_elevator_down.Off and (A_elevator_up.Off and S_opticalT.Off)) (assignments: A_elevator_down := A_elevator_down.On)

Controlled system:                     exactly 12 states.

Initial (synthesis result):            A_elevator_down.Off or A_elevator_up.Off
Initial (uncontrolled system):         A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off)
Initial (controlled system):           A_elevator_down.On and A_elevator_up.Off and (S_opticalT.Off and S_reflective.Off)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_elevator_up_c_off: guard: A_elevator_up.On and S_opticalT.Off -> true [assume A_elevator_down.Off and (A_elevator_up.On and S_opticalT.Off)].
  Event A_elevator_up_c_on: guard: A_elevator_down.Off and (A_elevator_up.Off and S_reflective.Off) -> true [assume A_elevator_down.Off and (A_elevator_up.Off and S_reflective.Off)].
  Event A_elevator_down_c_off: guard: A_elevator_down.On and S_reflective.Off -> true [assume A_elevator_down.On and (A_elevator_up.Off and S_reflective.Off)].
  Event A_elevator_down_c_on: guard: A_elevator_down.Off and (A_elevator_up.Off and S_opticalT.Off) -> true [assume A_elevator_down.Off and (A_elevator_up.Off and S_opticalT.Off)].

Constructing output CIF specification.
Syntesizing supervisor 44.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name             Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_pusher         0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_productheight  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_pusher         2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_Tinitialized   3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   TTimer           4      2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  Total                                           5      12        22          24          ~92%

Applying automatic variable ordering:
  Number of hyperedges: 19

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_pusher.Off
Initial   (aut/locs init predicate):     S_productheight.Off
Initial   (aut/locs init predicate):     S_Tinitialized.Off
Initial   (aut/locs init predicate):     A_pusher.Off
Initial   (aut/locs init predicate):     TTimer.Off
Initial   (auts/locs init predicate):    A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and TTimer.Off))
Initial   (uncontrolled system):         A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and TTimer.Off))
Initial   (system, combined init/inv):   A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and TTimer.Off))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_pusher.Off
Marked    (aut/locs marker predicate):   S_productheight.Off
Marked    (aut/locs marker predicate):   S_Tinitialized.Off
Marked    (aut/locs marker predicate):   A_pusher.Off
Marked    (aut/locs marker predicate):   not TTimer.Running
Marked    (auts/locs marker predicate):  A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and not TTimer.Running))
Marked    (uncontrolled system):         A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and not TTimer.Running))
Marked    (system, combined marked/inv): A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and not TTimer.Running))

State/event exclusion requirements:
  Event "A_pusher_c_on" needs:
    S_Tinitialized.On
    S_productheight.On
  Event "A_pusher_c_off" needs:
    S_Tinitialized.On
    S_pusher.On
  Event "TTimer_c_on" needs:
    S_Tinitialized.On
    A_pusher.Off
  Event "TTimer_c_reset" needs:
    S_Tinitialized.On
    A_pusher.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off)
    Edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_pusher_c_off) (guard: A_pusher.On) (assignments: A_pusher := A_pusher.Off)
    Edge: (event: A_pusher_c_on) (guard: A_pusher.Off) (assignments: A_pusher := A_pusher.On)
    Edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Running) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "TTimer" (group: 4, domain: 8+9, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_pusher_c_off) (guard: A_pusher.On) (assignments: A_pusher := A_pusher.Off): guard: A_pusher.On -> A_pusher.On and (S_pusher.On and S_Tinitialized.On) [requirement: S_pusher.On and S_Tinitialized.On].
Edge (event: A_pusher_c_on) (guard: A_pusher.Off) (assignments: A_pusher := A_pusher.On): guard: A_pusher.Off -> A_pusher.Off and (S_productheight.On and S_Tinitialized.On) [requirement: S_productheight.On and S_Tinitialized.On].
Edge (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running): guard: TTimer.Off -> A_pusher.Off and (S_Tinitialized.On and TTimer.Off) [requirement: A_pusher.Off and S_Tinitialized.On].
Edge (event: TTimer_c_reset) (guard: TTimer.Running) (assignments: TTimer := TTimer.Off): guard: TTimer.Running -> A_pusher.On and (S_Tinitialized.On and TTimer.Running) [requirement: A_pusher.On and S_Tinitialized.On].
Edge (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off): guard: TTimer.Timeout -> A_pusher.On and (S_Tinitialized.On and TTimer.Timeout) [requirement: A_pusher.On and S_Tinitialized.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off)
    Edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_pusher_c_off) (guard: A_pusher.On -> A_pusher.On and (S_pusher.On and S_Tinitialized.On)) (assignments: A_pusher := A_pusher.Off)
    Edge: (event: A_pusher_c_on) (guard: A_pusher.Off -> A_pusher.Off and (S_productheight.On and S_Tinitialized.On)) (assignments: A_pusher := A_pusher.On)
    Edge: (event: TTimer_c_on) (guard: TTimer.Off -> A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Running -> A_pusher.On and (S_Tinitialized.On and TTimer.Running)) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Timeout -> A_pusher.On and (S_Tinitialized.On and TTimer.Timeout)) (assignments: TTimer := TTimer.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and not TTimer.Running)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and not TTimer.Running)) -> A_pusher.Off and S_productheight.Off and (S_Tinitialized.Off and not TTimer.Running) [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher.Off and S_productheight.Off and (S_Tinitialized.Off and not TTimer.Running) -> A_pusher.Off and (S_Tinitialized.Off and not TTimer.Running) [backward reach with edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher.Off and (S_Tinitialized.Off and not TTimer.Running) -> A_pusher.Off and not TTimer.Running [backward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher.Off and not TTimer.Running -> A_pusher.On and S_pusher.On and (S_Tinitialized.On and not TTimer.Running) or A_pusher.Off and not TTimer.Running [backward reach with edge: (event: A_pusher_c_off) (guard: A_pusher.On -> A_pusher.On and (S_pusher.On and S_Tinitialized.On)) (assignments: A_pusher := A_pusher.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher.On and S_pusher.On and (S_Tinitialized.On and not TTimer.Running) or A_pusher.Off and not TTimer.Running -> (A_pusher.Off or (S_pusher.Off or S_Tinitialized.On)) and (A_pusher.Off or S_pusher.On) [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: (A_pusher.Off or (S_pusher.Off or S_Tinitialized.On)) and (A_pusher.Off or S_pusher.On) -> A_pusher.Off or S_Tinitialized.On [backward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher.Off or S_Tinitialized.On -> true [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and TTimer.Off)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and TTimer.Off)) -> A_pusher.Off and S_productheight.Off and (S_Tinitialized.Off and TTimer.Off) [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher.Off and S_productheight.Off and (S_Tinitialized.Off and TTimer.Off) -> A_pusher.Off and (S_Tinitialized.Off and TTimer.Off) [forward reach with edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher.Off and (S_Tinitialized.Off and TTimer.Off) -> A_pusher.Off and TTimer.Off [forward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher.Off and TTimer.Off -> A_pusher.On and S_productheight.On and (S_Tinitialized.On and TTimer.Off) or A_pusher.Off and TTimer.Off [forward reach with edge: (event: A_pusher_c_on) (guard: A_pusher.Off -> A_pusher.Off and (S_productheight.On and S_Tinitialized.On)) (assignments: A_pusher := A_pusher.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher.On and S_productheight.On and (S_Tinitialized.On and TTimer.Off) or A_pusher.Off and TTimer.Off -> A_pusher.On and S_productheight.On and (S_Tinitialized.On and TTimer.Off) or (A_pusher.Off and (S_Tinitialized.On and not TTimer.Timeout) or A_pusher.Off and (S_Tinitialized.Off and TTimer.Off)) [forward reach with edge: (event: TTimer_c_on) (guard: TTimer.Off -> A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher.On and S_productheight.On and (S_Tinitialized.On and TTimer.Off) or (A_pusher.Off and (S_Tinitialized.On and not TTimer.Timeout) or A_pusher.Off and (S_Tinitialized.Off and TTimer.Off)) -> A_pusher.On and S_productheight.On and (S_Tinitialized.On and TTimer.Off) or A_pusher.Off and (S_Tinitialized.On and not TTimer.Running) or (A_pusher.Off and (S_Tinitialized.On and TTimer.Running) or A_pusher.Off and (S_Tinitialized.Off and TTimer.Off)) [forward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_pusher.On and S_productheight.On and (S_Tinitialized.On and TTimer.Off) or A_pusher.Off and (S_Tinitialized.On and not TTimer.Running) or (A_pusher.Off and (S_Tinitialized.On and TTimer.Running) or A_pusher.Off and (S_Tinitialized.Off and TTimer.Off)) -> A_pusher.On and (S_Tinitialized.On and TTimer.Off) or A_pusher.Off and (S_Tinitialized.On and not TTimer.Running) or (A_pusher.Off and (S_Tinitialized.On and TTimer.Running) or A_pusher.Off and (S_Tinitialized.Off and TTimer.Off)) [forward reach with edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher.On and (S_Tinitialized.On and TTimer.Off) or A_pusher.Off and (S_Tinitialized.On and not TTimer.Running) or (A_pusher.Off and (S_Tinitialized.On and TTimer.Running) or A_pusher.Off and (S_Tinitialized.Off and TTimer.Off)) -> (A_pusher.Off or not TTimer.Timeout) and (A_pusher.Off or not TTimer.Running) [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_pusher.Off or not TTimer.Timeout) and (A_pusher.Off or not TTimer.Running) -> (A_pusher.Off or S_productheight.Off or (S_Tinitialized.On or not TTimer.Timeout)) and (A_pusher.Off or S_productheight.Off or (S_Tinitialized.On or not TTimer.Running)) and ((A_pusher.Off or (S_productheight.On or not TTimer.Timeout)) and (A_pusher.Off or (S_productheight.On or not TTimer.Running))) [forward reach with edge: (event: A_pusher_c_on) (guard: A_pusher.Off -> A_pusher.Off and (S_productheight.On and S_Tinitialized.On)) (assignments: A_pusher := A_pusher.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: (A_pusher.Off or S_productheight.Off or (S_Tinitialized.On or not TTimer.Timeout)) and (A_pusher.Off or S_productheight.Off or (S_Tinitialized.On or not TTimer.Running)) and ((A_pusher.Off or (S_productheight.On or not TTimer.Timeout)) and (A_pusher.Off or (S_productheight.On or not TTimer.Running))) -> (A_pusher.Off or (S_Tinitialized.On or not TTimer.Timeout)) and (A_pusher.Off or (S_Tinitialized.On or not TTimer.Running)) [forward reach with edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_pusher.Off or (S_Tinitialized.On or not TTimer.Timeout)) and (A_pusher.Off or (S_Tinitialized.On or not TTimer.Running)) -> true [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_pusher_c_off) (guard: A_pusher.On -> A_pusher.On and (S_pusher.On and S_Tinitialized.On)) (assignments: A_pusher := A_pusher.Off): guard: A_pusher.On and (S_pusher.On and S_Tinitialized.On) -> (A_pusher.Off or (S_pusher.Off or S_Tinitialized.On)) and ((A_pusher.Off or S_pusher.On) and A_pusher.On).
Edge (event: A_pusher_c_on) (guard: A_pusher.Off -> A_pusher.Off and (S_productheight.On and S_Tinitialized.On)) (assignments: A_pusher := A_pusher.On): guard: A_pusher.Off and (S_productheight.On and S_Tinitialized.On) -> A_pusher.Off and ((A_pusher.On or (S_productheight.Off or S_Tinitialized.On)) and (A_pusher.On or S_productheight.On)).

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off)
    Edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_pusher_c_off) (guard: A_pusher.On -> (A_pusher.Off or (S_pusher.Off or S_Tinitialized.On)) and ((A_pusher.Off or S_pusher.On) and A_pusher.On)) (assignments: A_pusher := A_pusher.Off)
    Edge: (event: A_pusher_c_on) (guard: A_pusher.Off -> A_pusher.Off and ((A_pusher.On or (S_productheight.Off or S_Tinitialized.On)) and (A_pusher.On or S_productheight.On))) (assignments: A_pusher := A_pusher.On)
    Edge: (event: TTimer_c_on) (guard: TTimer.Off -> A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Running -> A_pusher.On and (S_Tinitialized.On and TTimer.Running)) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Timeout -> A_pusher.On and (S_Tinitialized.On and TTimer.Timeout)) (assignments: TTimer := TTimer.Off)

Controlled system:                     exactly 48 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and TTimer.Off))
Initial (controlled system):           A_pusher.Off and S_productheight.Off and (S_pusher.Off and (S_Tinitialized.Off and TTimer.Off))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_pusher_c_off: guard: (A_pusher.Off or (S_pusher.Off or S_Tinitialized.On)) and ((A_pusher.Off or S_pusher.On) and A_pusher.On) -> true [assume (A_pusher.Off or (S_pusher.Off or S_Tinitialized.On)) and ((A_pusher.Off or S_pusher.On) and A_pusher.On)].
  Event A_pusher_c_on: guard: A_pusher.Off and ((A_pusher.On or (S_productheight.Off or S_Tinitialized.On)) and (A_pusher.On or S_productheight.On)) -> true [assume A_pusher.Off and ((A_pusher.On or (S_productheight.Off or S_Tinitialized.On)) and (A_pusher.On or S_productheight.On))].
  Event TTimer_c_on: guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off) -> true [assume A_pusher.Off and (S_Tinitialized.On and TTimer.Off)].
  Event TTimer_c_reset: guard: A_pusher.On and (S_Tinitialized.On and TTimer.Timeout) or A_pusher.On and (S_Tinitialized.On and TTimer.Running) -> true [assume A_pusher.On and (S_Tinitialized.On and TTimer.Timeout) or A_pusher.On and (S_Tinitialized.On and TTimer.Running)].

Constructing output CIF specification.
Syntesizing supervisor 50.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_separator         0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_atinput           1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_atseparator       2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_Binitialized      3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_separator_closed  4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_separator_opened  5      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ------------------  -----  --------  ----------  ----------  -----------
  Total                                              6      12        24          24          100%

Applying automatic variable ordering:
  Number of hyperedges: 19

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    2 (total)                 0.11 (avg/edge) [before]
    Total span:                    2 (total)                 0.11 (avg/edge) [iteration 1]
    Total span:                    2 (total)                 0.11 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    2 (total)                 0.11 (avg/edge) [before]
    Total span:                    2 (total)                 0.11 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_atseparator.Off
Initial   (aut/locs init predicate):     S_separator_opened.Off
Initial   (aut/locs init predicate):     S_separator_closed.On
Initial   (aut/locs init predicate):     S_Binitialized.Off
Initial   (aut/locs init predicate):     A_separator.On
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     S_atinput.Off
Initial   (auts/locs init predicate):    A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off))
Initial   (uncontrolled system):         A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off))
Initial   (system, combined init/inv):   A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_atseparator.Off
Marked    (aut/locs marker predicate):   S_separator_opened.Off
Marked    (aut/locs marker predicate):   S_separator_closed.On
Marked    (aut/locs marker predicate):   S_Binitialized.Off
Marked    (aut/locs marker predicate):   A_separator.On
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   S_atinput.Off
Marked    (auts/locs marker predicate):  A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off))
Marked    (uncontrolled system):         A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off))
Marked    (system, combined marked/inv): A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off))

State/event exclusion requirements:
  Event "A_separator_c_off" needs:
    S_atinput.Off
    S_Binitialized.On
    S_separator_opened.On
    S_atseparator.Off
  Event "A_separator_c_on" needs:
    S_Binitialized.On
    S_separator_closed.On
    S_atseparator.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_atseparator_u_off) (guard: S_atseparator.On) (assignments: S_atseparator := S_atseparator.Off)
    Edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On)
    Edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off)
    Edge: (event: S_separator_opened_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_opened := S_separator_opened.On)
    Edge: (event: S_separator_closed_u_off) (guard: S_separator_closed.On) (assignments: S_separator_closed := S_separator_closed.Off)
    Edge: (event: S_separator_closed_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_closed := S_separator_closed.On)
    Edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off)
    Edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On)
    Edge: (event: A_separator_c_off) (guard: A_separator.On) (assignments: A_separator := A_separator.Off)
    Edge: (event: A_separator_c_on) (guard: A_separator.Off) (assignments: A_separator := A_separator.On)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_separator_c_off) (guard: A_separator.On) (assignments: A_separator := A_separator.Off): guard: A_separator.On -> A_separator.On and S_atinput.Off and (S_atseparator.Off and (S_Binitialized.On and S_separator_opened.On)) [requirement: S_atinput.Off and S_atseparator.Off and (S_Binitialized.On and S_separator_opened.On)].
Edge (event: A_separator_c_on) (guard: A_separator.Off) (assignments: A_separator := A_separator.On): guard: A_separator.Off -> A_separator.Off and S_atseparator.On and (S_Binitialized.On and S_separator_closed.On) [requirement: S_atseparator.On and (S_Binitialized.On and S_separator_closed.On)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_atseparator_u_off) (guard: S_atseparator.On) (assignments: S_atseparator := S_atseparator.Off)
    Edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On)
    Edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off)
    Edge: (event: S_separator_opened_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_opened := S_separator_opened.On)
    Edge: (event: S_separator_closed_u_off) (guard: S_separator_closed.On) (assignments: S_separator_closed := S_separator_closed.Off)
    Edge: (event: S_separator_closed_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_closed := S_separator_closed.On)
    Edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off)
    Edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On)
    Edge: (event: A_separator_c_off) (guard: A_separator.On -> A_separator.On and S_atinput.Off and (S_atseparator.Off and (S_Binitialized.On and S_separator_opened.On))) (assignments: A_separator := A_separator.Off)
    Edge: (event: A_separator_c_on) (guard: A_separator.Off -> A_separator.Off and S_atseparator.On and (S_Binitialized.On and S_separator_closed.On)) (assignments: A_separator := A_separator.On)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) -> A_separator.On and S_atinput.Off and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) [backward reach with edge: (event: S_atseparator_u_off) (guard: S_atseparator.On) (assignments: S_atseparator := S_atseparator.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_separator.On and S_atinput.Off and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) -> A_separator.On and S_atinput.Off and (S_Binitialized.Off and S_separator_closed.On) [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_separator.On and S_atinput.Off and (S_Binitialized.Off and S_separator_closed.On) -> A_separator.On and S_atinput.Off and (S_Binitialized.Off and S_separator_closed.On) or A_separator.On and S_atinput.Off and (S_Binitialized.Off and (S_separator_closed.Off and S_separator_opened.Off)) [backward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_separator.On and S_atinput.Off and (S_Binitialized.Off and S_separator_closed.On) or A_separator.On and S_atinput.Off and (S_Binitialized.Off and (S_separator_closed.Off and S_separator_opened.Off)) -> (A_separator.Off or S_atinput.Off) and ((A_separator.Off or S_atinput.On or (S_separator_closed.On or S_separator_opened.Off)) and A_separator.On) [backward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_separator.Off or S_atinput.Off) and ((A_separator.Off or S_atinput.On or (S_separator_closed.On or S_separator_opened.Off)) and A_separator.On) -> A_separator.On and (S_atinput.Off and S_separator_closed.On) or (A_separator.On and S_atinput.Off and (S_separator_closed.Off and S_separator_opened.Off) or A_separator.Off and S_atinput.Off and (S_atseparator.On and (S_Binitialized.On and S_separator_closed.On))) [backward reach with edge: (event: A_separator_c_on) (guard: A_separator.Off -> A_separator.Off and S_atseparator.On and (S_Binitialized.On and S_separator_closed.On)) (assignments: A_separator := A_separator.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_separator.On and (S_atinput.Off and S_separator_closed.On) or (A_separator.On and S_atinput.Off and (S_separator_closed.Off and S_separator_opened.Off) or A_separator.Off and S_atinput.Off and (S_atseparator.On and (S_Binitialized.On and S_separator_closed.On))) -> A_separator.On and S_separator_closed.On or (A_separator.On and (S_separator_closed.Off and S_separator_opened.Off) or A_separator.Off and S_atseparator.On and (S_Binitialized.On and S_separator_closed.On)) [backward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: A_separator.On and S_separator_closed.On or (A_separator.On and (S_separator_closed.Off and S_separator_opened.Off) or A_separator.Off and S_atseparator.On and (S_Binitialized.On and S_separator_closed.On)) -> (A_separator.Off or (S_separator_closed.On or S_separator_opened.Off)) and ((A_separator.On or (S_Binitialized.Off or S_separator_closed.On)) and (A_separator.On or S_Binitialized.On)) [backward reach with edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_separator.Off or (S_separator_closed.On or S_separator_opened.Off)) and ((A_separator.On or (S_Binitialized.Off or S_separator_closed.On)) and (A_separator.On or S_Binitialized.On)) -> A_separator.On or A_separator.Off and (S_Binitialized.On and S_separator_closed.On) [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_separator.On or A_separator.Off and (S_Binitialized.On and S_separator_closed.On) -> (A_separator.On or S_Binitialized.Off or (S_separator_closed.On or S_separator_opened.Off)) and (A_separator.On or S_Binitialized.On) [backward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_separator.On or S_Binitialized.Off or (S_separator_closed.On or S_separator_opened.Off)) and (A_separator.On or S_Binitialized.On) -> A_separator.On or (S_separator_closed.On or S_separator_opened.Off) [backward reach with edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: A_separator.On or (S_separator_closed.On or S_separator_opened.Off) -> true [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) -> A_separator.On and S_atinput.Off and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) [forward reach with edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_separator.On and S_atinput.Off and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) -> A_separator.On and S_atinput.Off and (S_Binitialized.Off and S_separator_opened.Off) [forward reach with edge: (event: S_separator_closed_u_off) (guard: S_separator_closed.On) (assignments: S_separator_closed := S_separator_closed.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_separator.On and S_atinput.Off and (S_Binitialized.Off and S_separator_opened.Off) -> A_separator.On and (S_atinput.Off and S_separator_opened.Off) [forward reach with edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_separator.On and (S_atinput.Off and S_separator_opened.Off) -> A_separator.On and S_separator_opened.Off [forward reach with edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_separator.On and S_separator_opened.Off -> (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and A_separator.On [forward reach with edge: (event: S_separator_opened_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_opened := S_separator_opened.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and A_separator.On -> A_separator.On and (S_separator_closed.On and S_separator_opened.Off) or (A_separator.On and S_separator_closed.Off or A_separator.Off and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On))) [forward reach with edge: (event: A_separator_c_off) (guard: A_separator.On -> A_separator.On and S_atinput.Off and (S_atseparator.Off and (S_Binitialized.On and S_separator_opened.On))) (assignments: A_separator := A_separator.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_separator.On and (S_separator_closed.On and S_separator_opened.Off) or (A_separator.On and S_separator_closed.Off or A_separator.Off and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On))) -> A_separator.On and (S_separator_closed.On and S_separator_opened.Off) or (A_separator.On and S_separator_closed.Off or A_separator.Off and S_atseparator.Off and (S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On))) [forward reach with edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: A_separator.On and (S_separator_closed.On and S_separator_opened.Off) or (A_separator.On and S_separator_closed.Off or A_separator.Off and S_atseparator.Off and (S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On))) -> A_separator.On and (S_separator_closed.On and S_separator_opened.Off) or (A_separator.On and S_separator_closed.Off or A_separator.Off and S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On)) [forward reach with edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_separator.On and (S_separator_closed.On and S_separator_opened.Off) or (A_separator.On and S_separator_closed.Off or A_separator.Off and S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On)) -> (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and ((A_separator.On or (S_Binitialized.Off or S_separator_closed.Off)) and (A_separator.On or S_Binitialized.On)) [forward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and ((A_separator.On or (S_Binitialized.Off or S_separator_closed.Off)) and (A_separator.On or S_Binitialized.On)) -> (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and ((A_separator.On or S_Binitialized.Off or (S_separator_closed.Off or S_separator_opened.Off)) and (A_separator.On or S_Binitialized.On)) [forward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and ((A_separator.On or S_Binitialized.Off or (S_separator_closed.Off or S_separator_opened.Off)) and (A_separator.On or S_Binitialized.On)) -> S_separator_closed.Off or S_separator_opened.Off [forward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: S_separator_closed.Off or S_separator_opened.Off [fixed point].
Controlled behavior: true -> S_separator_closed.Off or S_separator_opened.Off.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) -> A_separator.On and S_atinput.Off and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) [backward reach with edge: (event: S_atseparator_u_off) (guard: S_atseparator.On) (assignments: S_atseparator := S_atseparator.Off), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward controlled-behavior: A_separator.On and S_atinput.Off and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off)) -> A_separator.On and S_atinput.Off and (S_Binitialized.Off and S_separator_opened.Off) [backward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward controlled-behavior: A_separator.On and S_atinput.Off and (S_Binitialized.Off and S_separator_opened.Off) -> A_separator.On and (S_atinput.Off and S_separator_opened.Off) [backward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward controlled-behavior: A_separator.On and (S_atinput.Off and S_separator_opened.Off) -> A_separator.On and (S_atinput.Off and S_separator_opened.Off) or A_separator.Off and (S_atinput.Off and S_atseparator.On) and (S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off)) [backward reach with edge: (event: A_separator_c_on) (guard: A_separator.Off -> A_separator.Off and S_atseparator.On and (S_Binitialized.On and S_separator_closed.On)) (assignments: A_separator := A_separator.On), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward controlled-behavior: A_separator.On and (S_atinput.Off and S_separator_opened.Off) or A_separator.Off and (S_atinput.Off and S_atseparator.On) and (S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off)) -> A_separator.On and S_separator_opened.Off or A_separator.Off and S_atseparator.On and (S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off)) [backward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward reachability: iteration 2.
Backward controlled-behavior: A_separator.On and S_separator_opened.Off or A_separator.Off and S_atseparator.On and (S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off)) -> A_separator.On and S_separator_opened.Off or A_separator.Off and S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off) [backward reach with edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward controlled-behavior: A_separator.On and S_separator_opened.Off or A_separator.Off and S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off) -> A_separator.On and (S_separator_closed.On and S_separator_opened.Off) or (A_separator.On and S_separator_closed.Off or A_separator.Off and S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off)) [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward controlled-behavior: A_separator.On and (S_separator_closed.On and S_separator_opened.Off) or (A_separator.On and S_separator_closed.Off or A_separator.Off and S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off)) -> (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and ((A_separator.On or (S_Binitialized.Off or S_separator_opened.Off)) and (A_separator.On or S_Binitialized.On)) [backward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward controlled-behavior: (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and ((A_separator.On or (S_Binitialized.Off or S_separator_opened.Off)) and (A_separator.On or S_Binitialized.On)) -> (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and (A_separator.On or S_separator_opened.Off) [backward reach with edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_separator.Off or (S_separator_closed.Off or S_separator_opened.Off)) and (A_separator.On or S_separator_opened.Off) -> S_separator_closed.Off or S_separator_opened.Off [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: S_separator_closed.Off or S_separator_opened.Off]
Backward reachability: iteration 4.
Backward controlled-behavior: S_separator_closed.Off or S_separator_opened.Off [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: S_separator_closed.On and S_separator_opened.On [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_separator_c_off) (guard: A_separator.On -> A_separator.On and S_atinput.Off and (S_atseparator.Off and (S_Binitialized.On and S_separator_opened.On))) (assignments: A_separator := A_separator.Off): guard: A_separator.On and S_atinput.Off and (S_atseparator.Off and (S_Binitialized.On and S_separator_opened.On)) -> A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On)).
Edge (event: A_separator_c_on) (guard: A_separator.Off -> A_separator.Off and S_atseparator.On and (S_Binitialized.On and S_separator_closed.On)) (assignments: A_separator := A_separator.On): guard: A_separator.Off and S_atseparator.On and (S_Binitialized.On and S_separator_closed.On) -> A_separator.Off and S_atseparator.On and (S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off)).

Final synthesis result:
  State: (controlled-behavior: S_separator_closed.Off or S_separator_opened.Off)
    Edge: (event: S_atseparator_u_off) (guard: S_atseparator.On) (assignments: S_atseparator := S_atseparator.Off)
    Edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On)
    Edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off)
    Edge: (event: S_separator_opened_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_opened := S_separator_opened.On)
    Edge: (event: S_separator_closed_u_off) (guard: S_separator_closed.On) (assignments: S_separator_closed := S_separator_closed.Off)
    Edge: (event: S_separator_closed_u_on) (guard: S_separator_closed.Off and S_separator_opened.Off) (assignments: S_separator_closed := S_separator_closed.On)
    Edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off)
    Edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On)
    Edge: (event: A_separator_c_off) (guard: A_separator.On -> A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On))) (assignments: A_separator := A_separator.Off)
    Edge: (event: A_separator_c_on) (guard: A_separator.Off -> A_separator.Off and S_atseparator.On and (S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off))) (assignments: A_separator := A_separator.On)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)

Controlled system:                     exactly 48 states.

Initial (synthesis result):            S_separator_closed.Off or S_separator_opened.Off
Initial (uncontrolled system):         A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off))
Initial (controlled system):           A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.Off and (S_separator_closed.On and S_separator_opened.Off))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_separator_c_off: guard: A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On)) -> true [assume A_separator.On and (S_atinput.Off and S_atseparator.Off) and (S_Binitialized.On and (S_separator_closed.Off and S_separator_opened.On))].
  Event A_separator_c_on: guard: A_separator.Off and S_atseparator.On and (S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off)) -> true [assume A_separator.Off and S_atseparator.On and (S_Binitialized.On and (S_separator_closed.On and S_separator_opened.Off))].

Constructing output CIF specification.
Syntesizing supervisor 56.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name             Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_airslide       0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_conveyerB      1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   BTimer           2      2 * 2     3 * 2       4 * 2       75%
  4      location pointer  n/a   S_atend          3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_atin           4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_elevator_down  5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_elevator_up    6      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  Total                                           7      16        30          32          ~94%

Applying automatic variable ordering:
  Number of hyperedges: 21

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    5 (total)                 0.24 (avg/edge) [before]
    Total span:                    5 (total)                 0.24 (avg/edge) [iteration 1]
    Total span:                    5 (total)                 0.24 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    5 (total)                 0.24 (avg/edge) [before]
    Total span:                    3 (total)                 0.14 (avg/edge) [window 0..3]
    Total span:                    3 (total)                 0.14 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name             Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   BTimer           0      2 * 2     3 * 2       4 * 2       75%
  2      location pointer  n/a   A_airslide       1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_atend          2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_conveyerB      3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_atin           4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_elevator_down  5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_elevator_up    6      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  Total                                           7      16        30          32          ~94%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_elevator_up.Off
Initial   (aut/locs init predicate):     S_elevator_down.On
Initial   (aut/locs init predicate):     A_airslide.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     S_atin.Off
Initial   (aut/locs init predicate):     S_atend.Off
Initial   (aut/locs init predicate):     A_conveyerB.Off
Initial   (aut/locs init predicate):     BTimer.Off
Initial   (auts/locs init predicate):    BTimer.Off and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off))
Initial   (uncontrolled system):         BTimer.Off and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off))
Initial   (system, combined init/inv):   BTimer.Off and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_elevator_up.Off
Marked    (aut/locs marker predicate):   S_elevator_down.On
Marked    (aut/locs marker predicate):   A_airslide.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   S_atin.Off
Marked    (aut/locs marker predicate):   S_atend.Off
Marked    (aut/locs marker predicate):   A_conveyerB.Off
Marked    (aut/locs marker predicate):   not BTimer.Running
Marked    (auts/locs marker predicate):  not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off))
Marked    (uncontrolled system):         not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off))
Marked    (system, combined marked/inv): not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off))

State/event exclusion requirements:
  Event "A_airslide_c_on" needs:
    S_atin.Off
  Event "A_airslide_c_off" needs:
    S_elevator_down.On
  Event "BTimer_c_on" needs:
    S_atend.On
  Event "BTimer_c_reset" needs:
    A_conveyerB.Off or S_atin.On
  Event "A_conveyerB_c_on" needs:
    S_atin.On
  Event "A_conveyerB_c_off" needs:
    BTimer.Timeout

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: A_airslide_c_off) (guard: A_airslide.On) (assignments: A_airslide := A_airslide.Off)
    Edge: (event: A_airslide_c_on) (guard: A_airslide.Off) (assignments: A_airslide := A_airslide.On)
    Edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off)
    Edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On)
    Edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off)
    Edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On)
    Edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On) (assignments: A_conveyerB := A_conveyerB.Off)
    Edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off) (assignments: A_conveyerB := A_conveyerB.On)
    Edge: (event: BTimer_c_on) (guard: BTimer.Off) (assignments: BTimer := BTimer.Running)
    Edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Running) (assignments: BTimer := BTimer.Off)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Timeout) (assignments: BTimer := BTimer.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "BTimer" (group: 0, domain: 0+1, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_airslide_c_off) (guard: A_airslide.On) (assignments: A_airslide := A_airslide.Off): guard: A_airslide.On -> A_airslide.On and S_elevator_down.On [requirement: S_elevator_down.On].
Edge (event: A_airslide_c_on) (guard: A_airslide.Off) (assignments: A_airslide := A_airslide.On): guard: A_airslide.Off -> A_airslide.Off and S_atin.Off [requirement: S_atin.Off].
Edge (event: A_conveyerB_c_off) (guard: A_conveyerB.On) (assignments: A_conveyerB := A_conveyerB.Off): guard: A_conveyerB.On -> BTimer.Timeout and A_conveyerB.On [requirement: BTimer.Timeout].
Edge (event: A_conveyerB_c_on) (guard: A_conveyerB.Off) (assignments: A_conveyerB := A_conveyerB.On): guard: A_conveyerB.Off -> A_conveyerB.Off and S_atin.On [requirement: S_atin.On].
Edge (event: BTimer_c_on) (guard: BTimer.Off) (assignments: BTimer := BTimer.Running): guard: BTimer.Off -> BTimer.Off and S_atend.On [requirement: S_atend.On].
Edge (event: BTimer_c_reset) (guard: BTimer.Running) (assignments: BTimer := BTimer.Off): guard: BTimer.Running -> BTimer.Running and (not BTimer.Running or (A_conveyerB.Off or S_atin.On)) [requirement: A_conveyerB.Off or S_atin.On].
Edge (event: BTimer_c_reset) (guard: BTimer.Timeout) (assignments: BTimer := BTimer.Off): guard: BTimer.Timeout -> BTimer.Timeout and (A_conveyerB.On and S_atin.On) or BTimer.Timeout and A_conveyerB.Off [requirement: A_conveyerB.Off or S_atin.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: A_airslide_c_off) (guard: A_airslide.On -> A_airslide.On and S_elevator_down.On) (assignments: A_airslide := A_airslide.Off)
    Edge: (event: A_airslide_c_on) (guard: A_airslide.Off -> A_airslide.Off and S_atin.Off) (assignments: A_airslide := A_airslide.On)
    Edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off)
    Edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On)
    Edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off)
    Edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On)
    Edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> BTimer.Timeout and A_conveyerB.On) (assignments: A_conveyerB := A_conveyerB.Off)
    Edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off -> A_conveyerB.Off and S_atin.On) (assignments: A_conveyerB := A_conveyerB.On)
    Edge: (event: BTimer_c_on) (guard: BTimer.Off -> BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running)
    Edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Running -> BTimer.Running and (not BTimer.Running or (A_conveyerB.Off or S_atin.On))) (assignments: BTimer := BTimer.Off)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Timeout -> BTimer.Timeout and (A_conveyerB.On and S_atin.On) or BTimer.Timeout and A_conveyerB.Off) (assignments: BTimer := BTimer.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) -> not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_down.On)) [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_down.On)) -> not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_down.On)) or not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.Off and S_elevator_up.Off)) [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_down.On)) or not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.Off and S_elevator_up.Off)) -> <bdd 11n 3p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On -> A_airslide.On and S_elevator_down.On) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 3p> -> not BTimer.Running and A_airslide.On and (S_atend.Off and (A_conveyerB.Off and S_elevator_down.On)) or (not BTimer.Running and A_airslide.Off and (S_atend.Off and (A_conveyerB.Off and S_elevator_down.On)) or not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_elevator_down.Off and S_elevator_up.Off))) [backward reach with edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not BTimer.Running and A_airslide.On and (S_atend.Off and (A_conveyerB.Off and S_elevator_down.On)) or (not BTimer.Running and A_airslide.Off and (S_atend.Off and (A_conveyerB.Off and S_elevator_down.On)) or not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_elevator_down.Off and S_elevator_up.Off))) -> not BTimer.Running and A_airslide.On and (A_conveyerB.Off and S_elevator_down.On) or (not BTimer.Running and A_airslide.Off and (A_conveyerB.Off and S_elevator_down.On) or not BTimer.Running and A_airslide.Off and (A_conveyerB.Off and (S_elevator_down.Off and S_elevator_up.Off))) [backward reach with edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not BTimer.Running and A_airslide.On and (A_conveyerB.Off and S_elevator_down.On) or (not BTimer.Running and A_airslide.Off and (A_conveyerB.Off and S_elevator_down.On) or not BTimer.Running and A_airslide.Off and (A_conveyerB.Off and (S_elevator_down.Off and S_elevator_up.Off))) -> BTimer.Off and A_airslide.On and (A_conveyerB.Off and S_elevator_down.On) or (BTimer.Off and A_airslide.Off and (A_conveyerB.Off and S_elevator_down.On) or BTimer.Off and A_airslide.Off and (A_conveyerB.Off and (S_elevator_down.Off and S_elevator_up.Off))) or (BTimer.Timeout and (A_airslide.On and S_elevator_down.On) or (BTimer.Timeout and (A_airslide.Off and S_elevator_down.On) or BTimer.Timeout and A_airslide.Off and (S_elevator_down.Off and S_elevator_up.Off))) [backward reach with edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> BTimer.Timeout and A_conveyerB.On) (assignments: A_conveyerB := A_conveyerB.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: BTimer.Off and A_airslide.On and (A_conveyerB.Off and S_elevator_down.On) or (BTimer.Off and A_airslide.Off and (A_conveyerB.Off and S_elevator_down.On) or BTimer.Off and A_airslide.Off and (A_conveyerB.Off and (S_elevator_down.Off and S_elevator_up.Off))) or (BTimer.Timeout and (A_airslide.On and S_elevator_down.On) or (BTimer.Timeout and (A_airslide.Off and S_elevator_down.On) or BTimer.Timeout and A_airslide.Off and (S_elevator_down.Off and S_elevator_up.Off))) -> (not BTimer.Off or (A_airslide.Off or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.Off or (A_conveyerB.On or S_elevator_down.On)) and ((not BTimer.Off or (A_airslide.On or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.On or (A_conveyerB.On or (S_elevator_down.On or S_elevator_up.Off)))) and ((not BTimer.Timeout or (A_airslide.Off or S_elevator_down.On)) and (not BTimer.Timeout or A_airslide.On or (S_elevator_down.On or S_elevator_up.Off)) and ((not BTimer.Running or (A_airslide.Off or S_elevator_down.On)) and (not BTimer.Running or A_airslide.On or (S_elevator_down.On or S_elevator_up.Off)))) [backward reach with edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: (not BTimer.Off or (A_airslide.Off or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.Off or (A_conveyerB.On or S_elevator_down.On)) and ((not BTimer.Off or (A_airslide.On or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.On or (A_conveyerB.On or (S_elevator_down.On or S_elevator_up.Off)))) and ((not BTimer.Timeout or (A_airslide.Off or S_elevator_down.On)) and (not BTimer.Timeout or A_airslide.On or (S_elevator_down.On or S_elevator_up.Off)) and ((not BTimer.Running or (A_airslide.Off or S_elevator_down.On)) and (not BTimer.Running or A_airslide.On or (S_elevator_down.On or S_elevator_up.Off)))) -> BTimer.Off and A_airslide.On and (A_conveyerB.Off and S_elevator_down.On) or (BTimer.Off and (A_airslide.Off and A_conveyerB.Off) or BTimer.Timeout and (A_airslide.On and S_elevator_down.On)) or (BTimer.Timeout and A_airslide.Off or (BTimer.Running and (A_airslide.On and S_elevator_down.On) or BTimer.Running and A_airslide.Off)) [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: BTimer.Off and A_airslide.On and (A_conveyerB.Off and S_elevator_down.On) or (BTimer.Off and (A_airslide.Off and A_conveyerB.Off) or BTimer.Timeout and (A_airslide.On and S_elevator_down.On)) or (BTimer.Timeout and A_airslide.Off or (BTimer.Running and (A_airslide.On and S_elevator_down.On) or BTimer.Running and A_airslide.Off)) -> (not BTimer.Off or (A_airslide.Off or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.Off or (A_conveyerB.On or (S_elevator_down.On or S_elevator_up.Off))) and ((not BTimer.Off or (A_airslide.On or A_conveyerB.Off)) and ((not BTimer.Timeout or A_airslide.Off or (S_elevator_down.On or S_elevator_up.Off)) and (not BTimer.Running or A_airslide.Off or (S_elevator_down.On or S_elevator_up.Off)))) [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (not BTimer.Off or (A_airslide.Off or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.Off or (A_conveyerB.On or (S_elevator_down.On or S_elevator_up.Off))) and ((not BTimer.Off or (A_airslide.On or A_conveyerB.Off)) and ((not BTimer.Timeout or A_airslide.Off or (S_elevator_down.On or S_elevator_up.Off)) and (not BTimer.Running or A_airslide.Off or (S_elevator_down.On or S_elevator_up.Off)))) -> <bdd 11n 12p> [backward reach with edge: (event: BTimer_c_on) (guard: BTimer.Off -> BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 11n 12p> -> not BTimer.Off or (S_atend.On or A_conveyerB.Off) [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not BTimer.Off or (S_atend.On or A_conveyerB.Off) -> true [backward reach with edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: BTimer.Off and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: BTimer.Off and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) -> BTimer.Off and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_up.Off)) [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: BTimer.Off and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_up.Off)) -> BTimer.Off and S_atend.Off and (A_conveyerB.Off and (S_atin.Off and S_elevator_up.Off)) [forward reach with edge: (event: A_airslide_c_on) (guard: A_airslide.Off -> A_airslide.Off and S_atin.Off) (assignments: A_airslide := A_airslide.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: BTimer.Off and S_atend.Off and (A_conveyerB.Off and (S_atin.Off and S_elevator_up.Off)) -> BTimer.Off and S_atend.Off and (A_conveyerB.Off and S_elevator_up.Off) [forward reach with edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: BTimer.Off and S_atend.Off and (A_conveyerB.Off and S_elevator_up.Off) -> BTimer.Off and (A_conveyerB.Off and S_elevator_up.Off) [forward reach with edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: BTimer.Off and (A_conveyerB.Off and S_elevator_up.Off) -> BTimer.Off and A_conveyerB.On and (S_atin.On and S_elevator_up.Off) or BTimer.Off and (A_conveyerB.Off and S_elevator_up.Off) [forward reach with edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off -> A_conveyerB.Off and S_atin.On) (assignments: A_conveyerB := A_conveyerB.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: BTimer.Off and A_conveyerB.On and (S_atin.On and S_elevator_up.Off) or BTimer.Off and (A_conveyerB.Off and S_elevator_up.Off) -> BTimer.Off and A_conveyerB.On and (S_atin.On and S_elevator_up.Off) or BTimer.Off and (A_conveyerB.Off and S_elevator_up.Off) or (BTimer.Running and S_atend.On and (A_conveyerB.On and (S_atin.On and S_elevator_up.Off)) or BTimer.Running and S_atend.On and (A_conveyerB.Off and S_elevator_up.Off)) [forward reach with edge: (event: BTimer_c_on) (guard: BTimer.Off -> BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: BTimer.Off and A_conveyerB.On and (S_atin.On and S_elevator_up.Off) or BTimer.Off and (A_conveyerB.Off and S_elevator_up.Off) or (BTimer.Running and S_atend.On and (A_conveyerB.On and (S_atin.On and S_elevator_up.Off)) or BTimer.Running and S_atend.On and (A_conveyerB.Off and S_elevator_up.Off)) -> BTimer.Off and A_conveyerB.On and (S_atin.On and S_elevator_up.Off) or (BTimer.Off and (A_conveyerB.Off and S_elevator_up.Off) or BTimer.Timeout and S_atend.On and (A_conveyerB.On and (S_atin.On and S_elevator_up.Off))) or (BTimer.Timeout and S_atend.On and (A_conveyerB.Off and S_elevator_up.Off) or (BTimer.Running and S_atend.On and (A_conveyerB.On and (S_atin.On and S_elevator_up.Off)) or BTimer.Running and S_atend.On and (A_conveyerB.Off and S_elevator_up.Off))) [forward reach with edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: BTimer.Off and A_conveyerB.On and (S_atin.On and S_elevator_up.Off) or (BTimer.Off and (A_conveyerB.Off and S_elevator_up.Off) or BTimer.Timeout and S_atend.On and (A_conveyerB.On and (S_atin.On and S_elevator_up.Off))) or (BTimer.Timeout and S_atend.On and (A_conveyerB.Off and S_elevator_up.Off) or (BTimer.Running and S_atend.On and (A_conveyerB.On and (S_atin.On and S_elevator_up.Off)) or BTimer.Running and S_atend.On and (A_conveyerB.Off and S_elevator_up.Off))) -> <bdd 8n 12p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 8n 12p> -> (not BTimer.Off or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Timeout or S_atend.Off or (S_elevator_down.Off or S_elevator_up.Off)) and ((not BTimer.Timeout or S_atend.On) and ((not BTimer.Running or S_atend.Off or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or S_atend.On))) [forward reach with edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not BTimer.Off or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Timeout or S_atend.Off or (S_elevator_down.Off or S_elevator_up.Off)) and ((not BTimer.Timeout or S_atend.On) and ((not BTimer.Running or S_atend.Off or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or S_atend.On))) -> (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) [forward reach with edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) [fixed point].
Controlled behavior: true -> (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)).

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) -> not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_up.Off)) [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward controlled-behavior: not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_up.Off)) -> not BTimer.Running and (A_airslide.On and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_up.Off)) [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On -> A_airslide.On and S_elevator_down.On) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward controlled-behavior: not BTimer.Running and (A_airslide.On and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and (S_atin.Off and S_elevator_up.Off)) -> not BTimer.Running and (A_airslide.On and S_atend.Off) and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_airslide.Off and (S_atend.Off and (A_conveyerB.Off and S_elevator_up.Off)) [backward reach with edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward controlled-behavior: not BTimer.Running and (A_airslide.On and S_atend.Off) and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_airslide.Off and (S_atend.Off and (A_conveyerB.Off and S_elevator_up.Off)) -> not BTimer.Running and A_airslide.On and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_airslide.Off and (A_conveyerB.Off and S_elevator_up.Off) [backward reach with edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward controlled-behavior: not BTimer.Running and A_airslide.On and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_airslide.Off and (A_conveyerB.Off and S_elevator_up.Off) -> BTimer.Off and A_airslide.On and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Off and A_airslide.Off and (A_conveyerB.Off and S_elevator_up.Off) or (BTimer.Timeout and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_airslide.Off and S_elevator_up.Off)) [backward reach with edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> BTimer.Timeout and A_conveyerB.On) (assignments: A_conveyerB := A_conveyerB.Off), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward controlled-behavior: BTimer.Off and A_airslide.On and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Off and A_airslide.Off and (A_conveyerB.Off and S_elevator_up.Off) or (BTimer.Timeout and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_airslide.Off and S_elevator_up.Off)) -> BTimer.Off and A_airslide.On and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or (BTimer.Off and A_airslide.Off and (A_conveyerB.Off and S_elevator_up.Off) or BTimer.Timeout and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off)) or (BTimer.Timeout and (A_airslide.Off and S_elevator_up.Off) or (BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Running and (A_airslide.Off and S_elevator_up.Off))) [backward reach with edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward reachability: iteration 2.
Backward controlled-behavior: BTimer.Off and A_airslide.On and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or (BTimer.Off and A_airslide.Off and (A_conveyerB.Off and S_elevator_up.Off) or BTimer.Timeout and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off)) or (BTimer.Timeout and (A_airslide.Off and S_elevator_up.Off) or (BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Running and (A_airslide.Off and S_elevator_up.Off))) -> BTimer.Off and A_airslide.On and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Off and A_airslide.Off and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or (BTimer.Off and A_airslide.Off and (A_conveyerB.Off and S_elevator_down.Off) or BTimer.Timeout and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off)) or (BTimer.Timeout and A_airslide.Off and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_airslide.Off and S_elevator_down.Off) or (BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or (BTimer.Running and A_airslide.Off and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Running and (A_airslide.Off and S_elevator_down.Off)))) [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward controlled-behavior: BTimer.Off and A_airslide.On and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Off and A_airslide.Off and (A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off)) or (BTimer.Off and A_airslide.Off and (A_conveyerB.Off and S_elevator_down.Off) or BTimer.Timeout and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off)) or (BTimer.Timeout and A_airslide.Off and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_airslide.Off and S_elevator_down.Off) or (BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or (BTimer.Running and A_airslide.Off and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Running and (A_airslide.Off and S_elevator_down.Off)))) -> (not BTimer.Off or (A_airslide.Off or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.Off or (A_conveyerB.On or S_elevator_up.Off)) and ((not BTimer.Off or (A_airslide.On or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.On or (A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off)))) and ((not BTimer.Timeout or (A_airslide.Off or S_elevator_up.Off)) and (not BTimer.Timeout or A_airslide.On or (S_elevator_down.Off or S_elevator_up.Off)) and ((not BTimer.Running or (A_airslide.Off or S_elevator_up.Off)) and (not BTimer.Running or A_airslide.On or (S_elevator_down.Off or S_elevator_up.Off)))) [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward controlled-behavior: (not BTimer.Off or (A_airslide.Off or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.Off or (A_conveyerB.On or S_elevator_up.Off)) and ((not BTimer.Off or (A_airslide.On or A_conveyerB.Off)) and (not BTimer.Off or A_airslide.On or (A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off)))) and ((not BTimer.Timeout or (A_airslide.Off or S_elevator_up.Off)) and (not BTimer.Timeout or A_airslide.On or (S_elevator_down.Off or S_elevator_up.Off)) and ((not BTimer.Running or (A_airslide.Off or S_elevator_up.Off)) and (not BTimer.Running or A_airslide.On or (S_elevator_down.Off or S_elevator_up.Off)))) -> <bdd 11n 12p> [backward reach with edge: (event: BTimer_c_on) (guard: BTimer.Off -> BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 11n 12p> -> (not BTimer.Off or S_atend.Off or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Off or (S_atend.On or A_conveyerB.Off)) and ((not BTimer.Off or S_atend.On or (A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off))) and ((not BTimer.Timeout or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)))) [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward controlled-behavior: (not BTimer.Off or S_atend.Off or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Off or (S_atend.On or A_conveyerB.Off)) and ((not BTimer.Off or S_atend.On or (A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off))) and ((not BTimer.Timeout or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)))) -> (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) [backward reach with edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On), restricted to current/previous controlled-behavior predicate: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))]
Backward reachability: iteration 4.
Backward controlled-behavior: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: not BTimer.Running and (S_elevator_down.On and S_elevator_up.On) or BTimer.Running and (S_elevator_down.On and S_elevator_up.On) [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_airslide_c_off) (guard: A_airslide.On -> A_airslide.On and S_elevator_down.On) (assignments: A_airslide := A_airslide.Off): guard: A_airslide.On and S_elevator_down.On -> not BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off).
Edge (event: A_airslide_c_on) (guard: A_airslide.Off -> A_airslide.Off and S_atin.Off) (assignments: A_airslide := A_airslide.On): guard: A_airslide.Off and S_atin.Off -> not BTimer.Running and A_airslide.Off and (S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_airslide.Off and (S_atin.Off and S_elevator_down.Off) or (BTimer.Running and A_airslide.Off and (S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Running and A_airslide.Off and (S_atin.Off and S_elevator_down.Off)).
Edge (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> BTimer.Timeout and A_conveyerB.On) (assignments: A_conveyerB := A_conveyerB.Off): guard: BTimer.Timeout and A_conveyerB.On -> BTimer.Timeout and A_conveyerB.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_conveyerB.On and S_elevator_down.Off).
Edge (event: A_conveyerB_c_on) (guard: A_conveyerB.Off -> A_conveyerB.Off and S_atin.On) (assignments: A_conveyerB := A_conveyerB.On): guard: A_conveyerB.Off and S_atin.On -> not BTimer.Running and A_conveyerB.Off and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_conveyerB.Off and (S_atin.On and S_elevator_down.Off) or (BTimer.Running and A_conveyerB.Off and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Running and A_conveyerB.Off and (S_atin.On and S_elevator_down.Off)).
Edge (event: BTimer_c_on) (guard: BTimer.Off -> BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running): guard: BTimer.Off and S_atend.On -> BTimer.Off and S_atend.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Off and (S_atend.On and S_elevator_down.Off).
Edge (event: BTimer_c_reset) (guard: BTimer.Running -> BTimer.Running and (not BTimer.Running or (A_conveyerB.Off or S_atin.On))) (assignments: BTimer := BTimer.Off): guard: BTimer.Running and (not BTimer.Running or (A_conveyerB.Off or S_atin.On)) -> BTimer.Running and (not BTimer.Running or A_conveyerB.Off or (S_atin.Off or (S_elevator_down.Off or S_elevator_up.Off))) and ((not BTimer.Running or (A_conveyerB.Off or S_atin.On)) and (not BTimer.Running or A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off))).
Edge (event: BTimer_c_reset) (guard: BTimer.Timeout -> BTimer.Timeout and (A_conveyerB.On and S_atin.On) or BTimer.Timeout and A_conveyerB.Off) (assignments: BTimer := BTimer.Off): guard: BTimer.Timeout and (A_conveyerB.On and S_atin.On) or BTimer.Timeout and A_conveyerB.Off -> BTimer.Timeout and A_conveyerB.On and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Timeout and A_conveyerB.On and (S_atin.On and S_elevator_down.Off) or (BTimer.Timeout and A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_conveyerB.Off and S_elevator_down.Off)).

Final synthesis result:
  State: (controlled-behavior: (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)))
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_down.Off and S_elevator_up.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: A_airslide_c_off) (guard: A_airslide.On -> not BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off)) (assignments: A_airslide := A_airslide.Off)
    Edge: (event: A_airslide_c_on) (guard: A_airslide.Off -> not BTimer.Running and A_airslide.Off and (S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_airslide.Off and (S_atin.Off and S_elevator_down.Off) or (BTimer.Running and A_airslide.Off and (S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Running and A_airslide.Off and (S_atin.Off and S_elevator_down.Off))) (assignments: A_airslide := A_airslide.On)
    Edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off)
    Edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On)
    Edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off)
    Edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On)
    Edge: (event: A_conveyerB_c_off) (guard: A_conveyerB.On -> BTimer.Timeout and A_conveyerB.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_conveyerB.On and S_elevator_down.Off)) (assignments: A_conveyerB := A_conveyerB.Off)
    Edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off -> not BTimer.Running and A_conveyerB.Off and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_conveyerB.Off and (S_atin.On and S_elevator_down.Off) or (BTimer.Running and A_conveyerB.Off and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Running and A_conveyerB.Off and (S_atin.On and S_elevator_down.Off))) (assignments: A_conveyerB := A_conveyerB.On)
    Edge: (event: BTimer_c_on) (guard: BTimer.Off -> BTimer.Off and S_atend.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Off and (S_atend.On and S_elevator_down.Off)) (assignments: BTimer := BTimer.Running)
    Edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Running -> BTimer.Running and (not BTimer.Running or A_conveyerB.Off or (S_atin.Off or (S_elevator_down.Off or S_elevator_up.Off))) and ((not BTimer.Running or (A_conveyerB.Off or S_atin.On)) and (not BTimer.Running or A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off)))) (assignments: BTimer := BTimer.Off)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Timeout -> BTimer.Timeout and A_conveyerB.On and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Timeout and A_conveyerB.On and (S_atin.On and S_elevator_down.Off) or (BTimer.Timeout and A_conveyerB.Off and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_conveyerB.Off and S_elevator_down.Off))) (assignments: BTimer := BTimer.Off)

Controlled system:                     exactly 144 states.

Initial (synthesis result):            (BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or (S_elevator_down.Off or S_elevator_up.Off))
Initial (uncontrolled system):         BTimer.Off and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off))
Initial (controlled system):           BTimer.Off and (A_airslide.Off and S_atend.Off) and (A_conveyerB.Off and S_atin.Off and (S_elevator_down.On and S_elevator_up.Off))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_airslide_c_off: guard: not BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) -> true [assume not BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Running and A_airslide.On and (S_elevator_down.On and S_elevator_up.Off)].
  Event A_airslide_c_on: guard: not BTimer.Running and A_airslide.Off and (S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_airslide.Off and (S_atin.Off and S_elevator_down.Off) or (BTimer.Running and A_airslide.Off and (S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Running and A_airslide.Off and (S_atin.Off and S_elevator_down.Off)) -> true [assume not BTimer.Running and A_airslide.Off and (S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_airslide.Off and (S_atin.Off and S_elevator_down.Off) or (BTimer.Running and A_airslide.Off and (S_atin.Off and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Running and A_airslide.Off and (S_atin.Off and S_elevator_down.Off))].
  Event A_conveyerB_c_off: guard: BTimer.Timeout and A_conveyerB.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_conveyerB.On and S_elevator_down.Off) -> true [assume BTimer.Timeout and A_conveyerB.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Timeout and (A_conveyerB.On and S_elevator_down.Off)].
  Event A_conveyerB_c_on: guard: not BTimer.Running and A_conveyerB.Off and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_conveyerB.Off and (S_atin.On and S_elevator_down.Off) or (BTimer.Running and A_conveyerB.Off and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Running and A_conveyerB.Off and (S_atin.On and S_elevator_down.Off)) -> true [assume not BTimer.Running and A_conveyerB.Off and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or not BTimer.Running and A_conveyerB.Off and (S_atin.On and S_elevator_down.Off) or (BTimer.Running and A_conveyerB.Off and (S_atin.On and (S_elevator_down.On and S_elevator_up.Off)) or BTimer.Running and A_conveyerB.Off and (S_atin.On and S_elevator_down.Off))].
  Event BTimer_c_on: guard: BTimer.Off and S_atend.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Off and (S_atend.On and S_elevator_down.Off) -> true [assume BTimer.Off and S_atend.On and (S_elevator_down.On and S_elevator_up.Off) or BTimer.Off and (S_atend.On and S_elevator_down.Off)].
  Event BTimer_c_reset: guard: not BTimer.Off and ((not BTimer.Timeout or A_conveyerB.Off or (S_atin.Off or (S_elevator_down.Off or S_elevator_up.Off))) and (not BTimer.Timeout or (A_conveyerB.Off or S_atin.On))) and ((not BTimer.Timeout or A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or A_conveyerB.Off or (S_atin.Off or (S_elevator_down.Off or S_elevator_up.Off))) and ((not BTimer.Running or (A_conveyerB.Off or S_atin.On)) and (not BTimer.Running or A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off)))) -> true [assume not BTimer.Off and ((not BTimer.Timeout or A_conveyerB.Off or (S_atin.Off or (S_elevator_down.Off or S_elevator_up.Off))) and (not BTimer.Timeout or (A_conveyerB.Off or S_atin.On))) and ((not BTimer.Timeout or A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off)) and (not BTimer.Running or A_conveyerB.Off or (S_atin.Off or (S_elevator_down.Off or S_elevator_up.Off))) and ((not BTimer.Running or (A_conveyerB.Off or S_atin.On)) and (not BTimer.Running or A_conveyerB.On or (S_elevator_down.Off or S_elevator_up.Off))))].

Constructing output CIF specification.
Syntesizing supervisor 63.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name        Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ----------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_conveyer  0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_eject     1      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ----------  -----  --------  ----------  ----------  -----------
  Total                                      2      4         8           8           100%

Applying automatic variable ordering:
  Number of hyperedges: 5

  Applying FORCE algorithm:
    Maximum number of iterations: 10

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 2

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     A_eject.Off
Initial   (aut/locs init predicate):     A_conveyer.Off
Initial   (auts/locs init predicate):    A_conveyer.Off and A_eject.Off
Initial   (uncontrolled system):         A_conveyer.Off and A_eject.Off
Initial   (system, combined init/inv):   A_conveyer.Off and A_eject.Off

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   A_eject.Off
Marked    (aut/locs marker predicate):   A_conveyer.Off
Marked    (auts/locs marker predicate):  A_conveyer.Off and A_eject.Off
Marked    (uncontrolled system):         A_conveyer.Off and A_eject.Off
Marked    (system, combined marked/inv): A_conveyer.Off and A_eject.Off

State/event exclusion requirements:
  Event "A_eject_c_off" needs:
    A_conveyer.Off

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On)
    Edge: (event: A_conveyer_c_off) (guard: A_conveyer.On) (assignments: A_conveyer := A_conveyer.Off)
    Edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off) (assignments: A_conveyer := A_conveyer.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off): guard: A_eject.On -> A_conveyer.Off and A_eject.On [requirement: A_conveyer.Off].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: A_eject_c_off) (guard: A_eject.On -> A_conveyer.Off and A_eject.On) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On)
    Edge: (event: A_conveyer_c_off) (guard: A_conveyer.On) (assignments: A_conveyer := A_conveyer.Off)
    Edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off) (assignments: A_conveyer := A_conveyer.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_conveyer.Off and A_eject.Off [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_conveyer.Off and A_eject.Off -> A_conveyer.Off [backward reach with edge: (event: A_eject_c_off) (guard: A_eject.On -> A_conveyer.Off and A_eject.On) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_conveyer.Off -> true [backward reach with edge: (event: A_conveyer_c_off) (guard: A_conveyer.On) (assignments: A_conveyer := A_conveyer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_conveyer.Off and A_eject.Off [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_conveyer.Off and A_eject.Off -> A_conveyer.Off [forward reach with edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_conveyer.Off -> true [forward reach with edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off) (assignments: A_conveyer := A_conveyer.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: A_eject_c_off) (guard: A_eject.On -> A_conveyer.Off and A_eject.On) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On)
    Edge: (event: A_conveyer_c_off) (guard: A_conveyer.On) (assignments: A_conveyer := A_conveyer.Off)
    Edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off) (assignments: A_conveyer := A_conveyer.On)

Controlled system:                     exactly 4 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_conveyer.Off and A_eject.Off
Initial (controlled system):           A_conveyer.Off and A_eject.Off
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_eject_c_off: guard: A_conveyer.Off and A_eject.On -> true [assume A_conveyer.Off and A_eject.On].
  Event A_eject_c_on: guard: A_eject.Off -> true [assume A_eject.Off].
  Event A_conveyer_c_off: guard: A_conveyer.On -> true [assume A_conveyer.On].
  Event A_conveyer_c_on: guard: A_conveyer.Off -> true [assume A_conveyer.Off].

Constructing output CIF specification.
Syntesizing supervisor 64.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name            Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_clamp         0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_drill         1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_drilldown     2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_drillup       3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   A_eject         4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   A_tester        5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   A_turntable     6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   ClampDrill      7      4 * 2     9 * 2       16 * 2      ~56%
  9      location pointer  n/a   PTimer          8      2 * 2     3 * 2       4 * 2       75%
  10     location pointer  n/a   S_drill_down    9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_drill_up      10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   S_Pinitialized  11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   S_turntable     12     1 * 2     2 * 2       2 * 2       100%
  14     location pointer  n/a   Tester          13     2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  Total                                          14     38        74          92          ~80%

Applying automatic variable ordering:
  Number of hyperedges: 52

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   69 (total)                 1.33 (avg/edge) [before]
    Total span:                   29 (total)                 0.56 (avg/edge) [iteration 1]
    Total span:                   22 (total)                 0.42 (avg/edge) [iteration 2]
    Total span:                   22 (total)                 0.42 (avg/edge) [iteration 3]
    Total span:                   22 (total)                 0.42 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   22 (total)                 0.42 (avg/edge) [before]
    Total span:                   20 (total)                 0.38 (avg/edge) [window 1..4]
    Total span:                   20 (total)                 0.38 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name            Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_eject         0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_drill         1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_clamp         2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   ClampDrill      3      4 * 2     9 * 2       16 * 2      ~56%
  5      location pointer  n/a   A_drillup       4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   A_drilldown     5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   A_turntable     6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   Tester          7      2 * 2     3 * 2       4 * 2       75%
  9      location pointer  n/a   A_tester        8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   PTimer          9      2 * 2     3 * 2       4 * 2       75%
  11     location pointer  n/a   S_drill_down    10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   S_drill_up      11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   S_Pinitialized  12     1 * 2     2 * 2       2 * 2       100%
  14     location pointer  n/a   S_turntable     13     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  Total                                          14     38        74          92          ~80%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_drill_up.On
Initial   (aut/locs init predicate):     S_drill_down.Off
Initial   (aut/locs init predicate):     S_turntable.On
Initial   (aut/locs init predicate):     S_Pinitialized.Off
Initial   (aut/locs init predicate):     A_drill.Off
Initial   (aut/locs init predicate):     A_turntable.Off
Initial   (aut/locs init predicate):     A_drilldown.Off
Initial   (aut/locs init predicate):     A_drillup.On
Initial   (aut/locs init predicate):     A_clamp.Off
Initial   (aut/locs init predicate):     A_tester.Off
Initial   (aut/locs init predicate):     A_eject.Off
Initial   (aut/locs init predicate):     PTimer.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     Tester.One
Initial   (aut/locs init predicate):     ClampDrill.one
Initial   (auts/locs init predicate):    <bdd 19n 1p>
Initial   (uncontrolled system):         <bdd 19n 1p>
Initial   (system, combined init/inv):   <bdd 19n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_drill_up.On
Marked    (aut/locs marker predicate):   S_drill_down.Off
Marked    (aut/locs marker predicate):   S_turntable.On
Marked    (aut/locs marker predicate):   S_Pinitialized.Off
Marked    (aut/locs marker predicate):   A_drill.Off
Marked    (aut/locs marker predicate):   A_turntable.Off
Marked    (aut/locs marker predicate):   A_drilldown.Off
Marked    (aut/locs marker predicate):   A_drillup.On
Marked    (aut/locs marker predicate):   A_clamp.Off
Marked    (aut/locs marker predicate):   A_tester.Off
Marked    (aut/locs marker predicate):   A_eject.Off
Marked    (aut/locs marker predicate):   PTimer.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   Tester.One
Marked    (aut/locs marker predicate):   ClampDrill.one
Marked    (auts/locs marker predicate):  <bdd 19n 1p>
Marked    (uncontrolled system):         <bdd 19n 1p>
Marked    (system, combined marked/inv): <bdd 19n 1p>

State/event exclusion requirements:
  Event "A_drill_c_on" needs:
    S_Pinitialized.On
    S_drill_up.On
    ClampDrill.two
  Event "A_drill_c_off" needs:
    S_Pinitialized.On
    S_drill_up.On
    ClampDrill.seven
  Event "A_turntable_c_on" needs:
    S_Pinitialized.On
    S_turntable.On
    PTimer.Timeout
    S_drill_up.On
    A_eject.Off
    A_tester.Off
    not Tester.Two
    ClampDrill.one or ClampDrill.nine
  Event "A_turntable_c_off" needs:
    S_Pinitialized.On
    S_turntable.Off
  Event "A_drilldown_c_on" needs:
    S_Pinitialized.On
    ClampDrill.four
  Event "A_drillup_c_off" needs:
    S_Pinitialized.On
    ClampDrill.three
  Event "A_clamp_c_on" needs:
    S_Pinitialized.On
    S_turntable.On
    A_turntable.Off
    PTimer.Timeout
    ClampDrill.one
  Event "A_clamp_c_off" needs:
    S_Pinitialized.On
    S_drill_up.On
    A_drill.Off
    ClampDrill.eight
  Event "A_eject_c_on" needs:
    S_Pinitialized.On
    S_turntable.On
    A_turntable.Off
    PTimer.Timeout
  Event "A_eject_c_off" needs:
    S_Pinitialized.On
  Event "A_tester_c_on" needs:
    A_turntable.Off
    Tester.One
  Event "A_tester_c_off" needs:
    Tester.Two
  Event "A_drilldown_c_off" needs:
    ClampDrill.five
  Event "A_drillup_c_on" needs:
    ClampDrill.six

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_drill_c_off) (guard: A_drill.On and ClampDrill.seven) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight)
    Edge: (event: A_drill_c_off) (guard: (A_drill.Off or not ClampDrill.seven) and A_drill.On) (assignments: A_drill := A_drill.Off)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off and ClampDrill.two) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off and (A_drill.On or not ClampDrill.two)) (assignments: A_drill := A_drill.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.One)) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.One)) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.One) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.One) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.One))) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Three)) (assignments: A_turntable := A_turntable.On, Tester := Tester.One)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Three)) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.Three) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Three) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Three))) (assignments: A_turntable := A_turntable.On, Tester := Tester.One)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Two)) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Two)) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.Two) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Two) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Two))) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_drilldown_c_off) (guard: ClampDrill.five and A_drilldown.On) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six)
    Edge: (event: A_drilldown_c_off) (guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.On or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drilldown.On)) (assignments: A_drilldown := A_drilldown.Off)
    Edge: (event: A_drilldown_c_on) (guard: ClampDrill.four and A_drilldown.Off) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five)
    Edge: (event: A_drilldown_c_on) (guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.Off or ClampDrill.five and A_drilldown.Off or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.Off or ((ClampDrill.two or ClampDrill.six) and A_drilldown.Off or ClampDrill.eight and A_drilldown.Off))) (assignments: A_drilldown := A_drilldown.On)
    Edge: (event: A_drillup_c_off) (guard: ClampDrill.three and A_drillup.On) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four)
    Edge: (event: A_drillup_c_off) (guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.On or ClampDrill.five and A_drillup.On or (ClampDrill.seven and A_drillup.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drillup.On)) (assignments: A_drillup := A_drillup.Off)
    Edge: (event: A_drillup_c_on) (guard: ClampDrill.six and A_drillup.Off) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven)
    Edge: (event: A_drillup_c_on) (guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.Off or ClampDrill.five and A_drillup.Off or ((ClampDrill.three or ClampDrill.seven) and A_drillup.Off or (ClampDrill.two and A_drillup.Off or (ClampDrill.four or ClampDrill.eight) and A_drillup.Off))) (assignments: A_drillup := A_drillup.On)
    Edge: (event: A_clamp_c_off) (guard: A_clamp.On and ClampDrill.eight) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine)
    Edge: (event: A_clamp_c_off) (guard: (A_clamp.Off or not ClampDrill.eight) and A_clamp.On) (assignments: A_clamp := A_clamp.Off)
    Edge: (event: A_clamp_c_on) (guard: A_clamp.Off and ClampDrill.one) (assignments: A_clamp := A_clamp.On, ClampDrill := ClampDrill.two)
    Edge: (event: A_clamp_c_on) (guard: A_clamp.Off and (A_clamp.On or not ClampDrill.one)) (assignments: A_clamp := A_clamp.On)
    Edge: (event: A_tester_c_off) (guard: Tester.Two and A_tester.On) (assignments: A_tester := A_tester.Off, Tester := Tester.Three)
    Edge: (event: A_tester_c_off) (guard: not Tester.Two and A_tester.On) (assignments: A_tester := A_tester.Off)
    Edge: (event: A_tester_c_on) (guard: Tester.One and A_tester.Off) (assignments: A_tester := A_tester.On, Tester := Tester.Two)
    Edge: (event: A_tester_c_on) (guard: Tester.Three and A_tester.Off or Tester.Two and A_tester.Off) (assignments: A_tester := A_tester.On)
    Edge: (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On)
    Edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "ClampDrill" (group: 3, domain: 6+7, BDD variables: 4, CIF/BDD values: 9/16)].
Controlled behavior: true -> true [range: true, variable: location pointer for automaton "Tester" (group: 7, domain: 14+15, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> <bdd 8n 16p> [range: true, variable: location pointer for automaton "PTimer" (group: 9, domain: 18+19, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: <bdd 8n 16p>.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_drill_c_off) (guard: A_drill.On and ClampDrill.seven) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight): guard: A_drill.On and ClampDrill.seven -> A_drill.On and ClampDrill.seven and (S_drill_up.On and S_Pinitialized.On) [requirement: ClampDrill.seven and (S_drill_up.On and S_Pinitialized.On)].
Edge (event: A_drill_c_off) (guard: (A_drill.Off or not ClampDrill.seven) and A_drill.On) (assignments: A_drill := A_drill.Off): guard: (A_drill.Off or not ClampDrill.seven) and A_drill.On -> false [requirement: ClampDrill.seven and (S_drill_up.On and S_Pinitialized.On)].
Edge (event: A_drill_c_on) (guard: A_drill.Off and ClampDrill.two) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three): guard: A_drill.Off and ClampDrill.two -> A_drill.Off and ClampDrill.two and (S_drill_up.On and S_Pinitialized.On) [requirement: ClampDrill.two and (S_drill_up.On and S_Pinitialized.On)].
Edge (event: A_drill_c_on) (guard: A_drill.Off and (A_drill.On or not ClampDrill.two)) (assignments: A_drill := A_drill.On): guard: A_drill.Off and (A_drill.On or not ClampDrill.two) -> false [requirement: ClampDrill.two and (S_drill_up.On and S_Pinitialized.On)].
Edge (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off): guard: A_turntable.On -> A_turntable.On and (S_Pinitialized.On and S_turntable.Off) [requirement: S_Pinitialized.On and S_turntable.Off].
Edge (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.One)) (assignments: A_turntable := A_turntable.On): guard: ClampDrill.one and (A_turntable.Off and Tester.One) -> <bdd 14n 1p> [requirement: <bdd 11n 1p>].
Edge (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.One)) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one): guard: ClampDrill.nine and (A_turntable.Off and Tester.One) -> <bdd 14n 1p> [requirement: <bdd 11n 1p>].
Edge (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.One) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.One) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.One))) (assignments: A_turntable := A_turntable.On): guard: ClampDrill.five and (A_turntable.Off and Tester.One) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.One) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.One)) -> false [requirement: <bdd 11n 1p>].
Edge (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Three)) (assignments: A_turntable := A_turntable.On, Tester := Tester.One): guard: ClampDrill.one and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p> [requirement: <bdd 11n 1p>].
Edge (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Three)) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one): guard: ClampDrill.nine and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p> [requirement: <bdd 11n 1p>].
Edge (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.Three) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Three) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Three))) (assignments: A_turntable := A_turntable.On, Tester := Tester.One): guard: ClampDrill.five and (A_turntable.Off and Tester.Three) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Three) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Three)) -> false [requirement: <bdd 11n 1p>].
Edge (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Two)) (assignments: A_turntable := A_turntable.On): guard: ClampDrill.one and (A_turntable.Off and Tester.Two) -> false [requirement: <bdd 11n 1p>].
Edge (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Two)) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one): guard: ClampDrill.nine and (A_turntable.Off and Tester.Two) -> false [requirement: <bdd 11n 1p>].
Edge (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.Two) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Two) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Two))) (assignments: A_turntable := A_turntable.On): guard: ClampDrill.five and (A_turntable.Off and Tester.Two) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Two) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Two)) -> false [requirement: <bdd 11n 1p>].
Edge (event: A_drilldown_c_off) (guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.On or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drilldown.On)) (assignments: A_drilldown := A_drilldown.Off): guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.On or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drilldown.On) -> false [requirement: ClampDrill.five].
Edge (event: A_drilldown_c_on) (guard: ClampDrill.four and A_drilldown.Off) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five): guard: ClampDrill.four and A_drilldown.Off -> ClampDrill.four and (A_drilldown.Off and S_Pinitialized.On) [requirement: ClampDrill.four and S_Pinitialized.On].
Edge (event: A_drilldown_c_on) (guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.Off or ClampDrill.five and A_drilldown.Off or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.Off or ((ClampDrill.two or ClampDrill.six) and A_drilldown.Off or ClampDrill.eight and A_drilldown.Off))) (assignments: A_drilldown := A_drilldown.On): guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.Off or ClampDrill.five and A_drilldown.Off or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.Off or ((ClampDrill.two or ClampDrill.six) and A_drilldown.Off or ClampDrill.eight and A_drilldown.Off)) -> false [requirement: ClampDrill.four and S_Pinitialized.On].
Edge (event: A_drillup_c_off) (guard: ClampDrill.three and A_drillup.On) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four): guard: ClampDrill.three and A_drillup.On -> ClampDrill.three and (A_drillup.On and S_Pinitialized.On) [requirement: ClampDrill.three and S_Pinitialized.On].
Edge (event: A_drillup_c_off) (guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.On or ClampDrill.five and A_drillup.On or (ClampDrill.seven and A_drillup.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drillup.On)) (assignments: A_drillup := A_drillup.Off): guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.On or ClampDrill.five and A_drillup.On or (ClampDrill.seven and A_drillup.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drillup.On) -> false [requirement: ClampDrill.three and S_Pinitialized.On].
Edge (event: A_drillup_c_on) (guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.Off or ClampDrill.five and A_drillup.Off or ((ClampDrill.three or ClampDrill.seven) and A_drillup.Off or (ClampDrill.two and A_drillup.Off or (ClampDrill.four or ClampDrill.eight) and A_drillup.Off))) (assignments: A_drillup := A_drillup.On): guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.Off or ClampDrill.five and A_drillup.Off or ((ClampDrill.three or ClampDrill.seven) and A_drillup.Off or (ClampDrill.two and A_drillup.Off or (ClampDrill.four or ClampDrill.eight) and A_drillup.Off)) -> false [requirement: ClampDrill.six].
Edge (event: A_clamp_c_off) (guard: A_clamp.On and ClampDrill.eight) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine): guard: A_clamp.On and ClampDrill.eight -> A_drill.Off and A_clamp.On and (ClampDrill.eight and (S_drill_up.On and S_Pinitialized.On)) [requirement: A_drill.Off and ClampDrill.eight and (S_drill_up.On and S_Pinitialized.On)].
Edge (event: A_clamp_c_off) (guard: (A_clamp.Off or not ClampDrill.eight) and A_clamp.On) (assignments: A_clamp := A_clamp.Off): guard: (A_clamp.Off or not ClampDrill.eight) and A_clamp.On -> false [requirement: A_drill.Off and ClampDrill.eight and (S_drill_up.On and S_Pinitialized.On)].
Edge (event: A_clamp_c_on) (guard: A_clamp.Off and ClampDrill.one) (assignments: A_clamp := A_clamp.On, ClampDrill := ClampDrill.two): guard: A_clamp.Off and ClampDrill.one -> A_clamp.Off and (ClampDrill.one and A_turntable.Off) and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On)) [requirement: ClampDrill.one and A_turntable.Off and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On))].
Edge (event: A_clamp_c_on) (guard: A_clamp.Off and (A_clamp.On or not ClampDrill.one)) (assignments: A_clamp := A_clamp.On): guard: A_clamp.Off and (A_clamp.On or not ClampDrill.one) -> false [requirement: ClampDrill.one and A_turntable.Off and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On))].
Edge (event: A_tester_c_off) (guard: not Tester.Two and A_tester.On) (assignments: A_tester := A_tester.Off): guard: not Tester.Two and A_tester.On -> false [requirement: Tester.Two].
Edge (event: A_tester_c_on) (guard: Tester.One and A_tester.Off) (assignments: A_tester := A_tester.On, Tester := Tester.Two): guard: Tester.One and A_tester.Off -> A_turntable.Off and (Tester.One and A_tester.Off) [requirement: A_turntable.Off and Tester.One].
Edge (event: A_tester_c_on) (guard: Tester.Three and A_tester.Off or Tester.Two and A_tester.Off) (assignments: A_tester := A_tester.On): guard: Tester.Three and A_tester.Off or Tester.Two and A_tester.Off -> false [requirement: A_turntable.Off and Tester.One].
Edge (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off): guard: A_eject.On -> A_eject.On and S_Pinitialized.On [requirement: S_Pinitialized.On].
Edge (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On): guard: A_eject.Off -> A_eject.Off and A_turntable.Off and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On)) [requirement: A_turntable.Off and PTimer.Timeout and (S_Pinitialized.On and S_turntable.On)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: <bdd 8n 16p>)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_drill_c_off) (guard: A_drill.On and ClampDrill.seven -> A_drill.On and ClampDrill.seven and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight)
    Edge: (event: A_drill_c_off) (guard: (A_drill.Off or not ClampDrill.seven) and A_drill.On -> false) (assignments: A_drill := A_drill.Off)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off and ClampDrill.two -> A_drill.Off and ClampDrill.two and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off and (A_drill.On or not ClampDrill.two) -> false) (assignments: A_drill := A_drill.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On -> A_turntable.On and (S_Pinitialized.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.One) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.One) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.One) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.One) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.One)) -> false) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.Three) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Three) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Three)) -> false) (assignments: A_turntable := A_turntable.On, Tester := Tester.One)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Two) -> false) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Two) -> false) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.Two) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Two) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Two)) -> false) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_drilldown_c_off) (guard: ClampDrill.five and A_drilldown.On) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six)
    Edge: (event: A_drilldown_c_off) (guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.On or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drilldown.On) -> false) (assignments: A_drilldown := A_drilldown.Off)
    Edge: (event: A_drilldown_c_on) (guard: ClampDrill.four and A_drilldown.Off -> ClampDrill.four and (A_drilldown.Off and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five)
    Edge: (event: A_drilldown_c_on) (guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.Off or ClampDrill.five and A_drilldown.Off or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.Off or ((ClampDrill.two or ClampDrill.six) and A_drilldown.Off or ClampDrill.eight and A_drilldown.Off)) -> false) (assignments: A_drilldown := A_drilldown.On)
    Edge: (event: A_drillup_c_off) (guard: ClampDrill.three and A_drillup.On -> ClampDrill.three and (A_drillup.On and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four)
    Edge: (event: A_drillup_c_off) (guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.On or ClampDrill.five and A_drillup.On or (ClampDrill.seven and A_drillup.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drillup.On) -> false) (assignments: A_drillup := A_drillup.Off)
    Edge: (event: A_drillup_c_on) (guard: ClampDrill.six and A_drillup.Off) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven)
    Edge: (event: A_drillup_c_on) (guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.Off or ClampDrill.five and A_drillup.Off or ((ClampDrill.three or ClampDrill.seven) and A_drillup.Off or (ClampDrill.two and A_drillup.Off or (ClampDrill.four or ClampDrill.eight) and A_drillup.Off)) -> false) (assignments: A_drillup := A_drillup.On)
    Edge: (event: A_clamp_c_off) (guard: A_clamp.On and ClampDrill.eight -> A_drill.Off and A_clamp.On and (ClampDrill.eight and (S_drill_up.On and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine)
    Edge: (event: A_clamp_c_off) (guard: (A_clamp.Off or not ClampDrill.eight) and A_clamp.On -> false) (assignments: A_clamp := A_clamp.Off)
    Edge: (event: A_clamp_c_on) (guard: A_clamp.Off and ClampDrill.one -> A_clamp.Off and (ClampDrill.one and A_turntable.Off) and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On))) (assignments: A_clamp := A_clamp.On, ClampDrill := ClampDrill.two)
    Edge: (event: A_clamp_c_on) (guard: A_clamp.Off and (A_clamp.On or not ClampDrill.one) -> false) (assignments: A_clamp := A_clamp.On)
    Edge: (event: A_tester_c_off) (guard: Tester.Two and A_tester.On) (assignments: A_tester := A_tester.Off, Tester := Tester.Three)
    Edge: (event: A_tester_c_off) (guard: not Tester.Two and A_tester.On -> false) (assignments: A_tester := A_tester.Off)
    Edge: (event: A_tester_c_on) (guard: Tester.One and A_tester.Off -> A_turntable.Off and (Tester.One and A_tester.Off)) (assignments: A_tester := A_tester.On, Tester := Tester.Two)
    Edge: (event: A_tester_c_on) (guard: Tester.Three and A_tester.Off or Tester.Two and A_tester.Off -> false) (assignments: A_tester := A_tester.On)
    Edge: (event: A_eject_c_off) (guard: A_eject.On -> A_eject.On and S_Pinitialized.On) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off -> A_eject.Off and A_turntable.Off and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On))) (assignments: A_eject := A_eject.On)
    Edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 19n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 19n 1p> -> <bdd 18n 1p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 18n 1p> -> <bdd 17n 1p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 17n 1p> -> <bdd 16n 1p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 16n 1p> -> <bdd 15n 1p> [backward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 15n 1p> -> <bdd 22n 2p> [backward reach with edge: (event: A_turntable_c_off) (guard: A_turntable.On -> A_turntable.On and (S_Pinitialized.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 22n 2p> -> <bdd 37n 4p> [backward reach with edge: (event: A_eject_c_off) (guard: A_eject.On -> A_eject.On and S_Pinitialized.On) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 37n 4p> -> <bdd 34n 4p> [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 34n 4p> -> <bdd 37n 8p> [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 37n 8p> -> <bdd 29n 6p> [backward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 29n 6p> -> <bdd 13n 2p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 13n 2p> -> <bdd 31n 5p> [backward reach with edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.One) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 31n 5p> -> <bdd 36n 8p> [backward reach with edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 36n 8p> -> <bdd 35n 8p> [backward reach with edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 35n 8p> -> <bdd 39n 9p> [backward reach with edge: (event: A_clamp_c_off) (guard: A_clamp.On and ClampDrill.eight -> A_drill.Off and A_clamp.On and (ClampDrill.eight and (S_drill_up.On and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 39n 9p> -> <bdd 41n 12p> [backward reach with edge: (event: A_tester_c_off) (guard: Tester.Two and A_tester.On) (assignments: A_tester := A_tester.Off, Tester := Tester.Three), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 41n 12p> -> <bdd 32n 10p> [backward reach with edge: (event: A_eject_c_off) (guard: A_eject.On -> A_eject.On and S_Pinitialized.On) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 32n 10p> -> <bdd 33n 16p> [backward reach with edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 33n 16p> -> <bdd 34n 28p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 34n 28p> -> <bdd 32n 16p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 32n 16p> -> <bdd 31n 16p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 31n 16p> -> <bdd 29n 16p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 29n 16p> -> <bdd 46n 20p> [backward reach with edge: (event: A_drill_c_off) (guard: A_drill.On and ClampDrill.seven -> A_drill.On and ClampDrill.seven and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 46n 20p> -> <bdd 63n 36p> [backward reach with edge: (event: A_turntable_c_off) (guard: A_turntable.On -> A_turntable.On and (S_Pinitialized.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 63n 36p> -> <bdd 67n 44p> [backward reach with edge: (event: A_drillup_c_on) (guard: ClampDrill.six and A_drillup.Off) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 67n 44p> -> <bdd 59n 42p> [backward reach with edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward reachability: iteration 4.
Backward controlled-behavior: <bdd 59n 42p> -> <bdd 61n 58p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 61n 58p> -> <bdd 51n 42p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 51n 42p> -> <bdd 42n 34p> [backward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 42n 34p> -> <bdd 23n 16p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 23n 16p> -> <bdd 28n 20p> [backward reach with edge: (event: A_drilldown_c_off) (guard: ClampDrill.five and A_drilldown.On) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 28n 20p> -> <bdd 39n 24p> [backward reach with edge: (event: A_drilldown_c_on) (guard: ClampDrill.four and A_drilldown.Off -> ClampDrill.four and (A_drilldown.Off and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 39n 24p> -> <bdd 42n 28p> [backward reach with edge: (event: A_drillup_c_off) (guard: ClampDrill.three and A_drillup.On -> ClampDrill.three and (A_drillup.On and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward reachability: iteration 5.
Backward controlled-behavior: <bdd 42n 28p> -> <bdd 29n 24p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 29n 24p> -> <bdd 41n 28p> [backward reach with edge: (event: A_drill_c_on) (guard: A_drill.Off and ClampDrill.two -> A_drill.Off and ClampDrill.two and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward reachability: iteration 6.
Backward controlled-behavior: <bdd 41n 28p> -> <bdd 42n 32p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 42n 32p> -> <bdd 40n 28p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward controlled-behavior: <bdd 40n 28p> -> <bdd 30n 28p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 16p>]
Backward reachability: iteration 7.
Backward controlled-behavior: <bdd 30n 28p> [fixed point].
Controlled behavior: <bdd 8n 16p> -> <bdd 30n 28p>.

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 30n 65p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 19n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 19n 1p> -> <bdd 18n 1p> [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 18n 1p> -> <bdd 19n 2p> [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 19n 2p> -> <bdd 18n 2p> [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 18n 2p> -> <bdd 17n 2p> [forward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 17n 2p> -> <bdd 19n 4p> [forward reach with edge: (event: A_tester_c_on) (guard: Tester.One and A_tester.Off -> A_turntable.Off and (Tester.One and A_tester.Off)) (assignments: A_tester := A_tester.On, Tester := Tester.Two), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 19n 4p> -> <bdd 18n 4p> [forward reach with edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 18n 4p> -> <bdd 19n 8p> [forward reach with edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 19n 8p> -> <bdd 28n 9p> [forward reach with edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.One) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 28n 9p> -> <bdd 44n 13p> [forward reach with edge: (event: A_clamp_c_on) (guard: A_clamp.Off and ClampDrill.one -> A_clamp.Off and (ClampDrill.one and A_turntable.Off) and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On))) (assignments: A_clamp := A_clamp.On, ClampDrill := ClampDrill.two), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 44n 13p> -> <bdd 42n 13p> [forward reach with edge: (event: A_tester_c_off) (guard: Tester.Two and A_tester.On) (assignments: A_tester := A_tester.Off, Tester := Tester.Three), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 42n 13p> -> <bdd 45n 21p> [forward reach with edge: (event: A_eject_c_on) (guard: A_eject.Off -> A_eject.Off and A_turntable.Off and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On))) (assignments: A_eject := A_eject.On), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 45n 21p> -> <bdd 43n 21p> [forward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 43n 21p> -> <bdd 42n 21p> [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 42n 21p> -> <bdd 39n 22p> [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 39n 22p> -> <bdd 38n 22p> [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 38n 22p> -> <bdd 35n 22p> [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 35n 22p> -> <bdd 51n 26p> [forward reach with edge: (event: A_drill_c_on) (guard: A_drill.Off and ClampDrill.two -> A_drill.Off and ClampDrill.two and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 51n 26p> -> <bdd 55n 30p> [forward reach with edge: (event: A_drillup_c_off) (guard: ClampDrill.three and A_drillup.On -> ClampDrill.three and (A_drillup.On and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 55n 30p> -> <bdd 51n 52p> [forward reach with edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 51n 52p> -> <bdd 50n 52p> [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 50n 52p> -> <bdd 51n 68p> [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 51n 68p> -> <bdd 37n 68p> [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 37n 68p> -> <bdd 51n 84p> [forward reach with edge: (event: A_drilldown_c_on) (guard: ClampDrill.four and A_drilldown.Off -> ClampDrill.four and (A_drilldown.Off and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 51n 84p> -> <bdd 41n 84p> [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 41n 84p> -> <bdd 42n 100p> [forward reach with edge: (event: A_drilldown_c_off) (guard: ClampDrill.five and A_drilldown.On) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 42n 100p> -> <bdd 42n 100p> [forward reach with edge: (event: A_drillup_c_on) (guard: ClampDrill.six and A_drillup.Off) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward reachability: iteration 6.
Forward controlled-behavior: <bdd 42n 100p> -> <bdd 57n 108p> [forward reach with edge: (event: A_drill_c_off) (guard: A_drill.On and ClampDrill.seven -> A_drill.On and ClampDrill.seven and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 57n 108p> -> <bdd 59n 116p> [forward reach with edge: (event: A_clamp_c_off) (guard: A_clamp.On and ClampDrill.eight -> A_drill.Off and A_clamp.On and (ClampDrill.eight and (S_drill_up.On and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward reachability: iteration 7.
Forward controlled-behavior: <bdd 59n 116p> -> <bdd 58n 116p> [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 58n 116p> -> <bdd 59n 132p> [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward controlled-behavior: <bdd 59n 132p> -> <bdd 45n 124p> [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 30n 28p>]
Forward reachability: iteration 8.
Forward controlled-behavior: <bdd 45n 124p> [fixed point].
Controlled behavior: <bdd 30n 28p> -> <bdd 45n 124p>.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 19n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 19n 1p> -> <bdd 18n 1p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 18n 1p> -> <bdd 19n 2p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 19n 2p> -> <bdd 18n 2p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 18n 2p> -> <bdd 17n 2p> [backward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 17n 2p> -> <bdd 26n 4p> [backward reach with edge: (event: A_turntable_c_off) (guard: A_turntable.On -> A_turntable.On and (S_Pinitialized.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 26n 4p> -> <bdd 43n 6p> [backward reach with edge: (event: A_eject_c_off) (guard: A_eject.On -> A_eject.On and S_Pinitialized.On) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 43n 6p> -> <bdd 40n 6p> [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 40n 6p> -> <bdd 43n 12p> [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 43n 12p> -> <bdd 34n 12p> [backward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 34n 12p> -> <bdd 25n 8p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 25n 8p> -> <bdd 37n 9p> [backward reach with edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.One) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 37n 9p> -> <bdd 40n 14p> [backward reach with edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 40n 14p> -> <bdd 39n 14p> [backward reach with edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 39n 14p> -> <bdd 43n 15p> [backward reach with edge: (event: A_clamp_c_off) (guard: A_clamp.On and ClampDrill.eight -> A_drill.Off and A_clamp.On and (ClampDrill.eight and (S_drill_up.On and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 43n 15p> -> <bdd 45n 18p> [backward reach with edge: (event: A_tester_c_off) (guard: Tester.Two and A_tester.On) (assignments: A_tester := A_tester.Off, Tester := Tester.Three), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 45n 18p> -> <bdd 45n 24p> [backward reach with edge: (event: A_eject_c_off) (guard: A_eject.On -> A_eject.On and S_Pinitialized.On) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 45n 24p> -> <bdd 46n 36p> [backward reach with edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 46n 36p> -> <bdd 45n 36p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 45n 36p> -> <bdd 46n 60p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 46n 60p> -> <bdd 45n 60p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 45n 60p> -> <bdd 41n 60p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 41n 60p> -> <bdd 59n 68p> [backward reach with edge: (event: A_drill_c_off) (guard: A_drill.On and ClampDrill.seven -> A_drill.On and ClampDrill.seven and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 59n 68p> -> <bdd 63n 76p> [backward reach with edge: (event: A_drillup_c_on) (guard: ClampDrill.six and A_drillup.Off) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 63n 76p> -> <bdd 53n 60p> [backward reach with edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward reachability: iteration 4.
Backward controlled-behavior: <bdd 53n 60p> -> <bdd 52n 60p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 52n 60p> -> <bdd 53n 76p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 53n 76p> -> <bdd 38n 76p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 38n 76p> -> <bdd 43n 92p> [backward reach with edge: (event: A_drilldown_c_off) (guard: ClampDrill.five and A_drilldown.On) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 43n 92p> -> <bdd 57n 108p> [backward reach with edge: (event: A_drilldown_c_on) (guard: ClampDrill.four and A_drilldown.Off -> ClampDrill.four and (A_drilldown.Off and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 57n 108p> -> <bdd 60n 124p> [backward reach with edge: (event: A_drillup_c_off) (guard: ClampDrill.three and A_drillup.On -> ClampDrill.three and (A_drillup.On and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward reachability: iteration 5.
Backward controlled-behavior: <bdd 60n 124p> -> <bdd 44n 108p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 44n 108p> -> <bdd 58n 116p> [backward reach with edge: (event: A_drill_c_on) (guard: A_drill.Off and ClampDrill.two -> A_drill.Off and ClampDrill.two and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward reachability: iteration 6.
Backward controlled-behavior: <bdd 58n 116p> -> <bdd 57n 116p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 57n 116p> -> <bdd 58n 124p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward controlled-behavior: <bdd 58n 124p> -> <bdd 45n 124p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 45n 124p>]
Backward reachability: iteration 7.
Backward controlled-behavior: <bdd 45n 124p> [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 45n 217p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_drill_c_off) (guard: A_drill.On and ClampDrill.seven -> A_drill.On and ClampDrill.seven and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight): guard: A_drill.On and ClampDrill.seven and (S_drill_up.On and S_Pinitialized.On) -> <bdd 18n 4p>.
Edge (event: A_drill_c_on) (guard: A_drill.Off and ClampDrill.two -> A_drill.Off and ClampDrill.two and (S_drill_up.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three): guard: A_drill.Off and ClampDrill.two and (S_drill_up.On and S_Pinitialized.On) -> <bdd 18n 4p>.
Edge (event: A_turntable_c_off) (guard: A_turntable.On -> A_turntable.On and (S_Pinitialized.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off): guard: A_turntable.On and (S_Pinitialized.On and S_turntable.Off) -> <bdd 35n 56p>.
Edge (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.One) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On): guard: <bdd 14n 1p> -> <bdd 19n 1p>.
Edge (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.One) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one): guard: <bdd 14n 1p> -> <bdd 19n 1p>.
Edge (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One): guard: <bdd 14n 1p> -> <bdd 19n 1p>.
Edge (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Three) -> <bdd 14n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one): guard: <bdd 14n 1p> -> <bdd 19n 1p>.
Edge (event: A_drilldown_c_off) (guard: ClampDrill.five and A_drilldown.On) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six): guard: ClampDrill.five and A_drilldown.On -> <bdd 17n 8p>.
Edge (event: A_drilldown_c_on) (guard: ClampDrill.four and A_drilldown.Off -> ClampDrill.four and (A_drilldown.Off and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five): guard: ClampDrill.four and (A_drilldown.Off and S_Pinitialized.On) -> <bdd 18n 8p>.
Edge (event: A_drillup_c_off) (guard: ClampDrill.three and A_drillup.On -> ClampDrill.three and (A_drillup.On and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four): guard: ClampDrill.three and (A_drillup.On and S_Pinitialized.On) -> <bdd 18n 8p>.
Edge (event: A_drillup_c_on) (guard: ClampDrill.six and A_drillup.Off) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven): guard: ClampDrill.six and A_drillup.Off -> <bdd 17n 8p>.
Edge (event: A_clamp_c_off) (guard: A_clamp.On and ClampDrill.eight -> A_drill.Off and A_clamp.On and (ClampDrill.eight and (S_drill_up.On and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine): guard: A_drill.Off and A_clamp.On and (ClampDrill.eight and (S_drill_up.On and S_Pinitialized.On)) -> <bdd 18n 4p>.
Edge (event: A_clamp_c_on) (guard: A_clamp.Off and ClampDrill.one -> A_clamp.Off and (ClampDrill.one and A_turntable.Off) and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On))) (assignments: A_clamp := A_clamp.On, ClampDrill := ClampDrill.two): guard: A_clamp.Off and (ClampDrill.one and A_turntable.Off) and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On)) -> <bdd 19n 4p>.
Edge (event: A_tester_c_off) (guard: Tester.Two and A_tester.On) (assignments: A_tester := A_tester.Off, Tester := Tester.Three): guard: Tester.Two and A_tester.On -> <bdd 32n 28p>.
Edge (event: A_tester_c_on) (guard: Tester.One and A_tester.Off -> A_turntable.Off and (Tester.One and A_tester.Off)) (assignments: A_tester := A_tester.On, Tester := Tester.Two): guard: A_turntable.Off and (Tester.One and A_tester.Off) -> <bdd 32n 28p>.
Edge (event: A_eject_c_off) (guard: A_eject.On -> A_eject.On and S_Pinitialized.On) (assignments: A_eject := A_eject.Off): guard: A_eject.On and S_Pinitialized.On -> <bdd 41n 68p>.
Edge (event: A_eject_c_on) (guard: A_eject.Off -> A_eject.Off and A_turntable.Off and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On))) (assignments: A_eject := A_eject.On): guard: A_eject.Off and A_turntable.Off and (PTimer.Timeout and (S_Pinitialized.On and S_turntable.On)) -> <bdd 36n 28p>.
Edge (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running): guard: PTimer.Off -> <bdd 45n 62p>.
Edge (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off): guard: PTimer.Running -> <bdd 45n 62p>.
Edge (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off): guard: PTimer.Timeout -> <bdd 45n 62p>.

Final synthesis result:
  State: (controlled-behavior: <bdd 45n 124p>)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_drill_c_off) (guard: A_drill.On and ClampDrill.seven -> <bdd 18n 4p>) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight)
    Edge: (event: A_drill_c_off) (guard: (A_drill.Off or not ClampDrill.seven) and A_drill.On -> false) (assignments: A_drill := A_drill.Off)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off and ClampDrill.two -> <bdd 18n 4p>) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off and (A_drill.On or not ClampDrill.two) -> false) (assignments: A_drill := A_drill.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On -> <bdd 35n 56p>) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.One) -> <bdd 19n 1p>) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.One) -> <bdd 19n 1p>) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.One) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.One) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.One)) -> false) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Three) -> <bdd 19n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Three) -> <bdd 19n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.Three) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Three) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Three)) -> false) (assignments: A_turntable := A_turntable.On, Tester := Tester.One)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.one and (A_turntable.Off and Tester.Two) -> false) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.nine and (A_turntable.Off and Tester.Two) -> false) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: ClampDrill.five and (A_turntable.Off and Tester.Two) or ((ClampDrill.three or ClampDrill.seven) and (A_turntable.Off and Tester.Two) or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and (A_turntable.Off and Tester.Two)) -> false) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_drilldown_c_off) (guard: ClampDrill.five and A_drilldown.On -> <bdd 17n 8p>) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six)
    Edge: (event: A_drilldown_c_off) (guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.On or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drilldown.On) -> false) (assignments: A_drilldown := A_drilldown.Off)
    Edge: (event: A_drilldown_c_on) (guard: ClampDrill.four and A_drilldown.Off -> <bdd 18n 8p>) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five)
    Edge: (event: A_drilldown_c_on) (guard: (ClampDrill.one or ClampDrill.nine) and A_drilldown.Off or ClampDrill.five and A_drilldown.Off or ((ClampDrill.three or ClampDrill.seven) and A_drilldown.Off or ((ClampDrill.two or ClampDrill.six) and A_drilldown.Off or ClampDrill.eight and A_drilldown.Off)) -> false) (assignments: A_drilldown := A_drilldown.On)
    Edge: (event: A_drillup_c_off) (guard: ClampDrill.three and A_drillup.On -> <bdd 18n 8p>) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four)
    Edge: (event: A_drillup_c_off) (guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.On or ClampDrill.five and A_drillup.On or (ClampDrill.seven and A_drillup.On or (ClampDrill.two or ClampDrill.four or (ClampDrill.six or ClampDrill.eight)) and A_drillup.On) -> false) (assignments: A_drillup := A_drillup.Off)
    Edge: (event: A_drillup_c_on) (guard: ClampDrill.six and A_drillup.Off -> <bdd 17n 8p>) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven)
    Edge: (event: A_drillup_c_on) (guard: (ClampDrill.one or ClampDrill.nine) and A_drillup.Off or ClampDrill.five and A_drillup.Off or ((ClampDrill.three or ClampDrill.seven) and A_drillup.Off or (ClampDrill.two and A_drillup.Off or (ClampDrill.four or ClampDrill.eight) and A_drillup.Off)) -> false) (assignments: A_drillup := A_drillup.On)
    Edge: (event: A_clamp_c_off) (guard: A_clamp.On and ClampDrill.eight -> <bdd 18n 4p>) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine)
    Edge: (event: A_clamp_c_off) (guard: (A_clamp.Off or not ClampDrill.eight) and A_clamp.On -> false) (assignments: A_clamp := A_clamp.Off)
    Edge: (event: A_clamp_c_on) (guard: A_clamp.Off and ClampDrill.one -> <bdd 19n 4p>) (assignments: A_clamp := A_clamp.On, ClampDrill := ClampDrill.two)
    Edge: (event: A_clamp_c_on) (guard: A_clamp.Off and (A_clamp.On or not ClampDrill.one) -> false) (assignments: A_clamp := A_clamp.On)
    Edge: (event: A_tester_c_off) (guard: Tester.Two and A_tester.On -> <bdd 32n 28p>) (assignments: A_tester := A_tester.Off, Tester := Tester.Three)
    Edge: (event: A_tester_c_off) (guard: not Tester.Two and A_tester.On -> false) (assignments: A_tester := A_tester.Off)
    Edge: (event: A_tester_c_on) (guard: Tester.One and A_tester.Off -> <bdd 32n 28p>) (assignments: A_tester := A_tester.On, Tester := Tester.Two)
    Edge: (event: A_tester_c_on) (guard: Tester.Three and A_tester.Off or Tester.Two and A_tester.Off -> false) (assignments: A_tester := A_tester.On)
    Edge: (event: A_eject_c_off) (guard: A_eject.On -> <bdd 41n 68p>) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off -> <bdd 36n 28p>) (assignments: A_eject := A_eject.On)
    Edge: (event: PTimer_c_on) (guard: PTimer.Off -> <bdd 45n 62p>) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Running -> <bdd 45n 62p>) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Timeout -> <bdd 45n 62p>) (assignments: PTimer := PTimer.Off)

Controlled system:                     exactly 1,980 states.

Initial (synthesis result):            <bdd 45n 124p>
Initial (uncontrolled system):         <bdd 19n 1p>
Initial (controlled system):           <bdd 19n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_drill_c_off: guard: <bdd 18n 4p> -> true [assume <bdd 18n 4p>].
  Event A_drill_c_on: guard: <bdd 18n 4p> -> true [assume <bdd 18n 4p>].
  Event A_turntable_c_off: guard: <bdd 35n 56p> -> true [assume <bdd 19n 4p>].
  Event A_turntable_c_on: guard: <bdd 17n 1p> -> true [assume <bdd 17n 1p>].
  Event A_drilldown_c_off: guard: <bdd 17n 8p> -> true [assume <bdd 17n 8p>].
  Event A_drilldown_c_on: guard: <bdd 18n 8p> -> true [assume <bdd 18n 8p>].
  Event A_drillup_c_off: guard: <bdd 18n 8p> -> true [assume <bdd 18n 8p>].
  Event A_drillup_c_on: guard: <bdd 17n 8p> -> true [assume <bdd 17n 8p>].
  Event A_clamp_c_off: guard: <bdd 18n 4p> -> true [assume <bdd 18n 4p>].
  Event A_clamp_c_on: guard: <bdd 19n 4p> -> true [assume <bdd 19n 4p>].
  Event A_tester_c_off: guard: <bdd 32n 28p> -> true [assume <bdd 32n 28p>].
  Event A_tester_c_on: guard: <bdd 32n 28p> -> true [assume <bdd 32n 28p>].
  Event A_eject_c_off: guard: <bdd 41n 68p> -> true [assume <bdd 35n 56p>].
  Event A_eject_c_on: guard: <bdd 36n 28p> -> true [assume <bdd 36n 28p>].
  Event PTimer_c_on: guard: <bdd 45n 62p> -> true [assume <bdd 45n 62p>].
  Event PTimer_c_reset: guard: <bdd 46n 124p> -> true [assume <bdd 46n 124p>].

Constructing output CIF specification.
Syntesizing supervisor 65.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name          Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_drilldown   0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_drillup     1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_drill_down  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_drill_up    3      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  Total                                        4      8         16          16          100%

Applying automatic variable ordering:
  Number of hyperedges: 12

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    2 (total)                 0.17 (avg/edge) [before]
    Total span:                    2 (total)                 0.17 (avg/edge) [iteration 1]
    Total span:                    2 (total)                 0.17 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    2 (total)                 0.17 (avg/edge) [before]
    Total span:                    2 (total)                 0.17 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_drill_up.On
Initial   (aut/locs init predicate):     S_drill_down.Off
Initial   (aut/locs init predicate):     A_drilldown.Off
Initial   (aut/locs init predicate):     A_drillup.On
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On)
Initial   (uncontrolled system):         A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On)
Initial   (system, combined init/inv):   A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_drill_up.On
Marked    (aut/locs marker predicate):   S_drill_down.Off
Marked    (aut/locs marker predicate):   A_drilldown.Off
Marked    (aut/locs marker predicate):   A_drillup.On
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On)
Marked    (uncontrolled system):         A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On)
Marked    (system, combined marked/inv): A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On)

State/event exclusion requirements:
  Event "A_drillup_c_off" needs:
    S_drill_up.On
  Event "A_drilldown_c_on" needs:
    S_drill_up.On
  Event "A_drillup_c_on" needs:
    S_drill_down.On
  Event "A_drilldown_c_off" needs:
    S_drill_down.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: A_drilldown_c_off) (guard: A_drilldown.On) (assignments: A_drilldown := A_drilldown.Off)
    Edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off) (assignments: A_drilldown := A_drilldown.On)
    Edge: (event: A_drillup_c_off) (guard: A_drillup.On) (assignments: A_drillup := A_drillup.Off)
    Edge: (event: A_drillup_c_on) (guard: A_drillup.Off) (assignments: A_drillup := A_drillup.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_drilldown_c_off) (guard: A_drilldown.On) (assignments: A_drilldown := A_drilldown.Off): guard: A_drilldown.On -> A_drilldown.On and S_drill_down.On [requirement: S_drill_down.On].
Edge (event: A_drilldown_c_on) (guard: A_drilldown.Off) (assignments: A_drilldown := A_drilldown.On): guard: A_drilldown.Off -> A_drilldown.Off and S_drill_up.On [requirement: S_drill_up.On].
Edge (event: A_drillup_c_off) (guard: A_drillup.On) (assignments: A_drillup := A_drillup.Off): guard: A_drillup.On -> A_drillup.On and S_drill_up.On [requirement: S_drill_up.On].
Edge (event: A_drillup_c_on) (guard: A_drillup.Off) (assignments: A_drillup := A_drillup.On): guard: A_drillup.Off -> A_drillup.Off and S_drill_down.On [requirement: S_drill_down.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: A_drilldown_c_off) (guard: A_drilldown.On -> A_drilldown.On and S_drill_down.On) (assignments: A_drilldown := A_drilldown.Off)
    Edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off -> A_drilldown.Off and S_drill_up.On) (assignments: A_drilldown := A_drilldown.On)
    Edge: (event: A_drillup_c_off) (guard: A_drillup.On -> A_drillup.On and S_drill_up.On) (assignments: A_drillup := A_drillup.Off)
    Edge: (event: A_drillup_c_on) (guard: A_drillup.Off -> A_drillup.Off and S_drill_down.On) (assignments: A_drillup := A_drillup.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On) -> A_drilldown.Off and (A_drillup.On and S_drill_down.Off) [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_drilldown.Off and (A_drillup.On and S_drill_down.Off) -> A_drilldown.Off and A_drillup.On [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_drilldown.Off and A_drillup.On -> A_drilldown.On and (A_drillup.On and S_drill_down.On) or A_drilldown.Off and A_drillup.On [backward reach with edge: (event: A_drilldown_c_off) (guard: A_drilldown.On -> A_drilldown.On and S_drill_down.On) (assignments: A_drilldown := A_drilldown.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_drilldown.On and (A_drillup.On and S_drill_down.On) or A_drilldown.Off and A_drillup.On -> (A_drilldown.Off or S_drill_down.On) and (A_drilldown.On or (A_drillup.On or S_drill_down.On)) [backward reach with edge: (event: A_drillup_c_on) (guard: A_drillup.Off -> A_drillup.Off and S_drill_down.On) (assignments: A_drillup := A_drillup.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: (A_drilldown.Off or S_drill_down.On) and (A_drilldown.On or (A_drillup.On or S_drill_down.On)) -> (A_drilldown.Off or (S_drill_down.On or S_drill_up.Off)) and (A_drilldown.On or A_drillup.On or (S_drill_down.On or S_drill_up.Off)) [backward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_drilldown.Off or (S_drill_down.On or S_drill_up.Off)) and (A_drilldown.On or A_drillup.On or (S_drill_down.On or S_drill_up.Off)) -> true [backward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On) -> A_drilldown.Off and (A_drillup.On and S_drill_down.Off) [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_drilldown.Off and (A_drillup.On and S_drill_down.Off) -> A_drilldown.Off and ((A_drilldown.On or A_drillup.Off or (S_drill_down.Off or S_drill_up.Off)) and (A_drilldown.On or A_drillup.On)) [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_drilldown.Off and ((A_drilldown.On or A_drillup.Off or (S_drill_down.Off or S_drill_up.Off)) and (A_drilldown.On or A_drillup.On)) -> A_drilldown.On and A_drillup.On and (S_drill_down.Off and S_drill_up.On) or (A_drilldown.Off and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or A_drilldown.Off and (A_drillup.On and S_drill_down.Off)) [forward reach with edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off -> A_drilldown.Off and S_drill_up.On) (assignments: A_drilldown := A_drilldown.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_drilldown.On and A_drillup.On and (S_drill_down.Off and S_drill_up.On) or (A_drilldown.Off and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or A_drilldown.Off and (A_drillup.On and S_drill_down.Off)) -> A_drilldown.On and (S_drill_down.Off and S_drill_up.On) or A_drilldown.Off and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or (A_drilldown.Off and (A_drillup.On and S_drill_down.Off) or A_drilldown.Off and A_drillup.Off and (S_drill_down.Off and S_drill_up.On)) [forward reach with edge: (event: A_drillup_c_off) (guard: A_drillup.On -> A_drillup.On and S_drill_up.On) (assignments: A_drillup := A_drillup.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_drilldown.On and (S_drill_down.Off and S_drill_up.On) or A_drilldown.Off and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or (A_drilldown.Off and (A_drillup.On and S_drill_down.Off) or A_drilldown.Off and A_drillup.Off and (S_drill_down.Off and S_drill_up.On)) -> (A_drilldown.Off or S_drill_down.Off) and ((A_drilldown.On or A_drillup.Off or (S_drill_down.Off or S_drill_up.Off)) and (A_drilldown.On or (A_drillup.On or S_drill_down.Off))) [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_drilldown.Off or S_drill_down.Off) and ((A_drilldown.On or A_drillup.Off or (S_drill_down.Off or S_drill_up.Off)) and (A_drilldown.On or (A_drillup.On or S_drill_down.Off))) -> S_drill_down.Off or S_drill_up.Off [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: S_drill_down.Off or S_drill_up.Off [fixed point].
Controlled behavior: true -> S_drill_down.Off or S_drill_up.Off.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On) -> A_drilldown.Off and (A_drillup.On and S_drill_down.Off) [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: S_drill_down.Off or S_drill_up.Off]
Backward controlled-behavior: A_drilldown.Off and (A_drillup.On and S_drill_down.Off) -> A_drilldown.Off and ((A_drilldown.On or A_drillup.Off or (S_drill_down.Off or S_drill_up.Off)) and (A_drilldown.On or A_drillup.On)) [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: S_drill_down.Off or S_drill_up.Off]
Backward controlled-behavior: A_drilldown.Off and ((A_drilldown.On or A_drillup.Off or (S_drill_down.Off or S_drill_up.Off)) and (A_drilldown.On or A_drillup.On)) -> A_drilldown.On and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or (A_drilldown.Off and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or A_drilldown.Off and (A_drillup.On and S_drill_down.Off)) [backward reach with edge: (event: A_drilldown_c_off) (guard: A_drilldown.On -> A_drilldown.On and S_drill_down.On) (assignments: A_drilldown := A_drilldown.Off), restricted to current/previous controlled-behavior predicate: S_drill_down.Off or S_drill_up.Off]
Backward controlled-behavior: A_drilldown.On and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or (A_drilldown.Off and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or A_drilldown.Off and (A_drillup.On and S_drill_down.Off)) -> A_drilldown.On and (S_drill_down.On and S_drill_up.Off) or A_drilldown.Off and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or (A_drilldown.Off and (A_drillup.On and S_drill_down.Off) or A_drilldown.Off and A_drillup.Off and (S_drill_down.On and S_drill_up.Off)) [backward reach with edge: (event: A_drillup_c_on) (guard: A_drillup.Off -> A_drillup.Off and S_drill_down.On) (assignments: A_drillup := A_drillup.On), restricted to current/previous controlled-behavior predicate: S_drill_down.Off or S_drill_up.Off]
Backward reachability: iteration 2.
Backward controlled-behavior: A_drilldown.On and (S_drill_down.On and S_drill_up.Off) or A_drilldown.Off and A_drillup.On and (S_drill_down.On and S_drill_up.Off) or (A_drilldown.Off and (A_drillup.On and S_drill_down.Off) or A_drilldown.Off and A_drillup.Off and (S_drill_down.On and S_drill_up.Off)) -> (A_drilldown.Off or S_drill_up.Off) and ((A_drilldown.On or A_drillup.Off or (S_drill_down.Off or S_drill_up.Off)) and (A_drilldown.On or (A_drillup.On or S_drill_up.Off))) [backward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: S_drill_down.Off or S_drill_up.Off]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_drilldown.Off or S_drill_up.Off) and ((A_drilldown.On or A_drillup.Off or (S_drill_down.Off or S_drill_up.Off)) and (A_drilldown.On or (A_drillup.On or S_drill_up.Off))) -> S_drill_down.Off or S_drill_up.Off [backward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: S_drill_down.Off or S_drill_up.Off]
Backward reachability: iteration 4.
Backward controlled-behavior: S_drill_down.Off or S_drill_up.Off [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: S_drill_down.On and S_drill_up.On [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_drilldown_c_off) (guard: A_drilldown.On -> A_drilldown.On and S_drill_down.On) (assignments: A_drilldown := A_drilldown.Off): guard: A_drilldown.On and S_drill_down.On -> A_drilldown.On and (S_drill_down.On and S_drill_up.Off).
Edge (event: A_drilldown_c_on) (guard: A_drilldown.Off -> A_drilldown.Off and S_drill_up.On) (assignments: A_drilldown := A_drilldown.On): guard: A_drilldown.Off and S_drill_up.On -> A_drilldown.Off and (S_drill_down.Off and S_drill_up.On).
Edge (event: A_drillup_c_off) (guard: A_drillup.On -> A_drillup.On and S_drill_up.On) (assignments: A_drillup := A_drillup.Off): guard: A_drillup.On and S_drill_up.On -> A_drillup.On and (S_drill_down.Off and S_drill_up.On).
Edge (event: A_drillup_c_on) (guard: A_drillup.Off -> A_drillup.Off and S_drill_down.On) (assignments: A_drillup := A_drillup.On): guard: A_drillup.Off and S_drill_down.On -> A_drillup.Off and (S_drill_down.On and S_drill_up.Off).

Final synthesis result:
  State: (controlled-behavior: S_drill_down.Off or S_drill_up.Off)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: A_drilldown_c_off) (guard: A_drilldown.On -> A_drilldown.On and (S_drill_down.On and S_drill_up.Off)) (assignments: A_drilldown := A_drilldown.Off)
    Edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off -> A_drilldown.Off and (S_drill_down.Off and S_drill_up.On)) (assignments: A_drilldown := A_drilldown.On)
    Edge: (event: A_drillup_c_off) (guard: A_drillup.On -> A_drillup.On and (S_drill_down.Off and S_drill_up.On)) (assignments: A_drillup := A_drillup.Off)
    Edge: (event: A_drillup_c_on) (guard: A_drillup.Off -> A_drillup.Off and (S_drill_down.On and S_drill_up.Off)) (assignments: A_drillup := A_drillup.On)

Controlled system:                     exactly 12 states.

Initial (synthesis result):            S_drill_down.Off or S_drill_up.Off
Initial (uncontrolled system):         A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On)
Initial (controlled system):           A_drilldown.Off and A_drillup.On and (S_drill_down.Off and S_drill_up.On)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_drilldown_c_off: guard: A_drilldown.On and (S_drill_down.On and S_drill_up.Off) -> true [assume A_drilldown.On and (S_drill_down.On and S_drill_up.Off)].
  Event A_drilldown_c_on: guard: A_drilldown.Off and (S_drill_down.Off and S_drill_up.On) -> true [assume A_drilldown.Off and (S_drill_down.Off and S_drill_up.On)].
  Event A_drillup_c_off: guard: A_drillup.On and (S_drill_down.Off and S_drill_up.On) -> true [assume A_drillup.On and (S_drill_down.Off and S_drill_up.On)].
  Event A_drillup_c_on: guard: A_drillup.Off and (S_drill_down.On and S_drill_up.Off) -> true [assume A_drillup.Off and (S_drill_down.On and S_drill_up.Off)].

Constructing output CIF specification.
Syntesizing supervisor 69.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name         Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  -----------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_drill      0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_turntable  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_clamp      2      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  -----------  -----  --------  ----------  ----------  -----------
  Total                                       3      6         12          12          100%

Applying automatic variable ordering:
  Number of hyperedges: 9

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 3

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_clamp.Off
Initial   (aut/locs init predicate):     A_drill.Off
Initial   (aut/locs init predicate):     A_turntable.Off
Initial   (auts/locs init predicate):    A_drill.Off and (A_turntable.Off and S_clamp.Off)
Initial   (uncontrolled system):         A_drill.Off and (A_turntable.Off and S_clamp.Off)
Initial   (system, combined init/inv):   A_drill.Off and (A_turntable.Off and S_clamp.Off)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_clamp.Off
Marked    (aut/locs marker predicate):   A_drill.Off
Marked    (aut/locs marker predicate):   A_turntable.Off
Marked    (auts/locs marker predicate):  A_drill.Off and (A_turntable.Off and S_clamp.Off)
Marked    (uncontrolled system):         A_drill.Off and (A_turntable.Off and S_clamp.Off)
Marked    (system, combined marked/inv): A_drill.Off and (A_turntable.Off and S_clamp.Off)

State/event exclusion requirements:
  Event "A_turntable_c_on" needs:
    S_clamp.Off
    A_drill.Off
  Event "A_drill_c_on" needs:
    S_clamp.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off)
    Edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On)
    Edge: (event: A_drill_c_off) (guard: A_drill.On) (assignments: A_drill := A_drill.Off)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off) (assignments: A_drill := A_drill.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: A_turntable.Off) (assignments: A_turntable := A_turntable.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_drill_c_on) (guard: A_drill.Off) (assignments: A_drill := A_drill.On): guard: A_drill.Off -> A_drill.Off and S_clamp.On [requirement: S_clamp.On].
Edge (event: A_turntable_c_on) (guard: A_turntable.Off) (assignments: A_turntable := A_turntable.On): guard: A_turntable.Off -> A_drill.Off and (A_turntable.Off and S_clamp.Off) [requirement: A_drill.Off and S_clamp.Off].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off)
    Edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On)
    Edge: (event: A_drill_c_off) (guard: A_drill.On) (assignments: A_drill := A_drill.Off)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off -> A_drill.Off and S_clamp.On) (assignments: A_drill := A_drill.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: A_turntable.Off -> A_drill.Off and (A_turntable.Off and S_clamp.Off)) (assignments: A_turntable := A_turntable.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_drill.Off and (A_turntable.Off and S_clamp.Off) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_drill.Off and (A_turntable.Off and S_clamp.Off) -> A_drill.Off and A_turntable.Off [backward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_drill.Off and A_turntable.Off -> A_turntable.Off [backward reach with edge: (event: A_drill_c_off) (guard: A_drill.On) (assignments: A_drill := A_drill.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off -> true [backward reach with edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_drill.Off and (A_turntable.Off and S_clamp.Off) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_drill.Off and (A_turntable.Off and S_clamp.Off) -> A_drill.Off and A_turntable.Off [forward reach with edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_drill.Off and A_turntable.Off -> A_drill.On and (A_turntable.Off and S_clamp.On) or A_drill.Off and A_turntable.Off [forward reach with edge: (event: A_drill_c_on) (guard: A_drill.Off -> A_drill.Off and S_clamp.On) (assignments: A_drill := A_drill.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_drill.On and (A_turntable.Off and S_clamp.On) or A_drill.Off and A_turntable.Off -> (A_drill.Off or A_turntable.Off) and ((A_drill.Off or (A_turntable.On or S_clamp.On)) and (A_drill.On or (A_turntable.Off or S_clamp.Off))) [forward reach with edge: (event: A_turntable_c_on) (guard: A_turntable.Off -> A_drill.Off and (A_turntable.Off and S_clamp.Off)) (assignments: A_turntable := A_turntable.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: (A_drill.Off or A_turntable.Off) and ((A_drill.Off or (A_turntable.On or S_clamp.On)) and (A_drill.On or (A_turntable.Off or S_clamp.Off))) -> (A_drill.Off or A_turntable.Off) and (A_drill.On or (A_turntable.Off or S_clamp.Off)) [forward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_drill.Off or A_turntable.Off) and (A_drill.On or (A_turntable.Off or S_clamp.Off)) -> A_drill.Off or A_turntable.Off [forward reach with edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_drill.Off or A_turntable.Off -> A_drill.Off or (A_turntable.Off or S_clamp.On) [forward reach with edge: (event: A_drill_c_on) (guard: A_drill.Off -> A_drill.Off and S_clamp.On) (assignments: A_drill := A_drill.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: A_drill.Off or (A_turntable.Off or S_clamp.On) -> true [forward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off)
    Edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On)
    Edge: (event: A_drill_c_off) (guard: A_drill.On) (assignments: A_drill := A_drill.Off)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off -> A_drill.Off and S_clamp.On) (assignments: A_drill := A_drill.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: A_turntable.Off -> A_drill.Off and (A_turntable.Off and S_clamp.Off)) (assignments: A_turntable := A_turntable.On)

Controlled system:                     exactly 8 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_drill.Off and (A_turntable.Off and S_clamp.Off)
Initial (controlled system):           A_drill.Off and (A_turntable.Off and S_clamp.Off)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_drill_c_off: guard: A_drill.On -> true [assume A_drill.On].
  Event A_drill_c_on: guard: A_drill.Off and S_clamp.On -> true [assume A_drill.Off and S_clamp.On].
  Event A_turntable_c_off: guard: A_turntable.On -> true [assume A_turntable.On].
  Event A_turntable_c_on: guard: A_drill.Off and (A_turntable.Off and S_clamp.Off) -> true [assume A_drill.Off and (A_turntable.Off and S_clamp.Off)].

Constructing output CIF specification.
Syntesizing supervisor 73.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name       Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_clamp    0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_atdrill  1      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ---------  -----  --------  ----------  ----------  -----------
  Total                                     2      4         8           8           100%

Applying automatic variable ordering:
  Number of hyperedges: 5

  Applying FORCE algorithm:
    Maximum number of iterations: 10

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 2

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_atdrill.Off
Initial   (aut/locs init predicate):     A_clamp.Off
Initial   (auts/locs init predicate):    A_clamp.Off and S_atdrill.Off
Initial   (uncontrolled system):         A_clamp.Off and S_atdrill.Off
Initial   (system, combined init/inv):   A_clamp.Off and S_atdrill.Off

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_atdrill.Off
Marked    (aut/locs marker predicate):   A_clamp.Off
Marked    (auts/locs marker predicate):  A_clamp.Off and S_atdrill.Off
Marked    (uncontrolled system):         A_clamp.Off and S_atdrill.Off
Marked    (system, combined marked/inv): A_clamp.Off and S_atdrill.Off

State/event exclusion requirements:
  Event "A_clamp_c_on" needs:
    S_atdrill.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off)
    Edge: (event: S_atdrill_u_on) (guard: S_atdrill.Off) (assignments: S_atdrill := S_atdrill.On)
    Edge: (event: A_clamp_c_off) (guard: A_clamp.On) (assignments: A_clamp := A_clamp.Off)
    Edge: (event: A_clamp_c_on) (guard: A_clamp.Off) (assignments: A_clamp := A_clamp.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_clamp_c_on) (guard: A_clamp.Off) (assignments: A_clamp := A_clamp.On): guard: A_clamp.Off -> A_clamp.Off and S_atdrill.On [requirement: S_atdrill.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off)
    Edge: (event: S_atdrill_u_on) (guard: S_atdrill.Off) (assignments: S_atdrill := S_atdrill.On)
    Edge: (event: A_clamp_c_off) (guard: A_clamp.On) (assignments: A_clamp := A_clamp.Off)
    Edge: (event: A_clamp_c_on) (guard: A_clamp.Off -> A_clamp.Off and S_atdrill.On) (assignments: A_clamp := A_clamp.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_clamp.Off and S_atdrill.Off [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_clamp.Off and S_atdrill.Off -> A_clamp.Off [backward reach with edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_clamp.Off -> true [backward reach with edge: (event: A_clamp_c_off) (guard: A_clamp.On) (assignments: A_clamp := A_clamp.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_clamp.Off and S_atdrill.Off [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_clamp.Off and S_atdrill.Off -> A_clamp.Off [forward reach with edge: (event: S_atdrill_u_on) (guard: S_atdrill.Off) (assignments: S_atdrill := S_atdrill.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_clamp.Off -> A_clamp.Off or S_atdrill.On [forward reach with edge: (event: A_clamp_c_on) (guard: A_clamp.Off -> A_clamp.Off and S_atdrill.On) (assignments: A_clamp := A_clamp.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_clamp.Off or S_atdrill.On -> true [forward reach with edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off)
    Edge: (event: S_atdrill_u_on) (guard: S_atdrill.Off) (assignments: S_atdrill := S_atdrill.On)
    Edge: (event: A_clamp_c_off) (guard: A_clamp.On) (assignments: A_clamp := A_clamp.Off)
    Edge: (event: A_clamp_c_on) (guard: A_clamp.Off -> A_clamp.Off and S_atdrill.On) (assignments: A_clamp := A_clamp.On)

Controlled system:                     exactly 4 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_clamp.Off and S_atdrill.Off
Initial (controlled system):           A_clamp.Off and S_atdrill.Off
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_clamp_c_off: guard: A_clamp.On -> true [assume A_clamp.On].
  Event A_clamp_c_on: guard: A_clamp.Off and S_atdrill.On -> true [assume A_clamp.Off and S_atdrill.On].

Constructing output CIF specification.
Syntesizing supervisor 76.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name            Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_tester        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   PTimer          1      2 * 2     3 * 2       4 * 2       75%
  3      location pointer  n/a   S_attest        2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_Pinitialized  3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_test_ok       4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_turntable     5      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  Total                                          6      14        26          28          ~93%

Applying automatic variable ordering:
  Number of hyperedges: 23

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_attest.Off
Initial   (aut/locs init predicate):     S_test_ok.Off
Initial   (aut/locs init predicate):     S_turntable.On
Initial   (aut/locs init predicate):     S_Pinitialized.Off
Initial   (aut/locs init predicate):     A_tester.Off
Initial   (aut/locs init predicate):     PTimer.Off
Initial   (auts/locs init predicate):    A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On))
Initial   (uncontrolled system):         A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On))
Initial   (system, combined init/inv):   A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_attest.Off
Marked    (aut/locs marker predicate):   S_test_ok.Off
Marked    (aut/locs marker predicate):   S_turntable.On
Marked    (aut/locs marker predicate):   S_Pinitialized.Off
Marked    (aut/locs marker predicate):   A_tester.Off
Marked    (aut/locs marker predicate):   PTimer.Off
Marked    (auts/locs marker predicate):  A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On))
Marked    (uncontrolled system):         A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On))
Marked    (system, combined marked/inv): A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On))

State/event exclusion requirements:
  Event "A_tester_c_on" needs:
    S_Pinitialized.On
    S_turntable.On
    PTimer.Timeout
    S_attest.On
  Event "A_tester_c_off" needs:
    S_Pinitialized.On
    S_test_ok.On
  Event "PTimer_c_on" needs:
    S_Pinitialized.On
    S_turntable.On
  Event "PTimer_c_reset" needs:
    S_Pinitialized.On
    S_turntable.Off

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off)
    Edge: (event: S_attest_u_on) (guard: S_attest.Off) (assignments: S_attest := S_attest.On)
    Edge: (event: S_test_ok_u_off) (guard: S_test_ok.On) (assignments: S_test_ok := S_test_ok.Off)
    Edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_tester_c_off) (guard: A_tester.On) (assignments: A_tester := A_tester.Off)
    Edge: (event: A_tester_c_on) (guard: A_tester.Off) (assignments: A_tester := A_tester.On)
    Edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "PTimer" (group: 1, domain: 2+3, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_tester_c_off) (guard: A_tester.On) (assignments: A_tester := A_tester.Off): guard: A_tester.On -> A_tester.On and (S_Pinitialized.On and S_test_ok.On) [requirement: S_Pinitialized.On and S_test_ok.On].
Edge (event: A_tester_c_on) (guard: A_tester.Off) (assignments: A_tester := A_tester.On): guard: A_tester.Off -> A_tester.Off and PTimer.Timeout and (S_attest.On and (S_Pinitialized.On and S_turntable.On)) [requirement: PTimer.Timeout and S_attest.On and (S_Pinitialized.On and S_turntable.On)].
Edge (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running): guard: PTimer.Off -> PTimer.Off and (S_Pinitialized.On and S_turntable.On) [requirement: S_Pinitialized.On and S_turntable.On].
Edge (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off): guard: PTimer.Running -> PTimer.Running and (S_Pinitialized.On and S_turntable.Off) [requirement: S_Pinitialized.On and S_turntable.Off].
Edge (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off): guard: PTimer.Timeout -> PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off) [requirement: S_Pinitialized.On and S_turntable.Off].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off)
    Edge: (event: S_attest_u_on) (guard: S_attest.Off) (assignments: S_attest := S_attest.On)
    Edge: (event: S_test_ok_u_off) (guard: S_test_ok.On) (assignments: S_test_ok := S_test_ok.Off)
    Edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_tester_c_off) (guard: A_tester.On -> A_tester.On and (S_Pinitialized.On and S_test_ok.On)) (assignments: A_tester := A_tester.Off)
    Edge: (event: A_tester_c_on) (guard: A_tester.Off -> A_tester.Off and PTimer.Timeout and (S_attest.On and (S_Pinitialized.On and S_turntable.On))) (assignments: A_tester := A_tester.On)
    Edge: (event: PTimer_c_on) (guard: PTimer.Off -> PTimer.Off and (S_Pinitialized.On and S_turntable.On)) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Running -> PTimer.Running and (S_Pinitialized.On and S_turntable.Off)) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Timeout -> PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off)) (assignments: PTimer := PTimer.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On)) -> A_tester.Off and PTimer.Off and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On)) [backward reach with edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_tester.Off and PTimer.Off and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On)) -> A_tester.Off and PTimer.Off and (S_Pinitialized.Off and S_turntable.On) [backward reach with edge: (event: S_test_ok_u_off) (guard: S_test_ok.On) (assignments: S_test_ok := S_test_ok.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_tester.Off and PTimer.Off and (S_Pinitialized.Off and S_turntable.On) -> A_tester.Off and (PTimer.Off and S_Pinitialized.Off) [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_tester.Off and (PTimer.Off and S_Pinitialized.Off) -> A_tester.Off and PTimer.Off [backward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_tester.Off and PTimer.Off -> A_tester.On and PTimer.Off and (S_Pinitialized.On and S_test_ok.On) or A_tester.Off and PTimer.Off [backward reach with edge: (event: A_tester_c_off) (guard: A_tester.On -> A_tester.On and (S_Pinitialized.On and S_test_ok.On)) (assignments: A_tester := A_tester.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_tester.On and PTimer.Off and (S_Pinitialized.On and S_test_ok.On) or A_tester.Off and PTimer.Off -> <bdd 13n 4p> [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Running -> PTimer.Running and (S_Pinitialized.On and S_turntable.Off)) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 4p> -> <bdd 13n 6p> [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Timeout -> PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off)) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 13n 6p> -> A_tester.On and (PTimer.Off and S_Pinitialized.On) or (A_tester.On and PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off) or A_tester.On and PTimer.Running and (S_Pinitialized.On and S_turntable.Off)) or (A_tester.Off and PTimer.Off or (A_tester.Off and PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off) or A_tester.Off and PTimer.Running and (S_Pinitialized.On and S_turntable.Off))) [backward reach with edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_tester.On and (PTimer.Off and S_Pinitialized.On) or (A_tester.On and PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off) or A_tester.On and PTimer.Running and (S_Pinitialized.On and S_turntable.Off)) or (A_tester.Off and PTimer.Off or (A_tester.Off and PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off) or A_tester.Off and PTimer.Running and (S_Pinitialized.On and S_turntable.Off))) -> (A_tester.Off or (PTimer.Running or S_Pinitialized.On)) and (A_tester.Off or (not PTimer.Running or S_Pinitialized.On)) and ((A_tester.On or (not PTimer.Timeout or S_Pinitialized.On)) and (A_tester.On or (not PTimer.Running or S_Pinitialized.On))) [backward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_tester.Off or (PTimer.Running or S_Pinitialized.On)) and (A_tester.Off or (not PTimer.Running or S_Pinitialized.On)) and ((A_tester.On or (not PTimer.Timeout or S_Pinitialized.On)) and (A_tester.On or (not PTimer.Running or S_Pinitialized.On))) -> true [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On)) -> A_tester.Off and PTimer.Off and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On)) [forward reach with edge: (event: S_attest_u_on) (guard: S_attest.Off) (assignments: S_attest := S_attest.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.Off and PTimer.Off and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On)) -> A_tester.Off and PTimer.Off and (S_Pinitialized.Off and S_turntable.On) [forward reach with edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.Off and PTimer.Off and (S_Pinitialized.Off and S_turntable.On) -> A_tester.Off and (PTimer.Off and S_Pinitialized.Off) [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.Off and (PTimer.Off and S_Pinitialized.Off) -> A_tester.Off and PTimer.Off [forward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.Off and PTimer.Off -> A_tester.Off and PTimer.Off or A_tester.Off and PTimer.Running and (S_Pinitialized.On and S_turntable.On) [forward reach with edge: (event: PTimer_c_on) (guard: PTimer.Off -> PTimer.Off and (S_Pinitialized.On and S_turntable.On)) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.Off and PTimer.Off or A_tester.Off and PTimer.Running and (S_Pinitialized.On and S_turntable.On) -> A_tester.Off and PTimer.Off or (A_tester.Off and PTimer.Timeout and (S_Pinitialized.On and S_turntable.On) or A_tester.Off and PTimer.Running and (S_Pinitialized.On and S_turntable.On)) [forward reach with edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_tester.Off and PTimer.Off or (A_tester.Off and PTimer.Timeout and (S_Pinitialized.On and S_turntable.On) or A_tester.Off and PTimer.Running and (S_Pinitialized.On and S_turntable.On)) -> A_tester.Off and ((A_tester.On or (not PTimer.Timeout or S_Pinitialized.On)) and (A_tester.On or (not PTimer.Running or S_Pinitialized.On))) [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.Off and ((A_tester.On or (not PTimer.Timeout or S_Pinitialized.On)) and (A_tester.On or (not PTimer.Running or S_Pinitialized.On))) -> A_tester.Off [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.Off -> A_tester.On and PTimer.Timeout and (S_attest.On and (S_Pinitialized.On and S_turntable.On)) or (A_tester.Off and not PTimer.Running or A_tester.Off and PTimer.Running) [forward reach with edge: (event: A_tester_c_on) (guard: A_tester.Off -> A_tester.Off and PTimer.Timeout and (S_attest.On and (S_Pinitialized.On and S_turntable.On))) (assignments: A_tester := A_tester.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: A_tester.On and PTimer.Timeout and (S_attest.On and (S_Pinitialized.On and S_turntable.On)) or (A_tester.Off and not PTimer.Running or A_tester.Off and PTimer.Running) -> A_tester.On and PTimer.Timeout and (S_Pinitialized.On and S_turntable.On) or (A_tester.Off and not PTimer.Running or A_tester.Off and PTimer.Running) [forward reach with edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.On and PTimer.Timeout and (S_Pinitialized.On and S_turntable.On) or (A_tester.Off and not PTimer.Running or A_tester.Off and PTimer.Running) -> A_tester.On and (PTimer.Timeout and S_Pinitialized.On) or (A_tester.Off and not PTimer.Running or A_tester.Off and PTimer.Running) [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.On and (PTimer.Timeout and S_Pinitialized.On) or (A_tester.Off and not PTimer.Running or A_tester.Off and PTimer.Running) -> (A_tester.Off or not PTimer.Off) and (A_tester.Off or not PTimer.Running) [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_tester.Off or not PTimer.Off) and (A_tester.Off or not PTimer.Running) -> (A_tester.Off or not PTimer.Off or (S_Pinitialized.Off or S_turntable.Off)) and ((A_tester.Off or (not PTimer.Off or S_Pinitialized.On)) and (A_tester.Off or not PTimer.Running)) [forward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Timeout -> PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off)) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: (A_tester.Off or not PTimer.Off or (S_Pinitialized.Off or S_turntable.Off)) and ((A_tester.Off or (not PTimer.Off or S_Pinitialized.On)) and (A_tester.Off or not PTimer.Running)) -> (A_tester.Off or (not PTimer.Off or S_Pinitialized.On)) and (A_tester.Off or not PTimer.Running) [forward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_tester.Off or (not PTimer.Off or S_Pinitialized.On)) and (A_tester.Off or not PTimer.Running) -> A_tester.Off or not PTimer.Running [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.Off or not PTimer.Running -> (A_tester.Off or not PTimer.Running or (S_Pinitialized.Off or S_turntable.On)) and (A_tester.Off or (not PTimer.Running or S_Pinitialized.On)) [forward reach with edge: (event: PTimer_c_on) (guard: PTimer.Off -> PTimer.Off and (S_Pinitialized.On and S_turntable.On)) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: (A_tester.Off or not PTimer.Running or (S_Pinitialized.Off or S_turntable.On)) and (A_tester.Off or (not PTimer.Running or S_Pinitialized.On)) -> A_tester.Off or (not PTimer.Running or S_Pinitialized.On) [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_tester.Off or (not PTimer.Running or S_Pinitialized.On) -> true [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 6.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_tester_c_off) (guard: A_tester.On -> A_tester.On and (S_Pinitialized.On and S_test_ok.On)) (assignments: A_tester := A_tester.Off): guard: A_tester.On and (S_Pinitialized.On and S_test_ok.On) -> A_tester.On and not PTimer.Running and (S_Pinitialized.On and S_test_ok.On) or A_tester.On and PTimer.Running and (S_Pinitialized.On and S_test_ok.On).

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off)
    Edge: (event: S_attest_u_on) (guard: S_attest.Off) (assignments: S_attest := S_attest.On)
    Edge: (event: S_test_ok_u_off) (guard: S_test_ok.On) (assignments: S_test_ok := S_test_ok.Off)
    Edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_tester_c_off) (guard: A_tester.On -> A_tester.On and not PTimer.Running and (S_Pinitialized.On and S_test_ok.On) or A_tester.On and PTimer.Running and (S_Pinitialized.On and S_test_ok.On)) (assignments: A_tester := A_tester.Off)
    Edge: (event: A_tester_c_on) (guard: A_tester.Off -> A_tester.Off and PTimer.Timeout and (S_attest.On and (S_Pinitialized.On and S_turntable.On))) (assignments: A_tester := A_tester.On)
    Edge: (event: PTimer_c_on) (guard: PTimer.Off -> PTimer.Off and (S_Pinitialized.On and S_turntable.On)) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Running -> PTimer.Running and (S_Pinitialized.On and S_turntable.Off)) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Timeout -> PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off)) (assignments: PTimer := PTimer.Off)

Controlled system:                     exactly 96 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On))
Initial (controlled system):           A_tester.Off and (PTimer.Off and S_attest.Off) and (S_Pinitialized.Off and (S_test_ok.Off and S_turntable.On))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_tester_c_off: guard: A_tester.On and not PTimer.Running and (S_Pinitialized.On and S_test_ok.On) or A_tester.On and PTimer.Running and (S_Pinitialized.On and S_test_ok.On) -> true [assume A_tester.On and not PTimer.Running and (S_Pinitialized.On and S_test_ok.On) or A_tester.On and PTimer.Running and (S_Pinitialized.On and S_test_ok.On)].
  Event A_tester_c_on: guard: A_tester.Off and PTimer.Timeout and (S_attest.On and (S_Pinitialized.On and S_turntable.On)) -> true [assume A_tester.Off and PTimer.Timeout and (S_attest.On and (S_Pinitialized.On and S_turntable.On))].
  Event PTimer_c_on: guard: PTimer.Off and (S_Pinitialized.On and S_turntable.On) -> true [assume PTimer.Off and (S_Pinitialized.On and S_turntable.On)].
  Event PTimer_c_reset: guard: PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off) or PTimer.Running and (S_Pinitialized.On and S_turntable.Off) -> true [assume PTimer.Timeout and (S_Pinitialized.On and S_turntable.Off) or PTimer.Running and (S_Pinitialized.On and S_turntable.Off)].

Constructing output CIF specification.
Syntesizing supervisor 83.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name      Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_eject   0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_atexit  1      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------  -----  --------  ----------  ----------  -----------
  Total                                    2      4         8           8           100%

Applying automatic variable ordering:
  Number of hyperedges: 6

  Applying FORCE algorithm:
    Maximum number of iterations: 10

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 2

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_atexit.Off
Initial   (aut/locs init predicate):     A_eject.Off
Initial   (auts/locs init predicate):    A_eject.Off and S_atexit.Off
Initial   (uncontrolled system):         A_eject.Off and S_atexit.Off
Initial   (system, combined init/inv):   A_eject.Off and S_atexit.Off

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_atexit.Off
Marked    (aut/locs marker predicate):   A_eject.Off
Marked    (auts/locs marker predicate):  A_eject.Off and S_atexit.Off
Marked    (uncontrolled system):         A_eject.Off and S_atexit.Off
Marked    (system, combined marked/inv): A_eject.Off and S_atexit.Off

State/event exclusion requirements:
  Event "A_eject_c_on" needs:
    S_atexit.On
  Event "A_eject_c_off" needs:
    S_atexit.Off

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off)
    Edge: (event: S_atexit_u_on) (guard: S_atexit.Off) (assignments: S_atexit := S_atexit.On)
    Edge: (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off): guard: A_eject.On -> A_eject.On and S_atexit.Off [requirement: S_atexit.Off].
Edge (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On): guard: A_eject.Off -> A_eject.Off and S_atexit.On [requirement: S_atexit.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off)
    Edge: (event: S_atexit_u_on) (guard: S_atexit.Off) (assignments: S_atexit := S_atexit.On)
    Edge: (event: A_eject_c_off) (guard: A_eject.On -> A_eject.On and S_atexit.Off) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off -> A_eject.Off and S_atexit.On) (assignments: A_eject := A_eject.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_eject.Off and S_atexit.Off [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_eject.Off and S_atexit.Off -> A_eject.Off [backward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_eject.Off -> A_eject.Off or S_atexit.Off [backward reach with edge: (event: A_eject_c_off) (guard: A_eject.On -> A_eject.On and S_atexit.Off) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: A_eject.Off or S_atexit.Off -> true [backward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_eject.Off and S_atexit.Off [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_eject.Off and S_atexit.Off -> A_eject.Off [forward reach with edge: (event: S_atexit_u_on) (guard: S_atexit.Off) (assignments: S_atexit := S_atexit.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_eject.Off -> A_eject.Off or S_atexit.On [forward reach with edge: (event: A_eject_c_on) (guard: A_eject.Off -> A_eject.Off and S_atexit.On) (assignments: A_eject := A_eject.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_eject.Off or S_atexit.On -> true [forward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off)
    Edge: (event: S_atexit_u_on) (guard: S_atexit.Off) (assignments: S_atexit := S_atexit.On)
    Edge: (event: A_eject_c_off) (guard: A_eject.On -> A_eject.On and S_atexit.Off) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off -> A_eject.Off and S_atexit.On) (assignments: A_eject := A_eject.On)

Controlled system:                     exactly 4 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_eject.Off and S_atexit.Off
Initial (controlled system):           A_eject.Off and S_atexit.Off
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_eject_c_off: guard: A_eject.On and S_atexit.Off -> true [assume A_eject.On and S_atexit.Off].
  Event A_eject_c_on: guard: A_eject.Off and S_atexit.On -> true [assume A_eject.Off and S_atexit.On].

Constructing output CIF specification.
Syntesizing supervisor 86.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name              Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_gate1           0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_gate2           1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_stopperretract  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_inductive       3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_optical         4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_Sinitialized    5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_slidefull       6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   STimer            7      2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  Total                                            8      18        34          36          ~94%

Applying automatic variable ordering:
  Number of hyperedges: 31

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_inductive.Off
Initial   (aut/locs init predicate):     S_optical.Off
Initial   (aut/locs init predicate):     S_slidefull.Off
Initial   (aut/locs init predicate):     S_Sinitialized.Off
Initial   (aut/locs init predicate):     A_gate1.Off
Initial   (aut/locs init predicate):     A_gate2.Off
Initial   (aut/locs init predicate):     A_stopperretract.Off
Initial   (aut/locs init predicate):     STimer.Off
Initial   (auts/locs init predicate):    A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Initial   (uncontrolled system):         A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Initial   (system, combined init/inv):   A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_inductive.Off
Marked    (aut/locs marker predicate):   S_optical.Off
Marked    (aut/locs marker predicate):   S_slidefull.Off
Marked    (aut/locs marker predicate):   S_Sinitialized.Off
Marked    (aut/locs marker predicate):   A_gate1.Off
Marked    (aut/locs marker predicate):   A_gate2.Off
Marked    (aut/locs marker predicate):   A_stopperretract.Off
Marked    (aut/locs marker predicate):   STimer.Off
Marked    (auts/locs marker predicate):  A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Marked    (uncontrolled system):         A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Marked    (system, combined marked/inv): A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))

State/event exclusion requirements:
  Event "A_gate1_c_on" needs:
    S_Sinitialized.On
    S_optical.On
    S_inductive.Off
    STimer.Timeout
    A_stopperretract.Off
  Event "A_gate1_c_off" needs:
    S_Sinitialized.On
    S_slidefull.On
    A_stopperretract.Off
  Event "A_gate2_c_on" needs:
    S_Sinitialized.On
    STimer.Timeout
    A_stopperretract.Off
  Event "A_gate2_c_off" needs:
    S_Sinitialized.On
    S_slidefull.On
    A_stopperretract.Off

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off)
    Edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On)
    Edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off)
    Edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_gate1_c_off) (guard: A_gate1.On) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: A_gate1.Off) (assignments: A_gate1 := A_gate1.On)
    Edge: (event: A_gate2_c_off) (guard: A_gate2.On) (assignments: A_gate2 := A_gate2.Off)
    Edge: (event: A_gate2_c_on) (guard: A_gate2.Off) (assignments: A_gate2 := A_gate2.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On)
    Edge: (event: STimer_c_on) (guard: STimer.Off) (assignments: STimer := STimer.Running)
    Edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout)
    Edge: (event: STimer_c_reset) (guard: STimer.Running) (assignments: STimer := STimer.Off)
    Edge: (event: STimer_c_reset) (guard: STimer.Timeout) (assignments: STimer := STimer.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "STimer" (group: 7, domain: 14+15, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_gate1_c_off) (guard: A_gate1.On) (assignments: A_gate1 := A_gate1.Off): guard: A_gate1.On -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On) [requirement: A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)].
Edge (event: A_gate1_c_on) (guard: A_gate1.Off) (assignments: A_gate1 := A_gate1.On): guard: A_gate1.Off -> A_gate1.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.On and (S_Sinitialized.On and STimer.Timeout)) [requirement: A_stopperretract.Off and S_inductive.Off and (S_optical.On and (S_Sinitialized.On and STimer.Timeout))].
Edge (event: A_gate2_c_off) (guard: A_gate2.On) (assignments: A_gate2 := A_gate2.Off): guard: A_gate2.On -> A_gate2.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On) [requirement: A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)].
Edge (event: A_gate2_c_on) (guard: A_gate2.Off) (assignments: A_gate2 := A_gate2.On): guard: A_gate2.Off -> A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout) [requirement: A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off)
    Edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On)
    Edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off)
    Edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: A_gate1.Off -> A_gate1.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.On and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate1 := A_gate1.On)
    Edge: (event: A_gate2_c_off) (guard: A_gate2.On -> A_gate2.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_gate2 := A_gate2.Off)
    Edge: (event: A_gate2_c_on) (guard: A_gate2.Off -> A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout)) (assignments: A_gate2 := A_gate2.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On)
    Edge: (event: STimer_c_on) (guard: STimer.Off) (assignments: STimer := STimer.Running)
    Edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout)
    Edge: (event: STimer_c_reset) (guard: STimer.Running) (assignments: STimer := STimer.Off)
    Edge: (event: STimer_c_reset) (guard: STimer.Timeout) (assignments: STimer := STimer.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_gate1.Off and (A_gate2.Off and A_stopperretract.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [backward reach with edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.Off and (A_gate2.Off and A_stopperretract.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_gate1.Off and (A_gate2.Off and A_stopperretract.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [backward reach with edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.Off and (A_gate2.Off and A_stopperretract.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and (S_Sinitialized.Off and STimer.Off)) [backward reach with edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and (S_Sinitialized.Off and STimer.Off)) -> A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and STimer.Off) [backward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and STimer.Off) -> A_gate1.On and (A_gate2.Off and A_stopperretract.Off) and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and STimer.Off) [backward reach with edge: (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_gate1 := A_gate1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.On and (A_gate2.Off and A_stopperretract.Off) and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and STimer.Off) -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or (A_gate1.Off and (A_gate2.On and A_stopperretract.Off) and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and STimer.Off)) [backward reach with edge: (event: A_gate2_c_off) (guard: A_gate2.On -> A_gate2.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_gate2 := A_gate2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or (A_gate1.Off and (A_gate2.On and A_stopperretract.Off) and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and STimer.Off)) -> A_gate1.On and S_Sinitialized.On and (S_slidefull.On and STimer.Off) or (A_gate1.Off and A_gate2.On and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_gate1.Off and (A_gate2.Off and STimer.Off)) [backward reach with edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.On and S_Sinitialized.On and (S_slidefull.On and STimer.Off) or (A_gate1.Off and A_gate2.On and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_gate1.Off and (A_gate2.Off and STimer.Off)) -> A_gate1.On and S_Sinitialized.On and (S_slidefull.On and not STimer.Timeout) or (A_gate1.Off and A_gate2.On and (S_Sinitialized.On and (S_slidefull.On and not STimer.Timeout)) or A_gate1.Off and (A_gate2.Off and not STimer.Timeout)) [backward reach with edge: (event: STimer_c_reset) (guard: STimer.Running) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.On and S_Sinitialized.On and (S_slidefull.On and not STimer.Timeout) or (A_gate1.Off and A_gate2.On and (S_Sinitialized.On and (S_slidefull.On and not STimer.Timeout)) or A_gate1.Off and (A_gate2.Off and not STimer.Timeout)) -> (A_gate1.Off or (S_Sinitialized.Off or S_slidefull.On)) and (A_gate1.Off or S_Sinitialized.On) and ((A_gate1.On or A_gate2.Off or (S_Sinitialized.Off or S_slidefull.On)) and (A_gate1.On or (A_gate2.Off or S_Sinitialized.On))) [backward reach with edge: (event: STimer_c_reset) (guard: STimer.Timeout) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: (A_gate1.Off or (S_Sinitialized.Off or S_slidefull.On)) and (A_gate1.Off or S_Sinitialized.On) and ((A_gate1.On or A_gate2.Off or (S_Sinitialized.Off or S_slidefull.On)) and (A_gate1.On or (A_gate2.Off or S_Sinitialized.On))) -> (A_gate1.Off or S_Sinitialized.On) and (A_gate1.On or (A_gate2.Off or S_Sinitialized.On)) [backward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_gate1.Off or S_Sinitialized.On) and (A_gate1.On or (A_gate2.Off or S_Sinitialized.On)) -> true [backward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_gate1.Off and (A_gate2.Off and A_stopperretract.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [forward reach with edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and (A_gate2.Off and A_stopperretract.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_gate1.Off and (A_gate2.Off and A_stopperretract.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [forward reach with edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and (A_gate2.Off and A_stopperretract.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and (S_Sinitialized.Off and STimer.Off)) [forward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and (S_Sinitialized.Off and STimer.Off)) -> A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and STimer.Off) [forward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and STimer.Off) -> A_gate1.Off and (A_gate2.Off and STimer.Off) [forward reach with edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and (A_gate2.Off and STimer.Off) -> A_gate1.Off and (A_gate2.Off and not STimer.Timeout) [forward reach with edge: (event: STimer_c_on) (guard: STimer.Off) (assignments: STimer := STimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and (A_gate2.Off and not STimer.Timeout) -> A_gate1.Off and (A_gate1.On or A_gate2.Off) [forward reach with edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_gate1.Off and (A_gate1.On or A_gate2.Off) -> <bdd 11n 3p> [forward reach with edge: (event: A_gate1_c_on) (guard: A_gate1.Off -> A_gate1.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.On and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate1 := A_gate1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 3p> -> <bdd 11n 4p> [forward reach with edge: (event: A_gate2_c_on) (guard: A_gate2.Off -> A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout)) (assignments: A_gate2 := A_gate2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 4p> -> A_gate1.On and S_inductive.Off and (S_optical.On and (S_Sinitialized.On and STimer.Timeout)) or A_gate1.Off and A_gate2.On and (S_Sinitialized.On and STimer.Timeout) or (A_gate1.Off and (A_gate2.Off and not STimer.Running) or A_gate1.Off and (A_gate2.Off and STimer.Running)) [forward reach with edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.On and S_inductive.Off and (S_optical.On and (S_Sinitialized.On and STimer.Timeout)) or A_gate1.Off and A_gate2.On and (S_Sinitialized.On and STimer.Timeout) or (A_gate1.Off and (A_gate2.Off and not STimer.Running) or A_gate1.Off and (A_gate2.Off and STimer.Running)) -> A_gate1.On and S_inductive.Off and (S_optical.On and (S_Sinitialized.On and not STimer.Running)) or A_gate1.Off and A_gate2.On and (S_Sinitialized.On and not STimer.Running) or (A_gate1.Off and (A_gate2.Off and not STimer.Running) or A_gate1.Off and (A_gate2.Off and STimer.Running)) [forward reach with edge: (event: STimer_c_reset) (guard: STimer.Timeout) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: A_gate1.On and S_inductive.Off and (S_optical.On and (S_Sinitialized.On and not STimer.Running)) or A_gate1.Off and A_gate2.On and (S_Sinitialized.On and not STimer.Running) or (A_gate1.Off and (A_gate2.Off and not STimer.Running) or A_gate1.Off and (A_gate2.Off and STimer.Running)) -> A_gate1.On and S_optical.On and (S_Sinitialized.On and not STimer.Running) or A_gate1.Off and A_gate2.On and (S_Sinitialized.On and not STimer.Running) or (A_gate1.Off and (A_gate2.Off and not STimer.Running) or A_gate1.Off and (A_gate2.Off and STimer.Running)) [forward reach with edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.On and S_optical.On and (S_Sinitialized.On and not STimer.Running) or A_gate1.Off and A_gate2.On and (S_Sinitialized.On and not STimer.Running) or (A_gate1.Off and (A_gate2.Off and not STimer.Running) or A_gate1.Off and (A_gate2.Off and STimer.Running)) -> (A_gate1.Off or (S_Sinitialized.Off or not STimer.Running)) and (A_gate1.Off or S_Sinitialized.On) and ((A_gate1.On or A_gate2.Off or (S_Sinitialized.Off or not STimer.Running)) and (A_gate1.On or (A_gate2.Off or S_Sinitialized.On))) [forward reach with edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_gate1.Off or (S_Sinitialized.Off or not STimer.Running)) and (A_gate1.Off or S_Sinitialized.On) and ((A_gate1.On or A_gate2.Off or (S_Sinitialized.Off or not STimer.Running)) and (A_gate1.On or (A_gate2.Off or S_Sinitialized.On))) -> (A_gate1.Off or not STimer.Running) and (A_gate1.On or (A_gate2.Off or not STimer.Running)) [forward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_gate1.Off or not STimer.Running) and (A_gate1.On or (A_gate2.Off or not STimer.Running)) -> true [forward reach with edge: (event: STimer_c_on) (guard: STimer.Off) (assignments: STimer := STimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_gate1 := A_gate1.Off): guard: A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On) -> (A_gate1.Off or A_stopperretract.Off) and (A_gate1.Off or A_stopperretract.On or (S_Sinitialized.Off or S_slidefull.On)) and ((A_gate1.Off or (A_stopperretract.On or S_Sinitialized.On)) and A_gate1.On).
Edge (event: A_gate2_c_off) (guard: A_gate2.On -> A_gate2.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_gate2 := A_gate2.Off): guard: A_gate2.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On) -> (A_gate2.Off or A_stopperretract.Off) and (A_gate2.Off or A_stopperretract.On or (S_Sinitialized.Off or S_slidefull.On)) and ((A_gate2.Off or (A_stopperretract.On or S_Sinitialized.On)) and A_gate2.On).
Edge (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off): guard: A_stopperretract.On -> A_stopperretract.On.
Edge (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On): guard: A_stopperretract.Off -> A_stopperretract.Off.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off)
    Edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On)
    Edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off)
    Edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_gate1_c_off) (guard: A_gate1.On -> (A_gate1.Off or A_stopperretract.Off) and (A_gate1.Off or A_stopperretract.On or (S_Sinitialized.Off or S_slidefull.On)) and ((A_gate1.Off or (A_stopperretract.On or S_Sinitialized.On)) and A_gate1.On)) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: A_gate1.Off -> A_gate1.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.On and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate1 := A_gate1.On)
    Edge: (event: A_gate2_c_off) (guard: A_gate2.On -> (A_gate2.Off or A_stopperretract.Off) and (A_gate2.Off or A_stopperretract.On or (S_Sinitialized.Off or S_slidefull.On)) and ((A_gate2.Off or (A_stopperretract.On or S_Sinitialized.On)) and A_gate2.On)) (assignments: A_gate2 := A_gate2.Off)
    Edge: (event: A_gate2_c_on) (guard: A_gate2.Off -> A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout)) (assignments: A_gate2 := A_gate2.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On -> A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off -> A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On)
    Edge: (event: STimer_c_on) (guard: STimer.Off) (assignments: STimer := STimer.Running)
    Edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout)
    Edge: (event: STimer_c_reset) (guard: STimer.Running) (assignments: STimer := STimer.Off)
    Edge: (event: STimer_c_reset) (guard: STimer.Timeout) (assignments: STimer := STimer.Off)

Controlled system:                     exactly 384 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Initial (controlled system):           A_gate1.Off and A_gate2.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.Off and S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_gate1_c_off: guard: (A_gate1.Off or A_stopperretract.Off) and (A_gate1.Off or A_stopperretract.On or (S_Sinitialized.Off or S_slidefull.On)) and ((A_gate1.Off or (A_stopperretract.On or S_Sinitialized.On)) and A_gate1.On) -> true [assume (A_gate1.Off or A_stopperretract.Off) and (A_gate1.Off or A_stopperretract.On or (S_Sinitialized.Off or S_slidefull.On)) and ((A_gate1.Off or (A_stopperretract.On or S_Sinitialized.On)) and A_gate1.On)].
  Event A_gate1_c_on: guard: A_gate1.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.On and (S_Sinitialized.On and STimer.Timeout)) -> true [assume A_gate1.Off and (A_stopperretract.Off and S_inductive.Off) and (S_optical.On and (S_Sinitialized.On and STimer.Timeout))].
  Event A_gate2_c_off: guard: (A_gate2.Off or A_stopperretract.Off) and (A_gate2.Off or A_stopperretract.On or (S_Sinitialized.Off or S_slidefull.On)) and ((A_gate2.Off or (A_stopperretract.On or S_Sinitialized.On)) and A_gate2.On) -> true [assume (A_gate2.Off or A_stopperretract.Off) and (A_gate2.Off or A_stopperretract.On or (S_Sinitialized.Off or S_slidefull.On)) and ((A_gate2.Off or (A_stopperretract.On or S_Sinitialized.On)) and A_gate2.On)].
  Event A_gate2_c_on: guard: A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout) -> true [assume A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout)].
  Event A_stopperretract_c_off: guard: A_stopperretract.On -> true [assume A_stopperretract.On].
  Event A_stopperretract_c_on: guard: A_stopperretract.Off -> true [assume A_stopperretract.Off].
  Event STimer_c_on: guard: STimer.Off -> true [assume STimer.Off].
  Event STimer_c_reset: guard: not STimer.Off -> true [assume not STimer.Off].

Constructing output CIF specification.
Syntesizing supervisor 87.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name              Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_conveyer        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_stopperretract  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_product         2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_Sinitialized    3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_slidefull       4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   STimer            5      2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  Total                                            6      14        26          28          ~93%

Applying automatic variable ordering:
  Number of hyperedges: 24

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [iteration 1]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    0 (total)                 0.00 (avg/edge) [before]
    Total span:                    0 (total)                 0.00 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_product.Off
Initial   (aut/locs init predicate):     S_slidefull.Off
Initial   (aut/locs init predicate):     S_Sinitialized.Off
Initial   (aut/locs init predicate):     A_conveyer.Off
Initial   (aut/locs init predicate):     A_stopperretract.Off
Initial   (aut/locs init predicate):     STimer.Off
Initial   (auts/locs init predicate):    A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Initial   (uncontrolled system):         A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Initial   (system, combined init/inv):   A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_product.Off
Marked    (aut/locs marker predicate):   S_slidefull.Off
Marked    (aut/locs marker predicate):   S_Sinitialized.Off
Marked    (aut/locs marker predicate):   A_conveyer.Off
Marked    (aut/locs marker predicate):   A_stopperretract.Off
Marked    (aut/locs marker predicate):   STimer.Off
Marked    (auts/locs marker predicate):  A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Marked    (uncontrolled system):         A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Marked    (system, combined marked/inv): A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))

State/event exclusion requirements:
  Event "A_conveyer_c_on" needs:
    S_Sinitialized.On
    S_product.On
  Event "A_conveyer_c_off" needs:
    S_Sinitialized.On
    S_slidefull.On
  Event "A_stopperretract_c_on" needs:
    S_Sinitialized.On
    STimer.Timeout
    S_slidefull.Off
  Event "A_stopperretract_c_off" needs:
    S_Sinitialized.On
    S_slidefull.On
  Event "STimer_c_on" needs:
    S_product.On
  Event "STimer_c_reset" needs:
    S_slidefull.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off)
    Edge: (event: S_product_u_on) (guard: S_product.Off) (assignments: S_product := S_product.On)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_conveyer_c_off) (guard: A_conveyer.On) (assignments: A_conveyer := A_conveyer.Off)
    Edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off) (assignments: A_conveyer := A_conveyer.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On)
    Edge: (event: STimer_c_on) (guard: STimer.Off) (assignments: STimer := STimer.Running)
    Edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout)
    Edge: (event: STimer_c_reset) (guard: STimer.Running) (assignments: STimer := STimer.Off)
    Edge: (event: STimer_c_reset) (guard: STimer.Timeout) (assignments: STimer := STimer.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "STimer" (group: 5, domain: 10+11, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_conveyer_c_off) (guard: A_conveyer.On) (assignments: A_conveyer := A_conveyer.Off): guard: A_conveyer.On -> A_conveyer.On and (S_Sinitialized.On and S_slidefull.On) [requirement: S_Sinitialized.On and S_slidefull.On].
Edge (event: A_conveyer_c_on) (guard: A_conveyer.Off) (assignments: A_conveyer := A_conveyer.On): guard: A_conveyer.Off -> A_conveyer.Off and (S_product.On and S_Sinitialized.On) [requirement: S_product.On and S_Sinitialized.On].
Edge (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off): guard: A_stopperretract.On -> A_stopperretract.On and (S_Sinitialized.On and S_slidefull.On) [requirement: S_Sinitialized.On and S_slidefull.On].
Edge (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On): guard: A_stopperretract.Off -> A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout) [requirement: S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout)].
Edge (event: STimer_c_on) (guard: STimer.Off) (assignments: STimer := STimer.Running): guard: STimer.Off -> S_product.On and STimer.Off [requirement: S_product.On].
Edge (event: STimer_c_reset) (guard: STimer.Running) (assignments: STimer := STimer.Off): guard: STimer.Running -> S_slidefull.On and STimer.Running [requirement: S_slidefull.On].
Edge (event: STimer_c_reset) (guard: STimer.Timeout) (assignments: STimer := STimer.Off): guard: STimer.Timeout -> S_slidefull.On and STimer.Timeout [requirement: S_slidefull.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off)
    Edge: (event: S_product_u_on) (guard: S_product.Off) (assignments: S_product := S_product.On)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_conveyer_c_off) (guard: A_conveyer.On -> A_conveyer.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_conveyer := A_conveyer.Off)
    Edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off -> A_conveyer.Off and (S_product.On and S_Sinitialized.On)) (assignments: A_conveyer := A_conveyer.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On -> A_stopperretract.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off -> A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout)) (assignments: A_stopperretract := A_stopperretract.On)
    Edge: (event: STimer_c_on) (guard: STimer.Off -> S_product.On and STimer.Off) (assignments: STimer := STimer.Running)
    Edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout)
    Edge: (event: STimer_c_reset) (guard: STimer.Running -> S_slidefull.On and STimer.Running) (assignments: STimer := STimer.Off)
    Edge: (event: STimer_c_reset) (guard: STimer.Timeout -> S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_conveyer.Off and A_stopperretract.Off and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [backward reach with edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_conveyer.Off and A_stopperretract.Off and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_conveyer.Off and A_stopperretract.Off and (S_Sinitialized.Off and STimer.Off) [backward reach with edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_conveyer.Off and A_stopperretract.Off and (S_Sinitialized.Off and STimer.Off) -> A_conveyer.Off and (A_stopperretract.Off and STimer.Off) [backward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_conveyer.Off and (A_stopperretract.Off and STimer.Off) -> A_conveyer.On and A_stopperretract.Off and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_conveyer.Off and (A_stopperretract.Off and STimer.Off) [backward reach with edge: (event: A_conveyer_c_off) (guard: A_conveyer.On -> A_conveyer.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_conveyer := A_conveyer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_conveyer.On and A_stopperretract.Off and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_conveyer.Off and (A_stopperretract.Off and STimer.Off) -> A_conveyer.On and S_Sinitialized.On and (S_slidefull.On and STimer.Off) or (A_conveyer.Off and A_stopperretract.On and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_conveyer.Off and (A_stopperretract.Off and STimer.Off)) [backward reach with edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On -> A_stopperretract.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_stopperretract := A_stopperretract.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_conveyer.On and S_Sinitialized.On and (S_slidefull.On and STimer.Off) or (A_conveyer.Off and A_stopperretract.On and (S_Sinitialized.On and (S_slidefull.On and STimer.Off)) or A_conveyer.Off and (A_stopperretract.Off and STimer.Off)) -> A_conveyer.On and S_Sinitialized.On and (S_slidefull.On and not STimer.Timeout) or A_conveyer.Off and A_stopperretract.On and (S_Sinitialized.On and (S_slidefull.On and not STimer.Timeout)) or (A_conveyer.Off and A_stopperretract.Off and (S_slidefull.On and not STimer.Timeout) or A_conveyer.Off and A_stopperretract.Off and (S_slidefull.Off and STimer.Off)) [backward reach with edge: (event: STimer_c_reset) (guard: STimer.Running -> S_slidefull.On and STimer.Running) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_conveyer.On and S_Sinitialized.On and (S_slidefull.On and not STimer.Timeout) or A_conveyer.Off and A_stopperretract.On and (S_Sinitialized.On and (S_slidefull.On and not STimer.Timeout)) or (A_conveyer.Off and A_stopperretract.Off and (S_slidefull.On and not STimer.Timeout) or A_conveyer.Off and A_stopperretract.Off and (S_slidefull.Off and STimer.Off)) -> (A_conveyer.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_conveyer.Off or S_Sinitialized.On) and (A_conveyer.On or A_stopperretract.Off or (S_Sinitialized.Off or S_slidefull.On))) and ((A_conveyer.On or (A_stopperretract.Off or S_Sinitialized.On)) and ((A_conveyer.On or A_stopperretract.On or (S_slidefull.On or not STimer.Timeout)) and (A_conveyer.On or A_stopperretract.On or (S_slidefull.On or not STimer.Running)))) [backward reach with edge: (event: STimer_c_reset) (guard: STimer.Timeout -> S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: (A_conveyer.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_conveyer.Off or S_Sinitialized.On) and (A_conveyer.On or A_stopperretract.Off or (S_Sinitialized.Off or S_slidefull.On))) and ((A_conveyer.On or (A_stopperretract.Off or S_Sinitialized.On)) and ((A_conveyer.On or A_stopperretract.On or (S_slidefull.On or not STimer.Timeout)) and (A_conveyer.On or A_stopperretract.On or (S_slidefull.On or not STimer.Running)))) -> (A_conveyer.Off or S_Sinitialized.On) and (A_conveyer.On or (A_stopperretract.Off or S_Sinitialized.On)) [backward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (A_conveyer.Off or S_Sinitialized.On) and (A_conveyer.On or (A_stopperretract.Off or S_Sinitialized.On)) -> true [backward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_conveyer.Off and A_stopperretract.Off and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) [forward reach with edge: (event: S_product_u_on) (guard: S_product.Off) (assignments: S_product := S_product.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_conveyer.Off and A_stopperretract.Off and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off)) -> A_conveyer.Off and A_stopperretract.Off and (S_Sinitialized.Off and STimer.Off) [forward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_conveyer.Off and A_stopperretract.Off and (S_Sinitialized.Off and STimer.Off) -> A_conveyer.Off and (A_stopperretract.Off and STimer.Off) [forward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_conveyer.Off and (A_stopperretract.Off and STimer.Off) -> A_conveyer.On and A_stopperretract.Off and (S_product.On and (S_Sinitialized.On and STimer.Off)) or A_conveyer.Off and (A_stopperretract.Off and STimer.Off) [forward reach with edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off -> A_conveyer.Off and (S_product.On and S_Sinitialized.On)) (assignments: A_conveyer := A_conveyer.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_conveyer.On and A_stopperretract.Off and (S_product.On and (S_Sinitialized.On and STimer.Off)) or A_conveyer.Off and (A_stopperretract.Off and STimer.Off) -> A_conveyer.On and A_stopperretract.Off and (S_product.On and (S_Sinitialized.On and not STimer.Timeout)) or (A_conveyer.Off and A_stopperretract.Off and (S_product.On and not STimer.Timeout) or A_conveyer.Off and A_stopperretract.Off and (S_product.Off and STimer.Off)) [forward reach with edge: (event: STimer_c_on) (guard: STimer.Off -> S_product.On and STimer.Off) (assignments: STimer := STimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_conveyer.On and A_stopperretract.Off and (S_product.On and (S_Sinitialized.On and not STimer.Timeout)) or (A_conveyer.Off and A_stopperretract.Off and (S_product.On and not STimer.Timeout) or A_conveyer.Off and A_stopperretract.Off and (S_product.Off and STimer.Off)) -> (A_conveyer.Off or A_stopperretract.Off) and ((A_conveyer.Off or A_stopperretract.On or (S_product.Off or S_Sinitialized.On)) and (A_conveyer.Off or (A_stopperretract.On or S_product.On))) and ((A_conveyer.On or A_stopperretract.Off) and ((A_conveyer.On or A_stopperretract.On or (S_product.On or not STimer.Timeout)) and (A_conveyer.On or A_stopperretract.On or (S_product.On or not STimer.Running)))) [forward reach with edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: (A_conveyer.Off or A_stopperretract.Off) and ((A_conveyer.Off or A_stopperretract.On or (S_product.Off or S_Sinitialized.On)) and (A_conveyer.Off or (A_stopperretract.On or S_product.On))) and ((A_conveyer.On or A_stopperretract.Off) and ((A_conveyer.On or A_stopperretract.On or (S_product.On or not STimer.Timeout)) and (A_conveyer.On or A_stopperretract.On or (S_product.On or not STimer.Running)))) -> (A_conveyer.Off or A_stopperretract.Off) and ((A_conveyer.Off or (A_stopperretract.On or S_Sinitialized.On)) and (A_conveyer.On or A_stopperretract.Off)) [forward reach with edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_conveyer.Off or A_stopperretract.Off) and ((A_conveyer.Off or (A_stopperretract.On or S_Sinitialized.On)) and (A_conveyer.On or A_stopperretract.Off)) -> A_stopperretract.Off [forward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_stopperretract.Off -> A_stopperretract.On and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout) or (A_stopperretract.Off and not STimer.Running or A_stopperretract.Off and STimer.Running) [forward reach with edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off -> A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout)) (assignments: A_stopperretract := A_stopperretract.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: A_stopperretract.On and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout) or (A_stopperretract.Off and not STimer.Running or A_stopperretract.Off and STimer.Running) -> A_stopperretract.On and (S_Sinitialized.On and STimer.Timeout) or (A_stopperretract.Off and not STimer.Running or A_stopperretract.Off and STimer.Running) [forward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_stopperretract.On and (S_Sinitialized.On and STimer.Timeout) or (A_stopperretract.Off and not STimer.Running or A_stopperretract.Off and STimer.Running) -> (A_stopperretract.Off or not STimer.Off) and (A_stopperretract.Off or not STimer.Running) [forward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_stopperretract.Off or not STimer.Off) and (A_stopperretract.Off or not STimer.Running) -> (A_stopperretract.Off or (S_slidefull.Off or not STimer.Running)) and ((A_stopperretract.Off or (S_slidefull.On or not STimer.Off)) and (A_stopperretract.Off or (S_slidefull.On or not STimer.Running))) [forward reach with edge: (event: STimer_c_reset) (guard: STimer.Timeout -> S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: (A_stopperretract.Off or (S_slidefull.Off or not STimer.Running)) and ((A_stopperretract.Off or (S_slidefull.On or not STimer.Off)) and (A_stopperretract.Off or (S_slidefull.On or not STimer.Running))) -> A_stopperretract.Off or not STimer.Running [forward reach with edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_stopperretract.Off or not STimer.Running -> A_stopperretract.Off or (S_product.On or not STimer.Running) [forward reach with edge: (event: STimer_c_on) (guard: STimer.Off -> S_product.On and STimer.Off) (assignments: STimer := STimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: A_stopperretract.Off or (S_product.On or not STimer.Running) -> true [forward reach with edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 6.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_conveyer_c_off) (guard: A_conveyer.On -> A_conveyer.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_conveyer := A_conveyer.Off): guard: A_conveyer.On and (S_Sinitialized.On and S_slidefull.On) -> (A_conveyer.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_conveyer.Off or S_Sinitialized.On) and A_conveyer.On).
Edge (event: A_conveyer_c_on) (guard: A_conveyer.Off -> A_conveyer.Off and (S_product.On and S_Sinitialized.On)) (assignments: A_conveyer := A_conveyer.On): guard: A_conveyer.Off and (S_product.On and S_Sinitialized.On) -> A_conveyer.Off and ((A_conveyer.On or (S_product.Off or S_Sinitialized.On)) and (A_conveyer.On or S_product.On)).
Edge (event: A_stopperretract_c_off) (guard: A_stopperretract.On -> A_stopperretract.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_stopperretract := A_stopperretract.Off): guard: A_stopperretract.On and (S_Sinitialized.On and S_slidefull.On) -> (A_stopperretract.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_stopperretract.Off or S_Sinitialized.On) and A_stopperretract.On).

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off)
    Edge: (event: S_product_u_on) (guard: S_product.Off) (assignments: S_product := S_product.On)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_conveyer_c_off) (guard: A_conveyer.On -> (A_conveyer.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_conveyer.Off or S_Sinitialized.On) and A_conveyer.On)) (assignments: A_conveyer := A_conveyer.Off)
    Edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off -> A_conveyer.Off and ((A_conveyer.On or (S_product.Off or S_Sinitialized.On)) and (A_conveyer.On or S_product.On))) (assignments: A_conveyer := A_conveyer.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On -> (A_stopperretract.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_stopperretract.Off or S_Sinitialized.On) and A_stopperretract.On)) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off -> A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout)) (assignments: A_stopperretract := A_stopperretract.On)
    Edge: (event: STimer_c_on) (guard: STimer.Off -> S_product.On and STimer.Off) (assignments: STimer := STimer.Running)
    Edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout)
    Edge: (event: STimer_c_reset) (guard: STimer.Running -> S_slidefull.On and STimer.Running) (assignments: STimer := STimer.Off)
    Edge: (event: STimer_c_reset) (guard: STimer.Timeout -> S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off)

Controlled system:                     exactly 96 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Initial (controlled system):           A_conveyer.Off and (A_stopperretract.Off and S_product.Off) and (S_Sinitialized.Off and (S_slidefull.Off and STimer.Off))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_conveyer_c_off: guard: (A_conveyer.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_conveyer.Off or S_Sinitialized.On) and A_conveyer.On) -> true [assume (A_conveyer.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_conveyer.Off or S_Sinitialized.On) and A_conveyer.On)].
  Event A_conveyer_c_on: guard: A_conveyer.Off and ((A_conveyer.On or (S_product.Off or S_Sinitialized.On)) and (A_conveyer.On or S_product.On)) -> true [assume A_conveyer.Off and ((A_conveyer.On or (S_product.Off or S_Sinitialized.On)) and (A_conveyer.On or S_product.On))].
  Event A_stopperretract_c_off: guard: (A_stopperretract.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_stopperretract.Off or S_Sinitialized.On) and A_stopperretract.On) -> true [assume (A_stopperretract.Off or (S_Sinitialized.Off or S_slidefull.On)) and ((A_stopperretract.Off or S_Sinitialized.On) and A_stopperretract.On)].
  Event A_stopperretract_c_on: guard: A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout) -> true [assume A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout)].
  Event STimer_c_on: guard: S_product.On and STimer.Off -> true [assume S_product.On and STimer.Off].
  Event STimer_c_reset: guard: (S_slidefull.Off or not STimer.Off) and S_slidefull.On -> true [assume (S_slidefull.Off or not STimer.Off) and S_slidefull.On].

Constructing output CIF specification.
Syntesizing supervisor 94.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name            Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_gate1         0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_gate1_closed  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_gate1_opened  2      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  Total                                          3      6         12          12          100%

Applying automatic variable ordering:
  Number of hyperedges: 8

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    2 (total)                 0.25 (avg/edge) [before]
    Total span:                    2 (total)                 0.25 (avg/edge) [iteration 1]
    Total span:                    2 (total)                 0.25 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 3

    Total span:                    2 (total)                 0.25 (avg/edge) [before]
    Total span:                    2 (total)                 0.25 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_gate1_opened.On
Initial   (aut/locs init predicate):     S_gate1_closed.Off
Initial   (aut/locs init predicate):     A_gate1.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)
Initial   (uncontrolled system):         A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)
Initial   (system, combined init/inv):   A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_gate1_opened.On
Marked    (aut/locs marker predicate):   S_gate1_closed.Off
Marked    (aut/locs marker predicate):   A_gate1.Off
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)
Marked    (uncontrolled system):         A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)
Marked    (system, combined marked/inv): A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)

State/event exclusion requirements:
  Event "A_gate1_c_on" needs:
    S_gate1_opened.On
  Event "A_gate1_c_off" needs:
    S_gate1_closed.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off)
    Edge: (event: S_gate1_opened_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_opened := S_gate1_opened.On)
    Edge: (event: S_gate1_closed_u_off) (guard: S_gate1_closed.On) (assignments: S_gate1_closed := S_gate1_closed.Off)
    Edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On)
    Edge: (event: A_gate1_c_off) (guard: A_gate1.On) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: A_gate1.Off) (assignments: A_gate1 := A_gate1.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_gate1_c_off) (guard: A_gate1.On) (assignments: A_gate1 := A_gate1.Off): guard: A_gate1.On -> A_gate1.On and S_gate1_closed.On [requirement: S_gate1_closed.On].
Edge (event: A_gate1_c_on) (guard: A_gate1.Off) (assignments: A_gate1 := A_gate1.On): guard: A_gate1.Off -> A_gate1.Off and S_gate1_opened.On [requirement: S_gate1_opened.On].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off)
    Edge: (event: S_gate1_opened_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_opened := S_gate1_opened.On)
    Edge: (event: S_gate1_closed_u_off) (guard: S_gate1_closed.On) (assignments: S_gate1_closed := S_gate1_closed.Off)
    Edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On)
    Edge: (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and S_gate1_closed.On) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: A_gate1.Off -> A_gate1.Off and S_gate1_opened.On) (assignments: A_gate1 := A_gate1.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On) -> A_gate1.Off and S_gate1_closed.Off [backward reach with edge: (event: S_gate1_opened_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_opened := S_gate1_opened.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.Off and S_gate1_closed.Off -> A_gate1.Off [backward reach with edge: (event: S_gate1_closed_u_off) (guard: S_gate1_closed.On) (assignments: S_gate1_closed := S_gate1_closed.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.Off -> A_gate1.Off or S_gate1_closed.On [backward reach with edge: (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and S_gate1_closed.On) (assignments: A_gate1 := A_gate1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: A_gate1.Off or S_gate1_closed.On -> A_gate1.Off or (S_gate1_closed.On or S_gate1_opened.Off) [backward reach with edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: A_gate1.Off or (S_gate1_closed.On or S_gate1_opened.Off) -> true [backward reach with edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On) -> A_gate1.Off and S_gate1_closed.Off [forward reach with edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and S_gate1_closed.Off -> A_gate1.Off and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off)) [forward reach with edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off)) -> (A_gate1.Off or S_gate1_closed.Off) and ((A_gate1.Off or (S_gate1_closed.On or S_gate1_opened.On)) and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off))) [forward reach with edge: (event: A_gate1_c_on) (guard: A_gate1.Off -> A_gate1.Off and S_gate1_opened.On) (assignments: A_gate1 := A_gate1.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: (A_gate1.Off or S_gate1_closed.Off) and ((A_gate1.Off or (S_gate1_closed.On or S_gate1_opened.On)) and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off))) -> (A_gate1.Off or S_gate1_closed.Off) and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off)) [forward reach with edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_gate1.Off or S_gate1_closed.Off) and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off)) -> S_gate1_closed.Off or S_gate1_opened.Off [forward reach with edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: S_gate1_closed.Off or S_gate1_opened.Off [fixed point].
Controlled behavior: true -> S_gate1_closed.Off or S_gate1_opened.Off.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On) -> A_gate1.Off and S_gate1_closed.Off [backward reach with edge: (event: S_gate1_opened_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_opened := S_gate1_opened.On), restricted to current/previous controlled-behavior predicate: S_gate1_closed.Off or S_gate1_opened.Off]
Backward controlled-behavior: A_gate1.Off and S_gate1_closed.Off -> A_gate1.Off and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off)) [backward reach with edge: (event: S_gate1_closed_u_off) (guard: S_gate1_closed.On) (assignments: S_gate1_closed := S_gate1_closed.Off), restricted to current/previous controlled-behavior predicate: S_gate1_closed.Off or S_gate1_opened.Off]
Backward controlled-behavior: A_gate1.Off and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off)) -> (A_gate1.Off or (S_gate1_closed.Off or S_gate1_opened.Off)) and ((A_gate1.Off or S_gate1_closed.On) and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off))) [backward reach with edge: (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and S_gate1_closed.On) (assignments: A_gate1 := A_gate1.Off), restricted to current/previous controlled-behavior predicate: S_gate1_closed.Off or S_gate1_opened.Off]
Backward reachability: iteration 2.
Backward controlled-behavior: (A_gate1.Off or (S_gate1_closed.Off or S_gate1_opened.Off)) and ((A_gate1.Off or S_gate1_closed.On) and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off))) -> (A_gate1.Off or S_gate1_opened.Off) and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off)) [backward reach with edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On), restricted to current/previous controlled-behavior predicate: S_gate1_closed.Off or S_gate1_opened.Off]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_gate1.Off or S_gate1_opened.Off) and (A_gate1.On or (S_gate1_closed.Off or S_gate1_opened.Off)) -> S_gate1_closed.Off or S_gate1_opened.Off [backward reach with edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off), restricted to current/previous controlled-behavior predicate: S_gate1_closed.Off or S_gate1_opened.Off]
Backward reachability: iteration 4.
Backward controlled-behavior: S_gate1_closed.Off or S_gate1_opened.Off [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: S_gate1_closed.On and S_gate1_opened.On [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and S_gate1_closed.On) (assignments: A_gate1 := A_gate1.Off): guard: A_gate1.On and S_gate1_closed.On -> A_gate1.On and (S_gate1_closed.On and S_gate1_opened.Off).
Edge (event: A_gate1_c_on) (guard: A_gate1.Off -> A_gate1.Off and S_gate1_opened.On) (assignments: A_gate1 := A_gate1.On): guard: A_gate1.Off and S_gate1_opened.On -> A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On).

Final synthesis result:
  State: (controlled-behavior: S_gate1_closed.Off or S_gate1_opened.Off)
    Edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off)
    Edge: (event: S_gate1_opened_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_opened := S_gate1_opened.On)
    Edge: (event: S_gate1_closed_u_off) (guard: S_gate1_closed.On) (assignments: S_gate1_closed := S_gate1_closed.Off)
    Edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On)
    Edge: (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and (S_gate1_closed.On and S_gate1_opened.Off)) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: A_gate1.Off -> A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)) (assignments: A_gate1 := A_gate1.On)

Controlled system:                     exactly 6 states.

Initial (synthesis result):            S_gate1_closed.Off or S_gate1_opened.Off
Initial (uncontrolled system):         A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)
Initial (controlled system):           A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_gate1_c_off: guard: A_gate1.On and (S_gate1_closed.On and S_gate1_opened.Off) -> true [assume A_gate1.On and (S_gate1_closed.On and S_gate1_opened.Off)].
  Event A_gate1_c_on: guard: A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On) -> true [assume A_gate1.Off and (S_gate1_closed.Off and S_gate1_opened.On)].

Constructing output CIF specification.
Syntesizing supervisor 97.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name            Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_gate2         0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_gate2_closed  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_gate2_opened  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_inductive     3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_optical       4      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  Total                                          5      10        20          20          100%

Applying automatic variable ordering:
  Number of hyperedges: 14

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    2 (total)                 0.14 (avg/edge) [before]
    Total span:                    2 (total)                 0.14 (avg/edge) [iteration 1]
    Total span:                    2 (total)                 0.14 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    2 (total)                 0.14 (avg/edge) [before]
    Total span:                    2 (total)                 0.14 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_inductive.Off
Initial   (aut/locs init predicate):     S_optical.Off
Initial   (aut/locs init predicate):     S_gate2_opened.On
Initial   (aut/locs init predicate):     S_gate2_closed.Off
Initial   (aut/locs init predicate):     A_gate2.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off))
Initial   (uncontrolled system):         A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off))
Initial   (system, combined init/inv):   A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_inductive.Off
Marked    (aut/locs marker predicate):   S_optical.Off
Marked    (aut/locs marker predicate):   S_gate2_opened.On
Marked    (aut/locs marker predicate):   S_gate2_closed.Off
Marked    (aut/locs marker predicate):   A_gate2.Off
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off))
Marked    (uncontrolled system):         A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off))
Marked    (system, combined marked/inv): A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off))

State/event exclusion requirements:
  Event "A_gate2_c_on" needs:
    S_gate2_opened.On
    S_optical.On
    S_inductive.On
  Event "A_gate2_c_off" needs:
    S_gate2_closed.On

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off)
    Edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On)
    Edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off)
    Edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On)
    Edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off)
    Edge: (event: S_gate2_opened_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_opened := S_gate2_opened.On)
    Edge: (event: S_gate2_closed_u_off) (guard: S_gate2_closed.On) (assignments: S_gate2_closed := S_gate2_closed.Off)
    Edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On)
    Edge: (event: A_gate2_c_off) (guard: A_gate2.On) (assignments: A_gate2 := A_gate2.Off)
    Edge: (event: A_gate2_c_on) (guard: A_gate2.Off) (assignments: A_gate2 := A_gate2.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_gate2_c_off) (guard: A_gate2.On) (assignments: A_gate2 := A_gate2.Off): guard: A_gate2.On -> A_gate2.On and S_gate2_closed.On [requirement: S_gate2_closed.On].
Edge (event: A_gate2_c_on) (guard: A_gate2.Off) (assignments: A_gate2 := A_gate2.On): guard: A_gate2.Off -> A_gate2.Off and S_gate2_opened.On and (S_inductive.On and S_optical.On) [requirement: S_gate2_opened.On and (S_inductive.On and S_optical.On)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off)
    Edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On)
    Edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off)
    Edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On)
    Edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off)
    Edge: (event: S_gate2_opened_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_opened := S_gate2_opened.On)
    Edge: (event: S_gate2_closed_u_off) (guard: S_gate2_closed.On) (assignments: S_gate2_closed := S_gate2_closed.Off)
    Edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On)
    Edge: (event: A_gate2_c_off) (guard: A_gate2.On -> A_gate2.On and S_gate2_closed.On) (assignments: A_gate2 := A_gate2.Off)
    Edge: (event: A_gate2_c_on) (guard: A_gate2.Off -> A_gate2.Off and S_gate2_opened.On and (S_inductive.On and S_optical.On)) (assignments: A_gate2 := A_gate2.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off)) -> A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and S_optical.Off) [backward reach with edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and S_optical.Off) -> A_gate2.Off and (S_gate2_closed.Off and S_gate2_opened.On) [backward reach with edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate2.Off and (S_gate2_closed.Off and S_gate2_opened.On) -> A_gate2.Off and S_gate2_closed.Off [backward reach with edge: (event: S_gate2_opened_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_opened := S_gate2_opened.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate2.Off and S_gate2_closed.Off -> A_gate2.Off [backward reach with edge: (event: S_gate2_closed_u_off) (guard: S_gate2_closed.On) (assignments: S_gate2_closed := S_gate2_closed.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate2.Off -> A_gate2.Off or S_gate2_closed.On [backward reach with edge: (event: A_gate2_c_off) (guard: A_gate2.On -> A_gate2.On and S_gate2_closed.On) (assignments: A_gate2 := A_gate2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: A_gate2.Off or S_gate2_closed.On -> A_gate2.Off or (S_gate2_closed.On or S_gate2_opened.Off) [backward reach with edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: A_gate2.Off or (S_gate2_closed.On or S_gate2_opened.Off) -> true [backward reach with edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off)) -> A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and S_optical.Off) [forward reach with edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and S_optical.Off) -> A_gate2.Off and (S_gate2_closed.Off and S_gate2_opened.On) [forward reach with edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate2.Off and (S_gate2_closed.Off and S_gate2_opened.On) -> A_gate2.Off and S_gate2_closed.Off [forward reach with edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate2.Off and S_gate2_closed.Off -> A_gate2.Off and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off)) [forward reach with edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate2.Off and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off)) -> A_gate2.On and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.On and S_optical.On)) or (A_gate2.Off and (S_gate2_closed.On and S_gate2_opened.Off) or A_gate2.Off and S_gate2_closed.Off) [forward reach with edge: (event: A_gate2_c_on) (guard: A_gate2.Off -> A_gate2.Off and S_gate2_opened.On and (S_inductive.On and S_optical.On)) (assignments: A_gate2 := A_gate2.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_gate2.On and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.On and S_optical.On)) or (A_gate2.Off and (S_gate2_closed.On and S_gate2_opened.Off) or A_gate2.Off and S_gate2_closed.Off) -> A_gate2.On and S_gate2_closed.Off and (S_gate2_opened.On and S_optical.On) or (A_gate2.Off and (S_gate2_closed.On and S_gate2_opened.Off) or A_gate2.Off and S_gate2_closed.Off) [forward reach with edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate2.On and S_gate2_closed.Off and (S_gate2_opened.On and S_optical.On) or (A_gate2.Off and (S_gate2_closed.On and S_gate2_opened.Off) or A_gate2.Off and S_gate2_closed.Off) -> (A_gate2.Off or S_gate2_closed.Off) and ((A_gate2.Off or (S_gate2_closed.On or S_gate2_opened.On)) and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off))) [forward reach with edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_gate2.Off or S_gate2_closed.Off) and ((A_gate2.Off or (S_gate2_closed.On or S_gate2_opened.On)) and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off))) -> (A_gate2.Off or S_gate2_closed.Off) and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off)) [forward reach with edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_gate2.Off or S_gate2_closed.Off) and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off)) -> S_gate2_closed.Off or S_gate2_opened.Off [forward reach with edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: S_gate2_closed.Off or S_gate2_opened.Off [fixed point].
Controlled behavior: true -> S_gate2_closed.Off or S_gate2_opened.Off.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off)) -> A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and S_optical.Off) [backward reach with edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off), restricted to current/previous controlled-behavior predicate: S_gate2_closed.Off or S_gate2_opened.Off]
Backward controlled-behavior: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and S_optical.Off) -> A_gate2.Off and (S_gate2_closed.Off and S_gate2_opened.On) [backward reach with edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off), restricted to current/previous controlled-behavior predicate: S_gate2_closed.Off or S_gate2_opened.Off]
Backward controlled-behavior: A_gate2.Off and (S_gate2_closed.Off and S_gate2_opened.On) -> A_gate2.Off and S_gate2_closed.Off [backward reach with edge: (event: S_gate2_opened_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_opened := S_gate2_opened.On), restricted to current/previous controlled-behavior predicate: S_gate2_closed.Off or S_gate2_opened.Off]
Backward controlled-behavior: A_gate2.Off and S_gate2_closed.Off -> A_gate2.Off and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off)) [backward reach with edge: (event: S_gate2_closed_u_off) (guard: S_gate2_closed.On) (assignments: S_gate2_closed := S_gate2_closed.Off), restricted to current/previous controlled-behavior predicate: S_gate2_closed.Off or S_gate2_opened.Off]
Backward controlled-behavior: A_gate2.Off and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off)) -> (A_gate2.Off or (S_gate2_closed.Off or S_gate2_opened.Off)) and ((A_gate2.Off or S_gate2_closed.On) and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off))) [backward reach with edge: (event: A_gate2_c_off) (guard: A_gate2.On -> A_gate2.On and S_gate2_closed.On) (assignments: A_gate2 := A_gate2.Off), restricted to current/previous controlled-behavior predicate: S_gate2_closed.Off or S_gate2_opened.Off]
Backward reachability: iteration 2.
Backward controlled-behavior: (A_gate2.Off or (S_gate2_closed.Off or S_gate2_opened.Off)) and ((A_gate2.Off or S_gate2_closed.On) and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off))) -> (A_gate2.Off or S_gate2_opened.Off) and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off)) [backward reach with edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On), restricted to current/previous controlled-behavior predicate: S_gate2_closed.Off or S_gate2_opened.Off]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_gate2.Off or S_gate2_opened.Off) and (A_gate2.On or (S_gate2_closed.Off or S_gate2_opened.Off)) -> S_gate2_closed.Off or S_gate2_opened.Off [backward reach with edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off), restricted to current/previous controlled-behavior predicate: S_gate2_closed.Off or S_gate2_opened.Off]
Backward reachability: iteration 4.
Backward controlled-behavior: S_gate2_closed.Off or S_gate2_opened.Off [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: S_gate2_closed.On and S_gate2_opened.On [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_gate2_c_off) (guard: A_gate2.On -> A_gate2.On and S_gate2_closed.On) (assignments: A_gate2 := A_gate2.Off): guard: A_gate2.On and S_gate2_closed.On -> A_gate2.On and (S_gate2_closed.On and S_gate2_opened.Off).
Edge (event: A_gate2_c_on) (guard: A_gate2.Off -> A_gate2.Off and S_gate2_opened.On and (S_inductive.On and S_optical.On)) (assignments: A_gate2 := A_gate2.On): guard: A_gate2.Off and S_gate2_opened.On and (S_inductive.On and S_optical.On) -> A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.On and S_optical.On)).

Final synthesis result:
  State: (controlled-behavior: S_gate2_closed.Off or S_gate2_opened.Off)
    Edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off)
    Edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On)
    Edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off)
    Edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On)
    Edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off)
    Edge: (event: S_gate2_opened_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_opened := S_gate2_opened.On)
    Edge: (event: S_gate2_closed_u_off) (guard: S_gate2_closed.On) (assignments: S_gate2_closed := S_gate2_closed.Off)
    Edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On)
    Edge: (event: A_gate2_c_off) (guard: A_gate2.On -> A_gate2.On and (S_gate2_closed.On and S_gate2_opened.Off)) (assignments: A_gate2 := A_gate2.Off)
    Edge: (event: A_gate2_c_on) (guard: A_gate2.Off -> A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.On and S_optical.On))) (assignments: A_gate2 := A_gate2.On)

Controlled system:                     exactly 24 states.

Initial (synthesis result):            S_gate2_closed.Off or S_gate2_opened.Off
Initial (uncontrolled system):         A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off))
Initial (controlled system):           A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.Off and S_optical.Off))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_gate2_c_off: guard: A_gate2.On and (S_gate2_closed.On and S_gate2_opened.Off) -> true [assume A_gate2.On and (S_gate2_closed.On and S_gate2_opened.Off)].
  Event A_gate2_c_on: guard: A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.On and S_optical.On)) -> true [assume A_gate2.Off and S_gate2_closed.Off and (S_gate2_opened.On and (S_inductive.On and S_optical.On))].

Constructing output CIF specification.
Synthesis of supervisors is finished.
Performing nonconflicting check.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_airslide            0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_clamp               1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_conveyer            2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_conveyerB           3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   A_drill               4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   A_drilldown           5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   A_drillup             6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   A_eject               7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   A_ejectpulse          8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   A_elevator_down       9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   A_elevator_up         10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   A_gate1               11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   A_gate2               12     1 * 2     2 * 2       2 * 2       100%
  14     location pointer  n/a   A_gripperclose        13     1 * 2     2 * 2       2 * 2       100%
  15     location pointer  n/a   A_pusher              14     1 * 2     2 * 2       2 * 2       100%
  16     location pointer  n/a   A_pusher1             15     1 * 2     2 * 2       2 * 2       100%
  17     location pointer  n/a   A_pusher2             16     1 * 2     2 * 2       2 * 2       100%
  18     location pointer  n/a   A_pusher3             17     1 * 2     2 * 2       2 * 2       100%
  19     location pointer  n/a   A_separator           18     1 * 2     2 * 2       2 * 2       100%
  20     location pointer  n/a   A_stopperretract      19     1 * 2     2 * 2       2 * 2       100%
  21     location pointer  n/a   A_tester              20     1 * 2     2 * 2       2 * 2       100%
  22     location pointer  n/a   A_transfer2droppos    21     1 * 2     2 * 2       2 * 2       100%
  23     location pointer  n/a   A_transfer2pickpos    22     1 * 2     2 * 2       2 * 2       100%
  24     location pointer  n/a   A_turntable           23     1 * 2     2 * 2       2 * 2       100%
  25     location pointer  n/a   A_vacuum              24     1 * 2     2 * 2       2 * 2       100%
  26     location pointer  n/a   A_x2distributing      25     1 * 2     2 * 2       2 * 2       100%
  27     location pointer  n/a   A_x2testing           26     1 * 2     2 * 2       2 * 2       100%
  28     location pointer  n/a   A_zdown               27     1 * 2     2 * 2       2 * 2       100%
  29     location pointer  n/a   BTimer                28     2 * 2     3 * 2       4 * 2       75%
  30     location pointer  n/a   ClampDrill            29     4 * 2     9 * 2       16 * 2      ~56%
  31     location pointer  n/a   PTimer                30     2 * 2     3 * 2       4 * 2       75%
  32     location pointer  n/a   PusherLift            31     2 * 2     4 * 2       4 * 2       100%
  33     location pointer  n/a   S_atdrill             32     1 * 2     2 * 2       2 * 2       100%
  34     location pointer  n/a   S_atend               33     1 * 2     2 * 2       2 * 2       100%
  35     location pointer  n/a   S_atexit              34     1 * 2     2 * 2       2 * 2       100%
  36     location pointer  n/a   S_atin                35     1 * 2     2 * 2       2 * 2       100%
  37     location pointer  n/a   S_atinput             36     1 * 2     2 * 2       2 * 2       100%
  38     location pointer  n/a   S_atseparator         37     1 * 2     2 * 2       2 * 2       100%
  39     location pointer  n/a   S_attest              38     1 * 2     2 * 2       2 * 2       100%
  40     location pointer  n/a   S_Binitialized        39     1 * 2     2 * 2       2 * 2       100%
  41     location pointer  n/a   S_capacitive          40     1 * 2     2 * 2       2 * 2       100%
  42     location pointer  n/a   S_clamp               41     1 * 2     2 * 2       2 * 2       100%
  43     location pointer  n/a   S_Dinitialized        42     1 * 2     2 * 2       2 * 2       100%
  44     location pointer  n/a   S_drill_down          43     1 * 2     2 * 2       2 * 2       100%
  45     location pointer  n/a   S_drill_up            44     1 * 2     2 * 2       2 * 2       100%
  46     location pointer  n/a   S_elevator_down       45     1 * 2     2 * 2       2 * 2       100%
  47     location pointer  n/a   S_elevator_up         46     1 * 2     2 * 2       2 * 2       100%
  48     location pointer  n/a   S_gate1_closed        47     1 * 2     2 * 2       2 * 2       100%
  49     location pointer  n/a   S_gate1_opened        48     1 * 2     2 * 2       2 * 2       100%
  50     location pointer  n/a   S_gate2_closed        49     1 * 2     2 * 2       2 * 2       100%
  51     location pointer  n/a   S_gate2_opened        50     1 * 2     2 * 2       2 * 2       100%
  52     location pointer  n/a   S_gripper             51     1 * 2     2 * 2       2 * 2       100%
  53     location pointer  n/a   S_Hinitialized        52     1 * 2     2 * 2       2 * 2       100%
  54     location pointer  n/a   S_inductive           53     1 * 2     2 * 2       2 * 2       100%
  55     location pointer  n/a   S_optical             54     1 * 2     2 * 2       2 * 2       100%
  56     location pointer  n/a   S_opticalT            55     1 * 2     2 * 2       2 * 2       100%
  57     location pointer  n/a   S_Pinitialized        56     1 * 2     2 * 2       2 * 2       100%
  58     location pointer  n/a   S_product             57     1 * 2     2 * 2       2 * 2       100%
  59     location pointer  n/a   S_product1            58     1 * 2     2 * 2       2 * 2       100%
  60     location pointer  n/a   S_product2            59     1 * 2     2 * 2       2 * 2       100%
  61     location pointer  n/a   S_product3            60     1 * 2     2 * 2       2 * 2       100%
  62     location pointer  n/a   S_product4            61     1 * 2     2 * 2       2 * 2       100%
  63     location pointer  n/a   S_productheight       62     1 * 2     2 * 2       2 * 2       100%
  64     location pointer  n/a   S_pusher              63     1 * 2     2 * 2       2 * 2       100%
  65     location pointer  n/a   S_pusher1_in          64     1 * 2     2 * 2       2 * 2       100%
  66     location pointer  n/a   S_pusher1_out         65     1 * 2     2 * 2       2 * 2       100%
  67     location pointer  n/a   S_pusher2_in          66     1 * 2     2 * 2       2 * 2       100%
  68     location pointer  n/a   S_pusher2_out         67     1 * 2     2 * 2       2 * 2       100%
  69     location pointer  n/a   S_pusher3_in          68     1 * 2     2 * 2       2 * 2       100%
  70     location pointer  n/a   S_pusher3_out         69     1 * 2     2 * 2       2 * 2       100%
  71     location pointer  n/a   S_reflective          70     1 * 2     2 * 2       2 * 2       100%
  72     location pointer  n/a   S_separator_closed    71     1 * 2     2 * 2       2 * 2       100%
  73     location pointer  n/a   S_separator_opened    72     1 * 2     2 * 2       2 * 2       100%
  74     location pointer  n/a   S_Sinitialized        73     1 * 2     2 * 2       2 * 2       100%
  75     location pointer  n/a   S_slidefull           74     1 * 2     2 * 2       2 * 2       100%
  76     location pointer  n/a   S_stack1_filled       75     1 * 2     2 * 2       2 * 2       100%
  77     location pointer  n/a   S_stack2_filled       76     1 * 2     2 * 2       2 * 2       100%
  78     location pointer  n/a   S_stack3_filled       77     1 * 2     2 * 2       2 * 2       100%
  79     location pointer  n/a   S_test_ok             78     1 * 2     2 * 2       2 * 2       100%
  80     location pointer  n/a   S_Tinitialized        79     1 * 2     2 * 2       2 * 2       100%
  81     location pointer  n/a   S_transfer_atdrop     80     1 * 2     2 * 2       2 * 2       100%
  82     location pointer  n/a   S_transfer_athalfway  81     1 * 2     2 * 2       2 * 2       100%
  83     location pointer  n/a   S_transfer_atpickup   82     1 * 2     2 * 2       2 * 2       100%
  84     location pointer  n/a   S_turntable           83     1 * 2     2 * 2       2 * 2       100%
  85     location pointer  n/a   S_vacuum              84     1 * 2     2 * 2       2 * 2       100%
  86     location pointer  n/a   S_xpos_at1            85     1 * 2     2 * 2       2 * 2       100%
  87     location pointer  n/a   S_xpos_at2            86     1 * 2     2 * 2       2 * 2       100%
  88     location pointer  n/a   S_xpos_at3            87     1 * 2     2 * 2       2 * 2       100%
  89     location pointer  n/a   S_xpos_atdrop         88     1 * 2     2 * 2       2 * 2       100%
  90     location pointer  n/a   S_zpos_atdown         89     1 * 2     2 * 2       2 * 2       100%
  91     location pointer  n/a   S_zpos_atup           90     1 * 2     2 * 2       2 * 2       100%
  92     location pointer  n/a   STimer                91     2 * 2     3 * 2       4 * 2       75%
  93     location pointer  n/a   Tester                92     2 * 2     3 * 2       4 * 2       75%
  94     location pointer  n/a   TTimer                93     2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                94     206       404         428         ~94%

Applying automatic variable ordering:
  Number of hyperedges: 186

  Applying FORCE algorithm:
    Maximum number of iterations: 50

    Total span:                3,986 (total)                21.43 (avg/edge) [before]
    Total span:                2,315 (total)                12.45 (avg/edge) [iteration 1]
    Total span:                1,572 (total)                 8.45 (avg/edge) [iteration 2]
    Total span:                1,177 (total)                 6.33 (avg/edge) [iteration 3]
    Total span:                1,026 (total)                 5.52 (avg/edge) [iteration 4]
    Total span:                  966 (total)                 5.19 (avg/edge) [iteration 5]
    Total span:                  933 (total)                 5.02 (avg/edge) [iteration 6]
    Total span:                  893 (total)                 4.80 (avg/edge) [iteration 7]
    Total span:                  851 (total)                 4.58 (avg/edge) [iteration 8]
    Total span:                  833 (total)                 4.48 (avg/edge) [iteration 9]
    Total span:                  822 (total)                 4.42 (avg/edge) [iteration 10]
    Total span:                  809 (total)                 4.35 (avg/edge) [iteration 11]
    Total span:                  798 (total)                 4.29 (avg/edge) [iteration 12]
    Total span:                  787 (total)                 4.23 (avg/edge) [iteration 13]
    Total span:                  769 (total)                 4.13 (avg/edge) [iteration 14]
    Total span:                  766 (total)                 4.12 (avg/edge) [iteration 15]
    Total span:                  767 (total)                 4.12 (avg/edge) [iteration 16]
    Total span:                  765 (total)                 4.11 (avg/edge) [iteration 17]
    Total span:                  765 (total)                 4.11 (avg/edge) [iteration 18]
    Total span:                  765 (total)                 4.11 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                  765 (total)                 4.11 (avg/edge) [before]
    Total span:                  763 (total)                 4.10 (avg/edge) [window 31..34]
    Total span:                  757 (total)                 4.07 (avg/edge) [window 33..36]
    Total span:                  752 (total)                 4.04 (avg/edge) [window 35..38]
    Total span:                  749 (total)                 4.03 (avg/edge) [window 38..41]
    Total span:                  744 (total)                 4.00 (avg/edge) [window 40..43]
    Total span:                  742 (total)                 3.99 (avg/edge) [window 85..88]
    Total span:                  742 (total)                 3.99 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   S_clamp               0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_atdrill             1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_drilldown           2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_drillup             3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_drill_down          4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_drill_up            5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   ClampDrill            6      4 * 2     9 * 2       16 * 2      ~56%
  8      location pointer  n/a   A_clamp               7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   A_drill               8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_attest              9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_Pinitialized        10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   A_turntable           11     1 * 2     2 * 2       2 * 2       100%
  13     location pointer  n/a   PTimer                12     2 * 2     3 * 2       4 * 2       75%
  14     location pointer  n/a   S_turntable           13     1 * 2     2 * 2       2 * 2       100%
  15     location pointer  n/a   A_tester              14     1 * 2     2 * 2       2 * 2       100%
  16     location pointer  n/a   Tester                15     2 * 2     3 * 2       4 * 2       75%
  17     location pointer  n/a   A_eject               16     1 * 2     2 * 2       2 * 2       100%
  18     location pointer  n/a   S_atexit              17     1 * 2     2 * 2       2 * 2       100%
  19     location pointer  n/a   S_atinput             18     1 * 2     2 * 2       2 * 2       100%
  20     location pointer  n/a   BTimer                19     2 * 2     3 * 2       4 * 2       75%
  21     location pointer  n/a   S_atend               20     1 * 2     2 * 2       2 * 2       100%
  22     location pointer  n/a   S_test_ok             21     1 * 2     2 * 2       2 * 2       100%
  23     location pointer  n/a   A_conveyerB           22     1 * 2     2 * 2       2 * 2       100%
  24     location pointer  n/a   S_Binitialized        23     1 * 2     2 * 2       2 * 2       100%
  25     location pointer  n/a   A_separator           24     1 * 2     2 * 2       2 * 2       100%
  26     location pointer  n/a   S_atseparator         25     1 * 2     2 * 2       2 * 2       100%
  27     location pointer  n/a   S_separator_opened    26     1 * 2     2 * 2       2 * 2       100%
  28     location pointer  n/a   S_separator_closed    27     1 * 2     2 * 2       2 * 2       100%
  29     location pointer  n/a   S_atin                28     1 * 2     2 * 2       2 * 2       100%
  30     location pointer  n/a   A_conveyer            29     1 * 2     2 * 2       2 * 2       100%
  31     location pointer  n/a   S_gate1_closed        30     1 * 2     2 * 2       2 * 2       100%
  32     location pointer  n/a   S_gate1_opened        31     1 * 2     2 * 2       2 * 2       100%
  33     location pointer  n/a   S_gate2_closed        32     1 * 2     2 * 2       2 * 2       100%
  34     location pointer  n/a   S_gate2_opened        33     1 * 2     2 * 2       2 * 2       100%
  35     location pointer  n/a   S_inductive           34     1 * 2     2 * 2       2 * 2       100%
  36     location pointer  n/a   S_optical             35     1 * 2     2 * 2       2 * 2       100%
  37     location pointer  n/a   A_gate1               36     1 * 2     2 * 2       2 * 2       100%
  38     location pointer  n/a   A_gate2               37     1 * 2     2 * 2       2 * 2       100%
  39     location pointer  n/a   A_stopperretract      38     1 * 2     2 * 2       2 * 2       100%
  40     location pointer  n/a   S_Sinitialized        39     1 * 2     2 * 2       2 * 2       100%
  41     location pointer  n/a   S_slidefull           40     1 * 2     2 * 2       2 * 2       100%
  42     location pointer  n/a   STimer                41     2 * 2     3 * 2       4 * 2       75%
  43     location pointer  n/a   S_product             42     1 * 2     2 * 2       2 * 2       100%
  44     location pointer  n/a   A_airslide            43     1 * 2     2 * 2       2 * 2       100%
  45     location pointer  n/a   S_opticalT            44     1 * 2     2 * 2       2 * 2       100%
  46     location pointer  n/a   S_elevator_up         45     1 * 2     2 * 2       2 * 2       100%
  47     location pointer  n/a   S_pusher              46     1 * 2     2 * 2       2 * 2       100%
  48     location pointer  n/a   A_pusher              47     1 * 2     2 * 2       2 * 2       100%
  49     location pointer  n/a   S_Tinitialized        48     1 * 2     2 * 2       2 * 2       100%
  50     location pointer  n/a   PusherLift            49     2 * 2     4 * 2       4 * 2       100%
  51     location pointer  n/a   A_elevator_up         50     1 * 2     2 * 2       2 * 2       100%
  52     location pointer  n/a   TTimer                51     2 * 2     3 * 2       4 * 2       75%
  53     location pointer  n/a   S_productheight       52     1 * 2     2 * 2       2 * 2       100%
  54     location pointer  n/a   A_elevator_down       53     1 * 2     2 * 2       2 * 2       100%
  55     location pointer  n/a   S_reflective          54     1 * 2     2 * 2       2 * 2       100%
  56     location pointer  n/a   S_elevator_down       55     1 * 2     2 * 2       2 * 2       100%
  57     location pointer  n/a   S_pusher1_out         56     1 * 2     2 * 2       2 * 2       100%
  58     location pointer  n/a   S_pusher1_in          57     1 * 2     2 * 2       2 * 2       100%
  59     location pointer  n/a   S_stack1_filled       58     1 * 2     2 * 2       2 * 2       100%
  60     location pointer  n/a   S_capacitive          59     1 * 2     2 * 2       2 * 2       100%
  61     location pointer  n/a   S_pusher2_in          60     1 * 2     2 * 2       2 * 2       100%
  62     location pointer  n/a   S_pusher2_out         61     1 * 2     2 * 2       2 * 2       100%
  63     location pointer  n/a   A_pusher1             62     1 * 2     2 * 2       2 * 2       100%
  64     location pointer  n/a   S_stack2_filled       63     1 * 2     2 * 2       2 * 2       100%
  65     location pointer  n/a   S_Dinitialized        64     1 * 2     2 * 2       2 * 2       100%
  66     location pointer  n/a   A_pusher2             65     1 * 2     2 * 2       2 * 2       100%
  67     location pointer  n/a   S_pusher3_in          66     1 * 2     2 * 2       2 * 2       100%
  68     location pointer  n/a   S_pusher3_out         67     1 * 2     2 * 2       2 * 2       100%
  69     location pointer  n/a   S_stack3_filled       68     1 * 2     2 * 2       2 * 2       100%
  70     location pointer  n/a   A_pusher3             69     1 * 2     2 * 2       2 * 2       100%
  71     location pointer  n/a   S_transfer_athalfway  70     1 * 2     2 * 2       2 * 2       100%
  72     location pointer  n/a   A_transfer2droppos    71     1 * 2     2 * 2       2 * 2       100%
  73     location pointer  n/a   S_transfer_atpickup   72     1 * 2     2 * 2       2 * 2       100%
  74     location pointer  n/a   S_transfer_atdrop     73     1 * 2     2 * 2       2 * 2       100%
  75     location pointer  n/a   A_transfer2pickpos    74     1 * 2     2 * 2       2 * 2       100%
  76     location pointer  n/a   S_product1            75     1 * 2     2 * 2       2 * 2       100%
  77     location pointer  n/a   S_product2            76     1 * 2     2 * 2       2 * 2       100%
  78     location pointer  n/a   S_vacuum              77     1 * 2     2 * 2       2 * 2       100%
  79     location pointer  n/a   A_vacuum              78     1 * 2     2 * 2       2 * 2       100%
  80     location pointer  n/a   S_product3            79     1 * 2     2 * 2       2 * 2       100%
  81     location pointer  n/a   A_ejectpulse          80     1 * 2     2 * 2       2 * 2       100%
  82     location pointer  n/a   S_Hinitialized        81     1 * 2     2 * 2       2 * 2       100%
  83     location pointer  n/a   S_product4            82     1 * 2     2 * 2       2 * 2       100%
  84     location pointer  n/a   A_x2distributing      83     1 * 2     2 * 2       2 * 2       100%
  85     location pointer  n/a   A_x2testing           84     1 * 2     2 * 2       2 * 2       100%
  86     location pointer  n/a   S_gripper             85     1 * 2     2 * 2       2 * 2       100%
  87     location pointer  n/a   S_xpos_at3            86     1 * 2     2 * 2       2 * 2       100%
  88     location pointer  n/a   A_zdown               87     1 * 2     2 * 2       2 * 2       100%
  89     location pointer  n/a   S_xpos_atdrop         88     1 * 2     2 * 2       2 * 2       100%
  90     location pointer  n/a   S_zpos_atup           89     1 * 2     2 * 2       2 * 2       100%
  91     location pointer  n/a   S_xpos_at2            90     1 * 2     2 * 2       2 * 2       100%
  92     location pointer  n/a   S_xpos_at1            91     1 * 2     2 * 2       2 * 2       100%
  93     location pointer  n/a   A_gripperclose        92     1 * 2     2 * 2       2 * 2       100%
  94     location pointer  n/a   S_zpos_atdown         93     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                94     206       404         428         ~94%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_product1.Off
Initial   (aut/locs init predicate):     S_product2.Off
Initial   (aut/locs init predicate):     S_product3.Off
Initial   (aut/locs init predicate):     S_pusher1_in.On
Initial   (aut/locs init predicate):     S_pusher1_out.Off
Initial   (aut/locs init predicate):     S_stack1_filled.On
Initial   (aut/locs init predicate):     S_pusher2_in.On
Initial   (aut/locs init predicate):     S_pusher2_out.Off
Initial   (aut/locs init predicate):     S_stack2_filled.On
Initial   (aut/locs init predicate):     S_pusher3_in.On
Initial   (aut/locs init predicate):     S_pusher3_out.Off
Initial   (aut/locs init predicate):     S_stack3_filled.On
Initial   (aut/locs init predicate):     S_Dinitialized.Off
Initial   (aut/locs init predicate):     A_pusher1.Off
Initial   (aut/locs init predicate):     A_pusher2.Off
Initial   (aut/locs init predicate):     A_pusher3.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     S_product4.Off
Initial   (aut/locs init predicate):     S_xpos_at1.Off
Initial   (aut/locs init predicate):     S_xpos_at2.Off
Initial   (aut/locs init predicate):     S_xpos_at3.Off
Initial   (aut/locs init predicate):     S_xpos_atdrop.On
Initial   (aut/locs init predicate):     S_zpos_atup.On
Initial   (aut/locs init predicate):     S_zpos_atdown.Off
Initial   (aut/locs init predicate):     S_gripper.Off
Initial   (aut/locs init predicate):     S_transfer_atpickup.Off
Initial   (aut/locs init predicate):     S_transfer_atdrop.Off
Initial   (aut/locs init predicate):     S_transfer_athalfway.On
Initial   (aut/locs init predicate):     S_vacuum.Off
Initial   (aut/locs init predicate):     S_Hinitialized.Off
Initial   (aut/locs init predicate):     A_x2distributing.On
Initial   (aut/locs init predicate):     A_x2testing.On
Initial   (aut/locs init predicate):     A_zdown.Off
Initial   (aut/locs init predicate):     A_gripperclose.Off
Initial   (aut/locs init predicate):     A_transfer2pickpos.Off
Initial   (aut/locs init predicate):     A_transfer2droppos.Off
Initial   (aut/locs init predicate):     A_vacuum.Off
Initial   (aut/locs init predicate):     A_ejectpulse.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     S_elevator_up.Off
Initial   (aut/locs init predicate):     S_elevator_down.On
Initial   (aut/locs init predicate):     S_pusher.Off
Initial   (aut/locs init predicate):     S_opticalT.Off
Initial   (aut/locs init predicate):     S_capacitive.Off
Initial   (aut/locs init predicate):     S_reflective.Off
Initial   (aut/locs init predicate):     S_productheight.Off
Initial   (aut/locs init predicate):     S_Tinitialized.Off
Initial   (aut/locs init predicate):     A_elevator_up.Off
Initial   (aut/locs init predicate):     A_elevator_down.On
Initial   (aut/locs init predicate):     A_pusher.Off
Initial   (aut/locs init predicate):     A_airslide.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     TTimer.Off
Initial   (aut/locs init predicate):     PusherLift.One
Initial   (aut/locs init predicate):     S_atin.Off
Initial   (aut/locs init predicate):     S_atseparator.Off
Initial   (aut/locs init predicate):     S_atend.Off
Initial   (aut/locs init predicate):     S_separator_opened.Off
Initial   (aut/locs init predicate):     S_separator_closed.On
Initial   (aut/locs init predicate):     S_Binitialized.Off
Initial   (aut/locs init predicate):     A_separator.On
Initial   (aut/locs init predicate):     A_conveyerB.Off
Initial   (aut/locs init predicate):     BTimer.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     S_atinput.Off
Initial   (aut/locs init predicate):     S_attest.Off
Initial   (aut/locs init predicate):     S_atdrill.Off
Initial   (aut/locs init predicate):     S_atexit.Off
Initial   (aut/locs init predicate):     S_clamp.Off
Initial   (aut/locs init predicate):     S_test_ok.Off
Initial   (aut/locs init predicate):     S_drill_up.On
Initial   (aut/locs init predicate):     S_drill_down.Off
Initial   (aut/locs init predicate):     S_turntable.On
Initial   (aut/locs init predicate):     S_Pinitialized.Off
Initial   (aut/locs init predicate):     A_drill.Off
Initial   (aut/locs init predicate):     A_turntable.Off
Initial   (aut/locs init predicate):     A_drilldown.Off
Initial   (aut/locs init predicate):     A_drillup.On
Initial   (aut/locs init predicate):     A_clamp.Off
Initial   (aut/locs init predicate):     A_tester.Off
Initial   (aut/locs init predicate):     A_eject.Off
Initial   (aut/locs init predicate):     PTimer.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     Tester.One
Initial   (aut/locs init predicate):     ClampDrill.one
Initial   (aut/locs init predicate):     S_product.Off
Initial   (aut/locs init predicate):     S_inductive.Off
Initial   (aut/locs init predicate):     S_optical.Off
Initial   (aut/locs init predicate):     S_slidefull.Off
Initial   (aut/locs init predicate):     S_gate1_opened.On
Initial   (aut/locs init predicate):     S_gate1_closed.Off
Initial   (aut/locs init predicate):     S_gate2_opened.On
Initial   (aut/locs init predicate):     S_gate2_closed.Off
Initial   (aut/locs init predicate):     S_Sinitialized.Off
Initial   (aut/locs init predicate):     A_conveyer.Off
Initial   (aut/locs init predicate):     A_gate1.Off
Initial   (aut/locs init predicate):     A_gate2.Off
Initial   (aut/locs init predicate):     A_stopperretract.Off
Initial   (aut/locs init predicate):     STimer.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    <bdd 103n 1p>
Initial   (uncontrolled system):         <bdd 103n 1p>
Initial   (system, combined init/inv):   <bdd 103n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_product1.Off
Marked    (aut/locs marker predicate):   S_product2.Off
Marked    (aut/locs marker predicate):   S_product3.Off
Marked    (aut/locs marker predicate):   S_pusher1_in.On
Marked    (aut/locs marker predicate):   S_pusher1_out.Off
Marked    (aut/locs marker predicate):   S_stack1_filled.On
Marked    (aut/locs marker predicate):   S_pusher2_in.On
Marked    (aut/locs marker predicate):   S_pusher2_out.Off
Marked    (aut/locs marker predicate):   S_stack2_filled.On
Marked    (aut/locs marker predicate):   S_pusher3_in.On
Marked    (aut/locs marker predicate):   S_pusher3_out.Off
Marked    (aut/locs marker predicate):   S_stack3_filled.On
Marked    (aut/locs marker predicate):   S_Dinitialized.Off
Marked    (aut/locs marker predicate):   A_pusher1.Off
Marked    (aut/locs marker predicate):   A_pusher2.Off
Marked    (aut/locs marker predicate):   A_pusher3.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   S_product4.Off
Marked    (aut/locs marker predicate):   S_xpos_at1.Off
Marked    (aut/locs marker predicate):   S_xpos_at2.Off
Marked    (aut/locs marker predicate):   S_xpos_at3.Off
Marked    (aut/locs marker predicate):   S_xpos_atdrop.On
Marked    (aut/locs marker predicate):   S_zpos_atup.On
Marked    (aut/locs marker predicate):   S_zpos_atdown.Off
Marked    (aut/locs marker predicate):   S_gripper.Off
Marked    (aut/locs marker predicate):   S_transfer_atpickup.Off
Marked    (aut/locs marker predicate):   S_transfer_atdrop.Off
Marked    (aut/locs marker predicate):   S_transfer_athalfway.On
Marked    (aut/locs marker predicate):   S_vacuum.Off
Marked    (aut/locs marker predicate):   S_Hinitialized.Off
Marked    (aut/locs marker predicate):   A_x2distributing.On
Marked    (aut/locs marker predicate):   A_x2testing.On
Marked    (aut/locs marker predicate):   A_zdown.Off
Marked    (aut/locs marker predicate):   A_gripperclose.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   A_vacuum.Off
Marked    (aut/locs marker predicate):   A_ejectpulse.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   S_elevator_up.Off
Marked    (aut/locs marker predicate):   S_elevator_down.On
Marked    (aut/locs marker predicate):   S_pusher.Off
Marked    (aut/locs marker predicate):   S_opticalT.Off
Marked    (aut/locs marker predicate):   S_capacitive.Off
Marked    (aut/locs marker predicate):   S_reflective.Off
Marked    (aut/locs marker predicate):   S_productheight.Off
Marked    (aut/locs marker predicate):   S_Tinitialized.Off
Marked    (aut/locs marker predicate):   A_elevator_up.Off
Marked    (aut/locs marker predicate):   A_elevator_down.On
Marked    (aut/locs marker predicate):   A_pusher.Off
Marked    (aut/locs marker predicate):   A_airslide.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   not TTimer.Running
Marked    (aut/locs marker predicate):   PusherLift.One
Marked    (aut/locs marker predicate):   S_atin.Off
Marked    (aut/locs marker predicate):   S_atseparator.Off
Marked    (aut/locs marker predicate):   S_atend.Off
Marked    (aut/locs marker predicate):   S_separator_opened.Off
Marked    (aut/locs marker predicate):   S_separator_closed.On
Marked    (aut/locs marker predicate):   S_Binitialized.Off
Marked    (aut/locs marker predicate):   A_separator.On
Marked    (aut/locs marker predicate):   A_conveyerB.Off
Marked    (aut/locs marker predicate):   not BTimer.Running
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   S_atinput.Off
Marked    (aut/locs marker predicate):   S_attest.Off
Marked    (aut/locs marker predicate):   S_atdrill.Off
Marked    (aut/locs marker predicate):   S_atexit.Off
Marked    (aut/locs marker predicate):   S_clamp.Off
Marked    (aut/locs marker predicate):   S_test_ok.Off
Marked    (aut/locs marker predicate):   S_drill_up.On
Marked    (aut/locs marker predicate):   S_drill_down.Off
Marked    (aut/locs marker predicate):   S_turntable.On
Marked    (aut/locs marker predicate):   S_Pinitialized.Off
Marked    (aut/locs marker predicate):   A_drill.Off
Marked    (aut/locs marker predicate):   A_turntable.Off
Marked    (aut/locs marker predicate):   A_drilldown.Off
Marked    (aut/locs marker predicate):   A_drillup.On
Marked    (aut/locs marker predicate):   A_clamp.Off
Marked    (aut/locs marker predicate):   A_tester.Off
Marked    (aut/locs marker predicate):   A_eject.Off
Marked    (aut/locs marker predicate):   PTimer.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   Tester.One
Marked    (aut/locs marker predicate):   ClampDrill.one
Marked    (aut/locs marker predicate):   S_product.Off
Marked    (aut/locs marker predicate):   S_inductive.Off
Marked    (aut/locs marker predicate):   S_optical.Off
Marked    (aut/locs marker predicate):   S_slidefull.Off
Marked    (aut/locs marker predicate):   S_gate1_opened.On
Marked    (aut/locs marker predicate):   S_gate1_closed.Off
Marked    (aut/locs marker predicate):   S_gate2_opened.On
Marked    (aut/locs marker predicate):   S_gate2_closed.Off
Marked    (aut/locs marker predicate):   S_Sinitialized.Off
Marked    (aut/locs marker predicate):   A_conveyer.Off
Marked    (aut/locs marker predicate):   A_gate1.Off
Marked    (aut/locs marker predicate):   A_gate2.Off
Marked    (aut/locs marker predicate):   A_stopperretract.Off
Marked    (aut/locs marker predicate):   STimer.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  <bdd 99n 1p>
Marked    (uncontrolled system):         <bdd 99n 1p>
Marked    (system, combined marked/inv): <bdd 99n 1p>

State/event exclusion requirements:
  None

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off)
    Edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off)
    Edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On)
    Edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off)
    Edge: (event: S_pusher1_in_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_in := S_pusher1_in.On)
    Edge: (event: S_pusher1_out_u_off) (guard: S_pusher1_out.On) (assignments: S_pusher1_out := S_pusher1_out.Off)
    Edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_out := S_pusher1_out.On)
    Edge: (event: S_stack1_filled_u_off) (guard: S_stack1_filled.On) (assignments: S_stack1_filled := S_stack1_filled.Off)
    Edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On)
    Edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off)
    Edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On)
    Edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off)
    Edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On)
    Edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off)
    Edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On)
    Edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off)
    Edge: (event: S_pusher3_in_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_in := S_pusher3_in.On)
    Edge: (event: S_pusher3_out_u_off) (guard: S_pusher3_out.On) (assignments: S_pusher3_out := S_pusher3_out.Off)
    Edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On)
    Edge: (event: S_stack3_filled_u_off) (guard: S_stack3_filled.On) (assignments: S_stack3_filled := S_stack3_filled.Off)
    Edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher1_c_off) (guard: S_pusher1_out.On and S_stack1_filled.On and (A_pusher1.On and (S_Dinitialized.On and S_product1.Off))) (assignments: A_pusher1 := A_pusher1.Off)
    Edge: (event: A_pusher1_c_on) (guard: S_pusher1_in.On and A_pusher1.Off and (S_Dinitialized.On and S_product1.Off)) (assignments: A_pusher1 := A_pusher1.On)
    Edge: (event: A_pusher2_c_off) (guard: S_pusher2_out.On and S_stack2_filled.On and (S_Dinitialized.On and (A_pusher2.On and S_product2.Off))) (assignments: A_pusher2 := A_pusher2.Off)
    Edge: (event: A_pusher2_c_on) (guard: S_pusher2_in.On and S_Dinitialized.On and (A_pusher2.Off and S_product2.Off)) (assignments: A_pusher2 := A_pusher2.On)
    Edge: (event: A_pusher3_c_off) (guard: S_Dinitialized.On and S_pusher3_out.On and (S_stack3_filled.On and (A_pusher3.On and S_product3.Off))) (assignments: A_pusher3 := A_pusher3.Off)
    Edge: (event: A_pusher3_c_on) (guard: S_Dinitialized.On and S_pusher3_in.On and (A_pusher3.Off and S_product3.Off)) (assignments: A_pusher3 := A_pusher3.On)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off)
    Edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atup := S_zpos_atup.On)
    Edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off)
    Edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off)
    Edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On)
    Edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off)
    Edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On)
    Edge: (event: A_x2distributing_c_off) (guard: <bdd 15n 7p>) (assignments: A_x2distributing := A_x2distributing.Off)
    Edge: (event: A_x2distributing_c_on) (guard: S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.On and (A_x2distributing.Off and S_xpos_at3.On)) or S_transfer_athalfway.On and (S_Hinitialized.On and S_product4.On) and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.Off and (A_x2distributing.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and S_xpos_at3.On) or S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))))) (assignments: A_x2distributing := A_x2distributing.On)
    Edge: (event: A_x2testing_c_off) (guard: <bdd 28n 12p>) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: <bdd 17n 15p>) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: <bdd 16n 8p>) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: <bdd 85n 32p>) (assignments: A_zdown := A_zdown.On)
    Edge: (event: A_gripperclose_c_off) (guard: S_Hinitialized.On and S_xpos_atdrop.On and (A_gripperclose.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off)
    Edge: (event: A_gripperclose_c_on) (guard: S_Hinitialized.On and S_xpos_at3.On and (A_gripperclose.Off and S_zpos_atdown.On) or (S_Hinitialized.On and S_xpos_at3.Off and (S_xpos_at2.On and (A_gripperclose.Off and S_zpos_atdown.On)) or S_Hinitialized.On and (S_xpos_at3.Off and S_xpos_at2.Off) and (S_xpos_at1.On and (A_gripperclose.Off and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: S_transfer_athalfway.On and S_transfer_atpickup.On and (A_transfer2pickpos.On and S_Hinitialized.On) or (S_transfer_athalfway.On and S_transfer_atpickup.Off and (A_transfer2pickpos.On and (S_Hinitialized.On and S_product4.Off)) or S_transfer_athalfway.Off and S_transfer_atpickup.On and (A_transfer2pickpos.On and S_Hinitialized.On))) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: <bdd 13n 3p>) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)
    Edge: (event: A_transfer2droppos_c_off) (guard: S_elevator_down.On and S_capacitive.On and (S_transfer_athalfway.On and (A_transfer2droppos.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.On and S_transfer_athalfway.Off) and (A_transfer2droppos.On and (S_transfer_atdrop.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (A_transfer2droppos.On and (S_transfer_atdrop.On and S_Hinitialized.On)) or (S_elevator_down.Off and S_transfer_athalfway.On and (A_transfer2droppos.On and S_Hinitialized.On) or S_elevator_down.Off and S_transfer_athalfway.Off and (A_transfer2droppos.On and (S_transfer_atdrop.On and S_Hinitialized.On))))) (assignments: A_transfer2droppos := A_transfer2droppos.Off)
    Edge: (event: A_transfer2droppos_c_on) (guard: S_elevator_down.On and (S_capacitive.On and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.Off and S_transfer_athalfway.On) and (A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (S_transfer_athalfway.Off and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.Off and (A_transfer2droppos.Off and S_transfer_atpickup.On) and (A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On)
    Edge: (event: A_vacuum_c_off) (guard: S_transfer_atdrop.On and (A_vacuum.On and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.Off)
    Edge: (event: A_vacuum_c_on) (guard: S_transfer_atpickup.On and (A_vacuum.Off and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.On)
    Edge: (event: A_ejectpulse_c_off) (guard: S_vacuum.Off and (A_ejectpulse.On and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.Off)
    Edge: (event: A_ejectpulse_c_on) (guard: S_transfer_atdrop.On and S_vacuum.On and (A_ejectpulse.Off and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.On)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off)
    Edge: (event: S_opticalT_u_on) (guard: S_opticalT.Off) (assignments: S_opticalT := S_opticalT.On)
    Edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off)
    Edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On)
    Edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off)
    Edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On)
    Edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off)
    Edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: S_pusher.Off and S_Tinitialized.On and (A_elevator_up.Off and TTimer.Timeout) and (A_elevator_down.Off and S_reflective.Off and (S_elevator_down.On and (S_capacitive.On and S_transfer_athalfway.On)))) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: <bdd 11n 1p>) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two)
    Edge: (event: A_elevator_down_c_on) (guard: S_opticalT.Off and S_elevator_up.On and (S_pusher.Off and S_Tinitialized.On) and (PusherLift.Four and A_elevator_up.Off and (TTimer.Timeout and A_elevator_down.Off))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One)
    Edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four)
    Edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three)
    Edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off)
    Edge: (event: A_airslide_c_on) (guard: S_atin.Off and A_airslide.Off and (S_elevator_up.On and (S_pusher.On and S_Tinitialized.On))) (assignments: A_airslide := A_airslide.On)
    Edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: A_pusher.On and (S_Tinitialized.On and TTimer.Running)) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: A_pusher.On and (S_Tinitialized.On and TTimer.Timeout)) (assignments: TTimer := TTimer.Off)
    Edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off)
    Edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On)
    Edge: (event: S_atseparator_u_off) (guard: S_atseparator.On) (assignments: S_atseparator := S_atseparator.Off)
    Edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On)
    Edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off)
    Edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On)
    Edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off)
    Edge: (event: S_separator_opened_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_opened := S_separator_opened.On)
    Edge: (event: S_separator_closed_u_off) (guard: S_separator_closed.On) (assignments: S_separator_closed := S_separator_closed.Off)
    Edge: (event: S_separator_closed_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_closed := S_separator_closed.On)
    Edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off)
    Edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On)
    Edge: (event: A_separator_c_off) (guard: S_turntable.On and (S_atinput.Off and S_Binitialized.On) and (A_separator.On and (S_atseparator.Off and S_separator_opened.On))) (assignments: A_separator := A_separator.Off)
    Edge: (event: A_separator_c_on) (guard: S_Binitialized.On and A_separator.Off and (S_atseparator.On and S_separator_closed.On)) (assignments: A_separator := A_separator.On)
    Edge: (event: A_conveyerB_c_off) (guard: BTimer.Timeout and (A_conveyerB.On and S_Binitialized.On)) (assignments: A_conveyerB := A_conveyerB.Off)
    Edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off and (S_Binitialized.On and S_atin.On)) (assignments: A_conveyerB := A_conveyerB.On)
    Edge: (event: BTimer_c_on) (guard: BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running)
    Edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Running and (not BTimer.Running or (A_conveyerB.Off or S_atin.On))) (assignments: BTimer := BTimer.Off)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Timeout and (A_conveyerB.On and S_atin.On) or BTimer.Timeout and A_conveyerB.Off) (assignments: BTimer := BTimer.Off)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)
    Edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off)
    Edge: (event: S_attest_u_on) (guard: S_attest.Off) (assignments: S_attest := S_attest.On)
    Edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off)
    Edge: (event: S_atdrill_u_on) (guard: S_atdrill.Off) (assignments: S_atdrill := S_atdrill.On)
    Edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off)
    Edge: (event: S_atexit_u_on) (guard: S_atexit.Off) (assignments: S_atexit := S_atexit.On)
    Edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off)
    Edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On)
    Edge: (event: S_test_ok_u_off) (guard: S_test_ok.On) (assignments: S_test_ok := S_test_ok.Off)
    Edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_drill_c_off) (guard: S_drill_up.On and ClampDrill.seven and (A_drill.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight)
    Edge: (event: A_drill_c_on) (guard: S_clamp.On and S_drill_up.On and (ClampDrill.two and (A_drill.Off and S_Pinitialized.On))) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three)
    Edge: (event: A_turntable_c_off) (guard: S_Pinitialized.On and (A_turntable.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One)
    Edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one)
    Edge: (event: A_drilldown_c_off) (guard: A_drilldown.On and (S_drill_down.On and ClampDrill.five)) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six)
    Edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off and S_drill_up.On and (ClampDrill.four and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five)
    Edge: (event: A_drillup_c_off) (guard: A_drillup.On and S_drill_up.On and (ClampDrill.three and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four)
    Edge: (event: A_drillup_c_on) (guard: A_drillup.Off and (S_drill_down.On and ClampDrill.six)) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven)
    Edge: (event: A_clamp_c_off) (guard: S_drill_up.On and ClampDrill.eight and (A_clamp.On and (A_drill.Off and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine)
    Edge: (event: A_clamp_c_on) (guard: <bdd 11n 1p>) (assignments: A_clamp := A_clamp.On, ClampDrill := ClampDrill.two)
    Edge: (event: A_tester_c_off) (guard: S_Pinitialized.On and A_tester.On and (Tester.Two and S_test_ok.On)) (assignments: A_tester := A_tester.Off, Tester := Tester.Three)
    Edge: (event: A_tester_c_on) (guard: S_attest.On and (S_Pinitialized.On and A_turntable.Off) and (PTimer.Timeout and S_turntable.On and (A_tester.Off and Tester.One))) (assignments: A_tester := A_tester.On, Tester := Tester.Two)
    Edge: (event: A_eject_c_off) (guard: S_Pinitialized.On and A_eject.On and (S_atexit.Off and A_conveyer.Off)) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: S_Pinitialized.On and (A_turntable.Off and PTimer.Timeout) and (S_turntable.On and (A_eject.Off and S_atexit.On))) (assignments: A_eject := A_eject.On)
    Edge: (event: PTimer_c_on) (guard: S_Pinitialized.On and (PTimer.Off and S_turntable.On)) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: S_Pinitialized.On and (PTimer.Running and S_turntable.Off)) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: S_Pinitialized.On and (PTimer.Timeout and S_turntable.Off)) (assignments: PTimer := PTimer.Off)
    Edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off)
    Edge: (event: S_product_u_on) (guard: S_product.Off) (assignments: S_product := S_product.On)
    Edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off)
    Edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On)
    Edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off)
    Edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off)
    Edge: (event: S_gate1_opened_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_opened := S_gate1_opened.On)
    Edge: (event: S_gate1_closed_u_off) (guard: S_gate1_closed.On) (assignments: S_gate1_closed := S_gate1_closed.Off)
    Edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On)
    Edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off)
    Edge: (event: S_gate2_opened_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_opened := S_gate2_opened.On)
    Edge: (event: S_gate2_closed_u_off) (guard: S_gate2_closed.On) (assignments: S_gate2_closed := S_gate2_closed.Off)
    Edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_conveyer_c_off) (guard: A_conveyer.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_conveyer := A_conveyer.Off)
    Edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off and (S_Sinitialized.On and S_product.On)) (assignments: A_conveyer := A_conveyer.On)
    Edge: (event: A_gate1_c_off) (guard: S_gate1_closed.On and A_gate1.On and (A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On))) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: S_gate1_opened.On and (S_inductive.Off and S_optical.On) and (A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate1 := A_gate1.On)
    Edge: (event: A_gate2_c_off) (guard: S_gate2_closed.On and A_gate2.On and (A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On))) (assignments: A_gate2 := A_gate2.Off)
    Edge: (event: A_gate2_c_on) (guard: S_gate2_opened.On and (S_inductive.On and S_optical.On) and (A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate2 := A_gate2.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout)) (assignments: A_stopperretract := A_stopperretract.On)
    Edge: (event: STimer_c_on) (guard: STimer.Off and S_product.On) (assignments: STimer := STimer.Running)
    Edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout)
    Edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Running) (assignments: STimer := STimer.Off)
    Edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "ClampDrill" (group: 6, domain: 12+13, BDD variables: 4, CIF/BDD values: 9/16)].
Controlled behavior: true -> true [range: true, variable: location pointer for automaton "PTimer" (group: 12, domain: 24+25, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> <bdd 8n 16p> [range: true, variable: location pointer for automaton "Tester" (group: 15, domain: 30+31, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 8n 16p> -> <bdd 10n 32p> [range: true, variable: location pointer for automaton "BTimer" (group: 19, domain: 38+39, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 10n 32p> -> <bdd 12n 64p> [range: true, variable: location pointer for automaton "STimer" (group: 41, domain: 82+83, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: <bdd 12n 64p> -> <bdd 14n 128p> [range: true, variable: location pointer for automaton "TTimer" (group: 51, domain: 102+103, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: <bdd 14n 128p>.

Restricting behavior using state/event exclusion requirements.

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 99n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 99n 1p> -> <bdd 98n 1p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 98n 1p> -> <bdd 97n 1p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 97n 1p> -> <bdd 96n 1p> [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 96n 1p> -> <bdd 95n 1p> [backward reach with edge: (event: S_pusher1_in_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_in := S_pusher1_in.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 95n 1p> -> <bdd 94n 1p> [backward reach with edge: (event: S_pusher1_out_u_off) (guard: S_pusher1_out.On) (assignments: S_pusher1_out := S_pusher1_out.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 94n 1p> -> <bdd 93n 1p> [backward reach with edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 93n 1p> -> <bdd 92n 1p> [backward reach with edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 92n 1p> -> <bdd 91n 1p> [backward reach with edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 91n 1p> -> <bdd 90n 1p> [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 90n 1p> -> <bdd 89n 1p> [backward reach with edge: (event: S_pusher3_in_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_in := S_pusher3_in.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 89n 1p> -> <bdd 88n 1p> [backward reach with edge: (event: S_pusher3_out_u_off) (guard: S_pusher3_out.On) (assignments: S_pusher3_out := S_pusher3_out.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 88n 1p> -> <bdd 87n 1p> [backward reach with edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 87n 1p> -> <bdd 86n 1p> [backward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 86n 1p> -> <bdd 97n 4p> [backward reach with edge: (event: A_pusher1_c_off) (guard: S_pusher1_out.On and S_stack1_filled.On and (A_pusher1.On and (S_Dinitialized.On and S_product1.Off))) (assignments: A_pusher1 := A_pusher1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 97n 4p> -> <bdd 117n 19p> [backward reach with edge: (event: A_pusher2_c_off) (guard: S_pusher2_out.On and S_stack2_filled.On and (S_Dinitialized.On and (A_pusher2.On and S_product2.Off))) (assignments: A_pusher2 := A_pusher2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 117n 19p> -> <bdd 149n 73p> [backward reach with edge: (event: A_pusher3_c_off) (guard: S_Dinitialized.On and S_pusher3_out.On and (S_stack3_filled.On and (A_pusher3.On and S_product3.Off))) (assignments: A_pusher3 := A_pusher3.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 149n 73p> -> <bdd 148n 73p> [backward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 148n 73p> -> <bdd 147n 73p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 147n 73p> -> <bdd 146n 73p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 146n 73p> -> <bdd 145n 73p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 145n 73p> -> <bdd 151n 219p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 151n 219p> -> <bdd 149n 219p> [backward reach with edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atup := S_zpos_atup.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 149n 219p> -> <bdd 148n 219p> [backward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 148n 219p> -> <bdd 147n 219p> [backward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 147n 219p> -> <bdd 139n 219p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 139n 219p> -> <bdd 131n 219p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 131n 219p> -> <bdd 147n 438p> [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 147n 438p> -> <bdd 145n 438p> [backward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 145n 438p> -> <bdd 144n 438p> [backward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 144n 438p> -> <bdd 147n 1,022p> [backward reach with edge: (event: A_x2distributing_c_on) (guard: S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.On and (A_x2distributing.Off and S_xpos_at3.On)) or S_transfer_athalfway.On and (S_Hinitialized.On and S_product4.On) and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.Off and (A_x2distributing.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and S_xpos_at3.On) or S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))))) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 147n 1,022p> -> <bdd 189n 7,972p> [backward reach with edge: (event: A_x2testing_c_on) (guard: <bdd 17n 15p>) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 189n 7,972p> -> <bdd 199n 13,080p> [backward reach with edge: (event: A_zdown_c_off) (guard: <bdd 16n 8p>) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 199n 13,080p> -> <bdd 201n 18,188p> [backward reach with edge: (event: A_gripperclose_c_off) (guard: S_Hinitialized.On and S_xpos_atdrop.On and (A_gripperclose.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 201n 18,188p> -> <bdd 244n 35,302p> [backward reach with edge: (event: A_vacuum_c_off) (guard: S_transfer_atdrop.On and (A_vacuum.On and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 244n 35,302p> -> <bdd 282n 94,664p> [backward reach with edge: (event: A_ejectpulse_c_off) (guard: S_vacuum.Off and (A_ejectpulse.On and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 282n 94,664p> -> <bdd 281n 94,664p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 281n 94,664p> -> <bdd 292n 189,328p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 292n 189,328p> -> <bdd 290n 189,328p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 290n 189,328p> -> <bdd 289n 189,328p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 289n 189,328p> -> <bdd 287n 189,328p> [backward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 287n 189,328p> -> <bdd 285n 189,328p> [backward reach with edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 285n 189,328p> -> <bdd 283n 189,328p> [backward reach with edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 283n 189,328p> -> <bdd 281n 189,328p> [backward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 281n 189,328p> -> <bdd 291n 662,648p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 291n 662,648p> -> <bdd 296n 757,312p> [backward reach with edge: (event: A_elevator_down_c_on) (guard: S_opticalT.Off and S_elevator_up.On and (S_pusher.Off and S_Tinitialized.On) and (PusherLift.Four and A_elevator_up.Off and (TTimer.Timeout and A_elevator_down.Off))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 296n 757,312p> -> <bdd 303n 1,325,296p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 303n 1,325,296p> -> <bdd 306n 2,650,592p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 306n 2,650,592p> -> <bdd 305n 2,650,592p> [backward reach with edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 305n 2,650,592p> -> <bdd 304n 2,650,592p> [backward reach with edge: (event: S_atseparator_u_off) (guard: S_atseparator.On) (assignments: S_atseparator := S_atseparator.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 304n 2,650,592p> -> <bdd 303n 2,650,592p> [backward reach with edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 303n 2,650,592p> -> <bdd 302n 2,650,592p> [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 302n 2,650,592p> -> <bdd 303n 5,301,184p> [backward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 303n 5,301,184p> -> <bdd 302n 5,301,184p> [backward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 302n 5,301,184p> -> <bdd 305n 13,252,960p> [backward reach with edge: (event: A_separator_c_on) (guard: S_Binitialized.On and A_separator.Off and (S_atseparator.On and S_separator_closed.On)) (assignments: A_separator := A_separator.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 305n 13,252,960p> -> <bdd 309n 34,457,696p> [backward reach with edge: (event: A_conveyerB_c_off) (guard: BTimer.Timeout and (A_conveyerB.On and S_Binitialized.On)) (assignments: A_conveyerB := A_conveyerB.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 309n 34,457,696p> -> <bdd 310n 55,662,432p> [backward reach with edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 310n 55,662,432p> -> <bdd 309n 55,662,432p> [backward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 309n 55,662,432p> -> <bdd 308n 55,662,432p> [backward reach with edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 308n 55,662,432p> -> <bdd 307n 55,662,432p> [backward reach with edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 307n 55,662,432p> -> <bdd 306n 55,662,432p> [backward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 306n 55,662,432p> -> <bdd 305n 55,662,432p> [backward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 305n 55,662,432p> -> <bdd 303n 55,662,432p> [backward reach with edge: (event: S_test_ok_u_off) (guard: S_test_ok.On) (assignments: S_test_ok := S_test_ok.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 303n 55,662,432p> -> <bdd 302n 55,662,432p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 302n 55,662,432p> -> <bdd 301n 55,662,432p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 301n 55,662,432p> -> <bdd 300n 55,662,432p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 300n 55,662,432p> -> <bdd 299n 55,662,432p> [backward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 299n 55,662,432p> -> <bdd 304n 166,987,296p> [backward reach with edge: (event: A_turntable_c_off) (guard: S_Pinitialized.On and (A_turntable.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 304n 166,987,296p> -> <bdd 311n 278,312,160p> [backward reach with edge: (event: A_eject_c_off) (guard: S_Pinitialized.On and A_eject.On and (S_atexit.Off and A_conveyer.Off)) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 311n 278,312,160p> -> <bdd 310n 389,637,024p> [backward reach with edge: (event: PTimer_c_reset) (guard: S_Pinitialized.On and (PTimer.Running and S_turntable.Off)) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 310n 389,637,024p> -> <bdd 311n 612,286,752p> [backward reach with edge: (event: PTimer_c_reset) (guard: S_Pinitialized.On and (PTimer.Timeout and S_turntable.Off)) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 311n 612,286,752p> -> <bdd 310n 612,286,752p> [backward reach with edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 310n 612,286,752p> -> <bdd 309n 612,286,752p> [backward reach with edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 309n 612,286,752p> -> <bdd 308n 612,286,752p> [backward reach with edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 308n 612,286,752p> -> <bdd 307n 612,286,752p> [backward reach with edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 307n 612,286,752p> -> <bdd 306n 612,286,752p> [backward reach with edge: (event: S_gate1_opened_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_opened := S_gate1_opened.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 306n 612,286,752p> -> <bdd 305n 612,286,752p> [backward reach with edge: (event: S_gate1_closed_u_off) (guard: S_gate1_closed.On) (assignments: S_gate1_closed := S_gate1_closed.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 305n 612,286,752p> -> <bdd 304n 612,286,752p> [backward reach with edge: (event: S_gate2_opened_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_opened := S_gate2_opened.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 304n 612,286,752p> -> <bdd 303n 612,286,752p> [backward reach with edge: (event: S_gate2_closed_u_off) (guard: S_gate2_closed.On) (assignments: S_gate2_closed := S_gate2_closed.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 303n 612,286,752p> -> <bdd 302n 612,286,752p> [backward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 302n 612,286,752p> -> <bdd 307n 1,224,573,504p> [backward reach with edge: (event: A_conveyer_c_off) (guard: A_conveyer.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_conveyer := A_conveyer.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 307n 1,224,573,504p> -> <bdd 310n 3,061,433,760p> [backward reach with edge: (event: A_gate1_c_off) (guard: S_gate1_closed.On and A_gate1.On and (A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On))) (assignments: A_gate1 := A_gate1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 310n 3,061,433,760p> -> <bdd 318n 7,347,441,024p> [backward reach with edge: (event: A_gate2_c_off) (guard: S_gate2_closed.On and A_gate2.On and (A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On))) (assignments: A_gate2 := A_gate2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 318n 7,347,441,024p> -> <bdd 317n 9,796,588,032p> [backward reach with edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_stopperretract := A_stopperretract.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 317n 9,796,588,032p> -> <bdd 318n 12,245,735,040p> [backward reach with edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Running) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 318n 12,245,735,040p> -> <bdd 319n 22,042,323,072p> [backward reach with edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 319n 22,042,323,072p> -> <bdd 241n 11,286,142,560p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 241n 11,286,142,560p> -> <bdd 225n 8,746,236,576p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 225n 8,746,236,576p> -> <bdd 221n 5,295,429,216p> [backward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 221n 5,295,429,216p> -> <bdd 191n 4,142,365,920p> [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 191n 4,142,365,920p> -> <bdd 192n 7,192,209,024p> [backward reach with edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_out := S_pusher1_out.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 192n 7,192,209,024p> -> <bdd 191n 5,007,163,392p> [backward reach with edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 191n 5,007,163,392p> -> <bdd 193n 8,647,974,720p> [backward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 193n 8,647,974,720p> -> <bdd 191n 5,915,270,592p> [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 191n 5,915,270,592p> -> <bdd 193n 9,403,333,632p> [backward reach with edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 193n 9,403,333,632p> -> <bdd 191n 5,915,270,592p> [backward reach with edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 191n 5,915,270,592p> -> <bdd 184n 3,139,256,736p> [backward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 184n 3,139,256,736p> -> <bdd 199n 10,645,810,560p> [backward reach with edge: (event: A_pusher2_c_off) (guard: S_pusher2_out.On and S_stack2_filled.On and (S_Dinitialized.On and (A_pusher2.On and S_product2.Off))) (assignments: A_pusher2 := A_pusher2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 199n 10,645,810,560p> -> <bdd 198n 10,645,810,560p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 198n 10,645,810,560p> -> <bdd 196n 10,432,056,096p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 196n 10,432,056,096p> -> <bdd 192n 9,042,652,080p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 192n 9,042,652,080p> -> <bdd 205n 14,529,016,656p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 205n 14,529,016,656p> -> <bdd 220n 24,072,524,784p> [backward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 220n 24,072,524,784p> -> <bdd 217n 24,072,524,784p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 217n 24,072,524,784p> -> <bdd 214n 24,072,524,784p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 214n 24,072,524,784p> -> <bdd 202n 15,289,731,072p> [backward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 202n 15,289,731,072p> -> <bdd 191n 6,506,937,360p> [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 191n 6,506,937,360p> -> <bdd 205n 17,458,710,192p> [backward reach with edge: (event: A_x2distributing_c_on) (guard: S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.On and (A_x2distributing.Off and S_xpos_at3.On)) or S_transfer_athalfway.On and (S_Hinitialized.On and S_product4.On) and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.Off and (A_x2distributing.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and S_xpos_at3.On) or S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))))) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 205n 17,458,710,192p> -> <bdd 303n 114,798,720,960p> [backward reach with edge: (event: A_x2testing_c_on) (guard: <bdd 17n 15p>) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 303n 114,798,720,960p> -> <bdd 330n 158,440,257,360p> [backward reach with edge: (event: A_vacuum_c_off) (guard: S_transfer_atdrop.On and (A_vacuum.On and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 330n 158,440,257,360p> -> <bdd 331n 147,123,096,120p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 331n 147,123,096,120p> -> <bdd 334n 158,440,257,360p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 334n 158,440,257,360p> -> <bdd 332n 135,805,934,880p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 332n 135,805,934,880p> -> <bdd 324n 101,854,451,160p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 324n 101,854,451,160p> -> <bdd 320n 90,537,289,920p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 320n 90,537,289,920p> -> <bdd 339n 328,197,675,960p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 339n 328,197,675,960p> -> <bdd 344n 328,197,675,960p> [backward reach with edge: (event: A_elevator_down_c_on) (guard: S_opticalT.Off and S_elevator_up.On and (S_pusher.Off and S_Tinitialized.On) and (PusherLift.Four and A_elevator_up.Off and (TTimer.Timeout and A_elevator_down.Off))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 344n 328,197,675,960p> -> <bdd 350n 441,369,288,360p> [backward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 350n 441,369,288,360p> -> <bdd 360n 622,443,868,200p> [backward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 360n 622,443,868,200p> -> <bdd 369n 656,395,351,920p> [backward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 369n 656,395,351,920p> -> <bdd 369n 667,712,513,160p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 369n 667,712,513,160p> -> <bdd 368n 667,712,513,160p> [backward reach with edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 368n 667,712,513,160p> -> <bdd 367n 413,345,841,480p> [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 367n 413,345,841,480p> -> <bdd 368n 572,325,011,280p> [backward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 368n 572,325,011,280p> -> <bdd 364n 286,162,505,640p> [backward reach with edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 364n 286,162,505,640p> -> <bdd 365n 381,550,007,520p> [backward reach with edge: (event: BTimer_c_on) (guard: BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 365n 381,550,007,520p> -> <bdd 363n 208,118,185,920p> [backward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 363n 208,118,185,920p> -> <bdd 359n 104,059,092,960p> [backward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 359n 104,059,092,960p> -> <bdd 351n 69,372,728,640p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 351n 69,372,728,640p> -> <bdd 371n 242,804,550,240p> [backward reach with edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 371n 242,804,550,240p> -> <bdd 381n 485,609,100,480p> [backward reach with edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 381n 485,609,100,480p> -> <bdd 380n 485,609,100,480p> [backward reach with edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 380n 485,609,100,480p> -> <bdd 384n 520,295,464,800p> [backward reach with edge: (event: A_clamp_c_off) (guard: S_drill_up.On and ClampDrill.eight and (A_clamp.On and (A_drill.Off and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 384n 520,295,464,800p> -> <bdd 394n 624,354,557,760p> [backward reach with edge: (event: A_tester_c_off) (guard: S_Pinitialized.On and A_tester.On and (Tester.Two and S_test_ok.On)) (assignments: A_tester := A_tester.Off, Tester := Tester.Three), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 394n 624,354,557,760p> -> <bdd 413n 786,224,257,920p> [backward reach with edge: (event: A_eject_c_off) (guard: S_Pinitialized.On and A_eject.On and (S_atexit.Off and A_conveyer.Off)) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 413n 786,224,257,920p> -> <bdd 415n 1,190,898,508,320p> [backward reach with edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 415n 1,190,898,508,320p> -> <bdd 412n 1,048,299,010,560p> [backward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 412n 1,048,299,010,560p> -> <bdd 414n 1,643,748,264,720p> [backward reach with edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 414n 1,643,748,264,720p> -> <bdd 418n 2,572,572,020,400p> [backward reach with edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 418n 2,572,572,020,400p> -> <bdd 403n 641,697,739,920p> [backward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 403n 641,697,739,920p> -> <bdd 414n 849,815,925,840p> [backward reach with edge: (event: A_conveyer_c_off) (guard: A_conveyer.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_conveyer := A_conveyer.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 414n 849,815,925,840p> -> <bdd 356n 365,700,167,280p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 356n 365,700,167,280p> -> <bdd 326n 208,562,059,440p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 326n 208,562,059,440p> -> <bdd 290n 106,759,495,584p> [backward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 290n 106,759,495,584p> -> <bdd 282n 35,586,498,528p> [backward reach with edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 282n 35,586,498,528p> -> <bdd 279n 19,115,847,072p> [backward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 279n 19,115,847,072p> -> <bdd 280n 32,791,433,472p> [backward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 280n 32,791,433,472p> -> <bdd 279n 21,910,912,128p> [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 279n 21,910,912,128p> -> <bdd 273n 7,303,637,376p> [backward reach with edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 273n 7,303,637,376p> -> <bdd 272n 3,676,796,928p> [backward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 272n 3,676,796,928p> -> <bdd 266n 2,997,388,800p> [backward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 266n 2,997,388,800p> -> <bdd 261n 2,907,467,136p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 261n 2,907,467,136p> -> <bdd 259n 2,882,488,896p> [backward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 259n 2,882,488,896p> -> <bdd 246n 2,342,958,912p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 246n 2,342,958,912p> -> <bdd 240n 1,448,737,920p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 240n 1,448,737,920p> -> <bdd 244n 1,473,716,160p> [backward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 244n 1,473,716,160p> -> <bdd 249n 1,573,629,120p> [backward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 249n 1,573,629,120p> -> <bdd 227n 574,499,520p> [backward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 227n 574,499,520p> -> <bdd 229n 793,059,120p> [backward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 229n 793,059,120p> -> <bdd 233n 1,130,265,360p> [backward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 233n 1,130,265,360p> -> <bdd 209n 74,934,720p> [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 209n 74,934,720p> -> <bdd 250n 940,430,736p> [backward reach with edge: (event: A_x2testing_c_on) (guard: <bdd 17n 15p>) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 250n 940,430,736p> -> <bdd 255n 1,007,871,984p> [backward reach with edge: (event: A_zdown_c_off) (guard: <bdd 16n 8p>) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 255n 1,007,871,984p> -> <bdd 258n 1,090,300,176p> [backward reach with edge: (event: A_gripperclose_c_off) (guard: S_Hinitialized.On and S_xpos_atdrop.On and (A_gripperclose.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 258n 1,090,300,176p> -> <bdd 246n 1,164,218,832p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 246n 1,164,218,832p> -> <bdd 263n 1,238,137,488p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 263n 1,238,137,488p> -> <bdd 258n 1,238,137,488p> [backward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 258n 1,238,137,488p> -> <bdd 265n 1,275,096,816p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 265n 1,275,096,816p> -> <bdd 250n 776,145,888p> [backward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 250n 776,145,888p> -> <bdd 242n 443,511,936p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 242n 443,511,936p> -> <bdd 239n 443,511,936p> [backward reach with edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 239n 443,511,936p> -> <bdd 230n 314,154,288p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 230n 314,154,288p> -> <bdd 255n 1,154,979,000p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 255n 1,154,979,000p> -> <bdd 257n 1,164,218,832p> [backward reach with edge: (event: A_elevator_down_c_on) (guard: S_opticalT.Off and S_elevator_up.On and (S_pusher.Off and S_Tinitialized.On) and (PusherLift.Four and A_elevator_up.Off and (TTimer.Timeout and A_elevator_down.Off))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 257n 1,164,218,832p> -> <bdd 271n 1,718,608,752p> [backward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 271n 1,718,608,752p> -> <bdd 287n 2,254,519,008p> [backward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 287n 2,254,519,008p> -> <bdd 296n 2,550,193,632p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 296n 2,550,193,632p> -> <bdd 303n 2,688,791,112p> [backward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 303n 2,688,791,112p> -> <bdd 296n 2,688,791,112p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 296n 2,688,791,112p> -> <bdd 284n 1,344,395,556p> [backward reach with edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 284n 1,344,395,556p> -> <bdd 278n 448,131,852p> [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 278n 448,131,852p> -> <bdd 274n 448,131,852p> [backward reach with edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 274n 448,131,852p> -> <bdd 272n 448,131,852p> [backward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 272n 448,131,852p> -> <bdd 269n 429,840,756p> [backward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 269n 429,840,756p> -> <bdd 262n 429,840,756p> [backward reach with edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 262n 429,840,756p> -> <bdd 263n 841,390,416p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 263n 841,390,416p> -> <bdd 255n 411,549,660p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 255n 411,549,660p> -> <bdd 253n 393,258,564p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 253n 393,258,564p> -> <bdd 251n 374,967,468p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 251n 374,967,468p> -> <bdd 259n 859,681,512p> [backward reach with edge: (event: A_drill_c_off) (guard: S_drill_up.On and ClampDrill.seven and (A_drill.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 259n 859,681,512p> -> <bdd 271n 2,432,715,768p> [backward reach with edge: (event: A_turntable_c_off) (guard: S_Pinitialized.On and (A_turntable.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 271n 2,432,715,768p> -> <bdd 275n 2,652,208,920p> [backward reach with edge: (event: A_drillup_c_on) (guard: A_drillup.Off and (S_drill_down.On and ClampDrill.six)) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 275n 2,652,208,920p> -> <bdd 281n 3,109,486,320p> [backward reach with edge: (event: PTimer_c_on) (guard: S_Pinitialized.On and (PTimer.Off and S_turntable.On)) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 281n 3,109,486,320p> -> <bdd 280n 3,109,486,320p> [backward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 280n 3,109,486,320p> -> <bdd 268n 1,036,495,440p> [backward reach with edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 268n 1,036,495,440p> -> <bdd 262n 345,498,480p> [backward reach with edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 262n 345,498,480p> -> <bdd 252n 119,908,296p> [backward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward reachability: iteration 4.
Backward controlled-behavior: <bdd 252n 119,908,296p> -> <bdd 237n 49,034,664p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 237n 49,034,664p> -> <bdd 230n 32,552,424p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 230n 32,552,424p> -> <bdd 215n 14,009,904p> [backward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 215n 14,009,904p> -> <bdd 214n 14,009,904p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 214n 14,009,904p> -> <bdd 214n 12,773,736p> [backward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 214n 12,773,736p> -> <bdd 208n 8,653,176p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 208n 8,653,176p> -> <bdd 197n 4,532,616p> [backward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 197n 4,532,616p> -> <bdd 194n 1,510,872p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 194n 1,510,872p> -> <bdd 180n 137,352p> [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 180n 137,352p> -> <bdd 204n 141,128p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 204n 141,128p> -> <bdd 199n 141,128p> [backward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 199n 141,128p> -> <bdd 190n 136,408p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 190n 136,408p> -> <bdd 206n 140,656p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 206n 140,656p> -> <bdd 173n 78,824p> [backward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 173n 78,824p> -> <bdd 152n 41,536p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 152n 41,536p> -> <bdd 141n 38,704p> [backward reach with edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 141n 38,704p> -> <bdd 114n 22,656p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 114n 22,656p> -> <bdd 136n 74,576p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 136n 74,576p> -> <bdd 155n 119,888p> [backward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 155n 119,888p> -> <bdd 167n 149,152p> [backward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 167n 149,152p> -> <bdd 173n 166,144p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 173n 166,144p> -> <bdd 180n 173,224p> [backward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 180n 173,224p> -> <bdd 177n 173,224p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 177n 173,224p> -> <bdd 178n 259,836p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 178n 259,836p> -> <bdd 174n 101,292p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 174n 101,292p> -> <bdd 166n 98,356p> [backward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 166n 98,356p> -> <bdd 161n 82,208p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 161n 82,208p> -> <bdd 154n 60,188p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 154n 60,188p> -> <bdd 164n 135,056p> [backward reach with edge: (event: A_turntable_c_off) (guard: S_Pinitialized.On and (A_turntable.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 164n 135,056p> -> <bdd 168n 161,480p> [backward reach with edge: (event: A_drilldown_c_off) (guard: A_drilldown.On and (S_drill_down.On and ClampDrill.five)) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 168n 161,480p> -> <bdd 174n 176,160p> [backward reach with edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off and S_drill_up.On and (ClampDrill.four and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 174n 176,160p> -> <bdd 179n 408,104p> [backward reach with edge: (event: A_drillup_c_off) (guard: A_drillup.On and S_drill_up.On and (ClampDrill.three and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 179n 408,104p> -> <bdd 180n 434,528p> [backward reach with edge: (event: A_drillup_c_on) (guard: A_drillup.Off and (S_drill_down.On and ClampDrill.six)) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 180n 434,528p> -> <bdd 172n 280,388p> [backward reach with edge: (event: PTimer_c_on) (guard: S_Pinitialized.On and (PTimer.Off and S_turntable.On)) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward reachability: iteration 5.
Backward controlled-behavior: <bdd 172n 280,388p> -> <bdd 160n 263,580p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 160n 263,580p> -> <bdd 191n 275,040p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 191n 275,040p> -> <bdd 184n 273,512p> [backward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 184n 273,512p> -> <bdd 168n 263,580p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 168n 263,580p> -> <bdd 186n 265,108p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 186n 265,108p> -> <bdd 152n 151,272p> [backward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 152n 151,272p> -> <bdd 132n 76,400p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 132n 76,400p> -> <bdd 116n 66,468p> [backward reach with edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 116n 66,468p> -> <bdd 95n 32,088p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 95n 32,088p> -> <bdd 107n 75,636p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 107n 75,636p> -> <bdd 120n 129,116p> [backward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 120n 129,116p> -> <bdd 128n 150,508p> [backward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 128n 150,508p> -> <bdd 131n 174,956p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 131n 174,956p> -> <bdd 131n 172,664p> [backward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 131n 172,664p> -> <bdd 126n 172,664p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 126n 172,664p> -> <bdd 127n 183,512p> [backward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 127n 183,512p> -> <bdd 109n 50,624p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 109n 50,624p> -> <bdd 121n 104,864p> [backward reach with edge: (event: A_drill_c_on) (guard: S_clamp.On and S_drill_up.On and (ClampDrill.two and (A_drill.Off and S_Pinitialized.On))) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 121n 104,864p> -> <bdd 120n 104,864p> [backward reach with edge: (event: A_drilldown_c_off) (guard: A_drilldown.On and (S_drill_down.On and ClampDrill.five)) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward reachability: iteration 6.
Backward controlled-behavior: <bdd 120n 104,864p> -> <bdd 114n 92,336p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 114n 92,336p> -> <bdd 118n 94,656p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 118n 94,656p> -> <bdd 114n 84,912p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 114n 84,912p> -> <bdd 121n 84,912p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 121n 84,912p> -> <bdd 108n 47,792p> [backward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 108n 47,792p> -> <bdd 99n 28,768p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 99n 28,768p> -> <bdd 93n 25,984p> [backward reach with edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 93n 25,984p> -> <bdd 63n 2,784p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 63n 2,784p> -> <bdd 57n 1,440p> [backward reach with edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 57n 1,440p> -> <bdd 56n 1,440p> [backward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 56n 1,440p> -> <bdd 57n 1,536p> [backward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 57n 1,536p> -> <bdd 53n 1,536p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward reachability: iteration 7.
Backward controlled-behavior: <bdd 53n 1,536p> -> <bdd 51n 1,440p> [backward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 51n 1,440p> -> <bdd 59n 1,632p> [backward reach with edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off and S_drill_up.On and (ClampDrill.four and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 59n 1,632p> -> <bdd 63n 2,016p> [backward reach with edge: (event: A_drillup_c_off) (guard: A_drillup.On and S_drill_up.On and (ClampDrill.three and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward reachability: iteration 8.
Backward controlled-behavior: <bdd 63n 2,016p> -> <bdd 61n 1,632p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 61n 1,632p> -> <bdd 58n 1,824p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 58n 1,824p> -> <bdd 47n 1,248p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 47n 1,248p> -> <bdd 59n 2,880p> [backward reach with edge: (event: A_drill_c_on) (guard: S_clamp.On and S_drill_up.On and (ClampDrill.two and (A_drill.Off and S_Pinitialized.On))) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward reachability: iteration 9.
Backward controlled-behavior: <bdd 59n 2,880p> -> <bdd 55n 1,632p> [backward reach with edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 55n 1,632p> -> <bdd 54n 1,344p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 54n 1,344p> -> <bdd 52n 1,440p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward controlled-behavior: <bdd 52n 1,440p> -> <bdd 43n 672p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 14n 128p>]
Backward reachability: iteration 10.
Backward controlled-behavior: <bdd 43n 672p> [fixed point].
Controlled behavior: <bdd 14n 128p> -> <bdd 43n 672p>.

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 43n 1,507p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 103n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 103n 1p> -> <bdd 102n 1p> [forward reach with edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 102n 1p> -> <bdd 101n 1p> [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 101n 1p> -> <bdd 100n 1p> [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 100n 1p> -> <bdd 99n 1p> [forward reach with edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 99n 1p> -> <bdd 100n 2p> [forward reach with edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_out := S_pusher1_out.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 100n 2p> -> <bdd 99n 2p> [forward reach with edge: (event: S_stack1_filled_u_off) (guard: S_stack1_filled.On) (assignments: S_stack1_filled := S_stack1_filled.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 99n 2p> -> <bdd 98n 2p> [forward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 98n 2p> -> <bdd 99n 4p> [forward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 99n 4p> -> <bdd 98n 4p> [forward reach with edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 98n 4p> -> <bdd 97n 4p> [forward reach with edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 97n 4p> -> <bdd 98n 8p> [forward reach with edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 98n 8p> -> <bdd 97n 8p> [forward reach with edge: (event: S_stack3_filled_u_off) (guard: S_stack3_filled.On) (assignments: S_stack3_filled := S_stack3_filled.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 97n 8p> -> <bdd 96n 8p> [forward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 96n 8p> -> <bdd 112n 16p> [forward reach with edge: (event: A_pusher1_c_on) (guard: S_pusher1_in.On and A_pusher1.Off and (S_Dinitialized.On and S_product1.Off)) (assignments: A_pusher1 := A_pusher1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 112n 16p> -> <bdd 136n 30p> [forward reach with edge: (event: A_pusher2_c_on) (guard: S_pusher2_in.On and S_Dinitialized.On and (A_pusher2.Off and S_product2.Off)) (assignments: A_pusher2 := A_pusher2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 136n 30p> -> <bdd 170n 48p> [forward reach with edge: (event: A_pusher3_c_on) (guard: S_Dinitialized.On and S_pusher3_in.On and (A_pusher3.Off and S_product3.Off)) (assignments: A_pusher3 := A_pusher3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 170n 48p> -> <bdd 169n 48p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 169n 48p> -> <bdd 168n 48p> [forward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 168n 48p> -> <bdd 167n 48p> [forward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 167n 48p> -> <bdd 171n 96p> [forward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 171n 96p> -> <bdd 170n 96p> [forward reach with edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 170n 96p> -> <bdd 162n 96p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 162n 96p> -> <bdd 160n 96p> [forward reach with edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 160n 96p> -> <bdd 159n 96p> [forward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 159n 96p> -> <bdd 167n 240p> [forward reach with edge: (event: A_x2testing_c_off) (guard: <bdd 28n 12p>) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 167n 240p> -> <bdd 173n 528p> [forward reach with edge: (event: A_zdown_c_on) (guard: <bdd 85n 32p>) (assignments: A_zdown := A_zdown.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 173n 528p> -> <bdd 226n 1,488p> [forward reach with edge: (event: A_transfer2droppos_c_on) (guard: S_elevator_down.On and (S_capacitive.On and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.Off and S_transfer_athalfway.On) and (A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (S_transfer_athalfway.Off and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.Off and (A_transfer2droppos.Off and S_transfer_atpickup.On) and (A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 226n 1,488p> -> <bdd 225n 1,488p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 225n 1,488p> -> <bdd 224n 1,488p> [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 224n 1,488p> -> <bdd 223n 1,488p> [forward reach with edge: (event: S_opticalT_u_on) (guard: S_opticalT.Off) (assignments: S_opticalT := S_opticalT.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 223n 1,488p> -> <bdd 221n 1,488p> [forward reach with edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 221n 1,488p> -> <bdd 220n 1,488p> [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 220n 1,488p> -> <bdd 219n 1,488p> [forward reach with edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 219n 1,488p> -> <bdd 218n 1,488p> [forward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 218n 1,488p> -> <bdd 222n 2,976p> [forward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 222n 2,976p> -> <bdd 223n 4,464p> [forward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 223n 4,464p> -> <bdd 222n 4,464p> [forward reach with edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 222n 4,464p> -> <bdd 221n 4,464p> [forward reach with edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 221n 4,464p> -> <bdd 220n 4,464p> [forward reach with edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 220n 4,464p> -> <bdd 219n 4,464p> [forward reach with edge: (event: S_separator_closed_u_off) (guard: S_separator_closed.On) (assignments: S_separator_closed := S_separator_closed.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 219n 4,464p> -> <bdd 218n 4,464p> [forward reach with edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 218n 4,464p> -> <bdd 222n 8,928p> [forward reach with edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off and (S_Binitialized.On and S_atin.On)) (assignments: A_conveyerB := A_conveyerB.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 222n 8,928p> -> <bdd 224n 17,856p> [forward reach with edge: (event: BTimer_c_on) (guard: BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 224n 17,856p> -> <bdd 224n 26,784p> [forward reach with edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 224n 26,784p> -> <bdd 223n 26,784p> [forward reach with edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 223n 26,784p> -> <bdd 222n 26,784p> [forward reach with edge: (event: S_attest_u_on) (guard: S_attest.Off) (assignments: S_attest := S_attest.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 222n 26,784p> -> <bdd 221n 26,784p> [forward reach with edge: (event: S_atdrill_u_on) (guard: S_atdrill.Off) (assignments: S_atdrill := S_atdrill.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 221n 26,784p> -> <bdd 220n 26,784p> [forward reach with edge: (event: S_atexit_u_on) (guard: S_atexit.Off) (assignments: S_atexit := S_atexit.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 220n 26,784p> -> <bdd 219n 26,784p> [forward reach with edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 219n 26,784p> -> <bdd 218n 26,784p> [forward reach with edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 218n 26,784p> -> <bdd 217n 26,784p> [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 217n 26,784p> -> <bdd 218n 53,568p> [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 218n 53,568p> -> <bdd 217n 53,568p> [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 217n 53,568p> -> <bdd 216n 53,568p> [forward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 216n 53,568p> -> <bdd 221n 160,704p> [forward reach with edge: (event: PTimer_c_on) (guard: S_Pinitialized.On and (PTimer.Off and S_turntable.On)) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 221n 160,704p> -> <bdd 222n 214,272p> [forward reach with edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 222n 214,272p> -> <bdd 221n 214,272p> [forward reach with edge: (event: S_product_u_on) (guard: S_product.Off) (assignments: S_product := S_product.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 221n 214,272p> -> <bdd 220n 214,272p> [forward reach with edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 220n 214,272p> -> <bdd 219n 214,272p> [forward reach with edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 219n 214,272p> -> <bdd 218n 214,272p> [forward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 218n 214,272p> -> <bdd 217n 214,272p> [forward reach with edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 217n 214,272p> -> <bdd 218n 428,544p> [forward reach with edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 218n 428,544p> -> <bdd 217n 428,544p> [forward reach with edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 217n 428,544p> -> <bdd 218n 857,088p> [forward reach with edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 218n 857,088p> -> <bdd 217n 857,088p> [forward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 217n 857,088p> -> <bdd 228n 1,714,176p> [forward reach with edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off and (S_Sinitialized.On and S_product.On)) (assignments: A_conveyer := A_conveyer.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 228n 1,714,176p> -> <bdd 227n 2,571,264p> [forward reach with edge: (event: STimer_c_on) (guard: STimer.Off and S_product.On) (assignments: STimer := STimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 227n 2,571,264p> -> <bdd 228n 4,285,440p> [forward reach with edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 228n 4,285,440p> -> <bdd 174n 4,285,440p> [forward reach with edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 174n 4,285,440p> -> <bdd 147n 3,214,080p> [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 147n 3,214,080p> -> <bdd 132n 2,499,840p> [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 132n 2,499,840p> -> <bdd 131n 1,785,600p> [forward reach with edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 131n 1,785,600p> -> <bdd 127n 2,142,720p> [forward reach with edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_out := S_pusher1_out.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 127n 2,142,720p> -> <bdd 128n 3,214,080p> [forward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 128n 3,214,080p> -> <bdd 123n 2,142,720p> [forward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 123n 2,142,720p> -> <bdd 124n 2,856,960p> [forward reach with edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 124n 2,856,960p> -> <bdd 123n 2,142,720p> [forward reach with edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 123n 2,142,720p> -> <bdd 116n 714,240p> [forward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 116n 714,240p> -> <bdd 113n 506,880p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 113n 506,880p> -> <bdd 117n 875,520p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 117n 875,520p> -> <bdd 117n 1,244,160p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 117n 1,244,160p> -> <bdd 119n 1,612,800p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 119n 1,612,800p> -> <bdd 118n 1,612,800p> [forward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 118n 1,612,800p> -> <bdd 117n 1,612,800p> [forward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 117n 1,612,800p> -> <bdd 117n 1,751,040p> [forward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 117n 1,751,040p> -> <bdd 116n 1,198,080p> [forward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 116n 1,198,080p> -> <bdd 115n 1,198,080p> [forward reach with edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 115n 1,198,080p> -> <bdd 115n 1,198,080p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 115n 1,198,080p> -> <bdd 116n 1,658,880p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 116n 1,658,880p> -> <bdd 116n 1,935,360p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 116n 1,935,360p> -> <bdd 115n 1,935,360p> [forward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 115n 1,935,360p> -> <bdd 103n 1,105,920p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 103n 1,105,920p> -> <bdd 127n 2,741,760p> [forward reach with edge: (event: A_x2distributing_c_off) (guard: <bdd 15n 7p>) (assignments: A_x2distributing := A_x2distributing.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 127n 2,741,760p> -> <bdd 179n 22,417,920p> [forward reach with edge: (event: A_x2testing_c_off) (guard: <bdd 28n 12p>) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 179n 22,417,920p> -> <bdd 240n 35,642,880p> [forward reach with edge: (event: A_zdown_c_on) (guard: <bdd 85n 32p>) (assignments: A_zdown := A_zdown.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 240n 35,642,880p> -> <bdd 253n 42,554,880p> [forward reach with edge: (event: A_gripperclose_c_on) (guard: S_Hinitialized.On and S_xpos_at3.On and (A_gripperclose.Off and S_zpos_atdown.On) or (S_Hinitialized.On and S_xpos_at3.Off and (S_xpos_at2.On and (A_gripperclose.Off and S_zpos_atdown.On)) or S_Hinitialized.On and (S_xpos_at3.Off and S_xpos_at2.Off) and (S_xpos_at1.On and (A_gripperclose.Off and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 253n 42,554,880p> -> <bdd 318n 74,718,720p> [forward reach with edge: (event: A_transfer2pickpos_c_on) (guard: <bdd 13n 3p>) (assignments: A_transfer2pickpos := A_transfer2pickpos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 318n 74,718,720p> -> <bdd 327n 81,423,360p> [forward reach with edge: (event: A_transfer2droppos_c_on) (guard: S_elevator_down.On and (S_capacitive.On and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.Off and S_transfer_athalfway.On) and (A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (S_transfer_athalfway.Off and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.Off and (A_transfer2droppos.Off and S_transfer_atpickup.On) and (A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 327n 81,423,360p> -> <bdd 336n 88,128,000p> [forward reach with edge: (event: A_vacuum_c_on) (guard: S_transfer_atpickup.On and (A_vacuum.Off and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 336n 88,128,000p> -> <bdd 359n 103,749,120p> [forward reach with edge: (event: A_ejectpulse_c_on) (guard: S_transfer_atdrop.On and S_vacuum.On and (A_ejectpulse.Off and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 359n 103,749,120p> -> <bdd 372n 207,498,240p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 372n 207,498,240p> -> <bdd 362n 138,332,160p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 362n 138,332,160p> -> <bdd 381n 287,447,040p> [forward reach with edge: (event: A_elevator_down_c_off) (guard: <bdd 11n 1p>) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 381n 287,447,040p> -> <bdd 408n 465,753,600p> [forward reach with edge: (event: A_airslide_c_on) (guard: S_atin.Off and A_airslide.Off and (S_elevator_up.On and (S_pusher.On and S_Tinitialized.On))) (assignments: A_airslide := A_airslide.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 408n 465,753,600p> -> <bdd 407n 465,753,600p> [forward reach with edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 407n 465,753,600p> -> <bdd 406n 322,030,080p> [forward reach with edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 406n 322,030,080p> -> <bdd 404n 214,686,720p> [forward reach with edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 404n 214,686,720p> -> <bdd 406n 429,373,440p> [forward reach with edge: (event: S_separator_opened_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_opened := S_separator_opened.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 406n 429,373,440p> -> <bdd 405n 429,373,440p> [forward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 405n 429,373,440p> -> <bdd 422n 1,717,493,760p> [forward reach with edge: (event: A_separator_c_off) (guard: S_turntable.On and (S_atinput.Off and S_Binitialized.On) and (A_separator.On and (S_atseparator.Off and S_separator_opened.On))) (assignments: A_separator := A_separator.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 422n 1,717,493,760p> -> <bdd 427n 2,718,167,040p> [forward reach with edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off and (S_Binitialized.On and S_atin.On)) (assignments: A_conveyerB := A_conveyerB.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 427n 2,718,167,040p> -> <bdd 426n 1,859,420,160p> [forward reach with edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 426n 1,859,420,160p> -> <bdd 413n 1,072,535,040p> [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 413n 1,072,535,040p> -> <bdd 410n 715,023,360p> [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 410n 715,023,360p> -> <bdd 431n 2,323,825,920p> [forward reach with edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 431n 2,323,825,920p> -> <bdd 453n 5,541,431,040p> [forward reach with edge: (event: A_clamp_c_on) (guard: <bdd 11n 1p>) (assignments: A_clamp := A_clamp.On, ClampDrill := ClampDrill.two), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 453n 5,541,431,040p> -> <bdd 470n 20,199,409,920p> [forward reach with edge: (event: A_tester_c_on) (guard: S_attest.On and (S_Pinitialized.On and A_turntable.Off) and (PTimer.Timeout and S_turntable.On and (A_tester.Off and Tester.One))) (assignments: A_tester := A_tester.On, Tester := Tester.Two), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 470n 20,199,409,920p> -> <bdd 480n 34,678,632,960p> [forward reach with edge: (event: A_eject_c_on) (guard: S_Pinitialized.On and (A_turntable.Off and PTimer.Timeout) and (S_turntable.On and (A_eject.Off and S_atexit.On))) (assignments: A_eject := A_eject.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 480n 34,678,632,960p> -> <bdd 474n 27,742,906,368p> [forward reach with edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 474n 27,742,906,368p> -> <bdd 456n 13,871,453,184p> [forward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 456n 13,871,453,184p> -> <bdd 478n 38,146,496,256p> [forward reach with edge: (event: A_gate1_c_on) (guard: S_gate1_opened.On and (S_inductive.Off and S_optical.On) and (A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate1 := A_gate1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 478n 38,146,496,256p> -> <bdd 492n 79,760,855,808p> [forward reach with edge: (event: A_gate2_c_on) (guard: S_gate2_opened.On and (S_inductive.On and S_optical.On) and (A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate2 := A_gate2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 492n 79,760,855,808p> -> <bdd 496n 124,843,078,656p> [forward reach with edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout)) (assignments: A_stopperretract := A_stopperretract.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 496n 124,843,078,656p> -> <bdd 500n 135,246,668,544p> [forward reach with edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 500n 135,246,668,544p> -> <bdd 403n 72,340,886,592p> [forward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 403n 72,340,886,592p> -> <bdd 395n 73,121,455,680p> [forward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 395n 73,121,455,680p> -> <bdd 350n 37,518,401,856p> [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 350n 37,518,401,856p> -> <bdd 348n 38,037,489,984p> [forward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 348n 38,037,489,984p> -> <bdd 325n 19,229,987,712p> [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 325n 19,229,987,712p> -> <bdd 324n 19,229,987,712p> [forward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 324n 19,229,987,712p> -> <bdd 323n 16,525,112,448p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 323n 16,525,112,448p> -> <bdd 320n 15,873,346,944p> [forward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 320n 15,873,346,944p> -> <bdd 322n 18,341,436,672p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 322n 18,341,436,672p> -> <bdd 314n 19,877,395,200p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 314n 19,877,395,200p> -> <bdd 311n 19,877,395,200p> [forward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 311n 19,877,395,200p> -> <bdd 301n 16,321,738,368p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 301n 16,321,738,368p> -> <bdd 300n 16,321,738,368p> [forward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 300n 16,321,738,368p> -> <bdd 306n 17,231,111,040p> [forward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 306n 17,231,111,040p> -> <bdd 304n 17,231,111,040p> [forward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 304n 17,231,111,040p> -> <bdd 302n 15,798,776,448p> [forward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 302n 15,798,776,448p> -> <bdd 296n 17,556,993,792p> [forward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 296n 17,556,993,792p> -> <bdd 295n 17,556,993,792p> [forward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 295n 17,556,993,792p> -> <bdd 289n 14,821,128,192p> [forward reach with edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 289n 14,821,128,192p> -> <bdd 292n 18,249,434,112p> [forward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 292n 18,249,434,112p> -> <bdd 288n 17,261,617,152p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 288n 17,261,617,152p> -> <bdd 291n 21,677,740,032p> [forward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 291n 21,677,740,032p> -> <bdd 288n 20,689,923,072p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 288n 20,689,923,072p> -> <bdd 287n 20,689,923,072p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 287n 20,689,923,072p> -> <bdd 291n 28,185,710,592p> [forward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 291n 28,185,710,592p> -> <bdd 287n 18,946,716,672p> [forward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 287n 18,946,716,672p> -> <bdd 285n 18,946,716,672p> [forward reach with edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 285n 18,946,716,672p> -> <bdd 275n 10,129,966,080p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 275n 10,129,966,080p> -> <bdd 316n 29,310,805,056p> [forward reach with edge: (event: A_x2distributing_c_off) (guard: <bdd 15n 7p>) (assignments: A_x2distributing := A_x2distributing.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 316n 29,310,805,056p> -> <bdd 408n 225,315,722,112p> [forward reach with edge: (event: A_x2testing_c_off) (guard: <bdd 28n 12p>) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 408n 225,315,722,112p> -> <bdd 429n 279,938,368,320p> [forward reach with edge: (event: A_gripperclose_c_on) (guard: S_Hinitialized.On and S_xpos_at3.On and (A_gripperclose.Off and S_zpos_atdown.On) or (S_Hinitialized.On and S_xpos_at3.Off and (S_xpos_at2.On and (A_gripperclose.Off and S_zpos_atdown.On)) or S_Hinitialized.On and (S_xpos_at3.Off and S_xpos_at2.Off) and (S_xpos_at1.On and (A_gripperclose.Off and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 429n 279,938,368,320p> -> <bdd 500n 433,043,217,984p> [forward reach with edge: (event: A_transfer2pickpos_c_on) (guard: <bdd 13n 3p>) (assignments: A_transfer2pickpos := A_transfer2pickpos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 500n 433,043,217,984p> -> <bdd 532n 1,041,377,218,752p> [forward reach with edge: (event: A_transfer2droppos_c_on) (guard: S_elevator_down.On and (S_capacitive.On and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.Off and S_transfer_athalfway.On) and (A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (S_transfer_athalfway.Off and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.Off and (A_transfer2droppos.Off and S_transfer_atpickup.On) and (A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 532n 1,041,377,218,752p> -> <bdd 552n 1,330,920,896,448p> [forward reach with edge: (event: A_ejectpulse_c_on) (guard: S_transfer_atdrop.On and S_vacuum.On and (A_ejectpulse.Off and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 552n 1,330,920,896,448p> -> <bdd 551n 1,330,920,896,448p> [forward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 551n 1,330,920,896,448p> -> <bdd 549n 976,983,174,336p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 549n 976,983,174,336p> -> <bdd 559n 1,049,585,784,000p> [forward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 559n 1,049,585,784,000p> -> <bdd 557n 1,049,585,784,000p> [forward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 557n 1,049,585,784,000p> -> <bdd 555n 792,256,076,352p> [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 555n 792,256,076,352p> -> <bdd 554n 792,256,076,352p> [forward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 554n 792,256,076,352p> -> <bdd 553n 556,297,594,944p> [forward reach with edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 553n 556,297,594,944p> -> <bdd 552n 556,297,594,944p> [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 552n 556,297,594,944p> -> <bdd 547n 416,947,128,000p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 547n 416,947,128,000p> -> <bdd 566n 733,836,145,536p> [forward reach with edge: (event: A_elevator_up_c_on) (guard: S_pusher.Off and S_Tinitialized.On and (A_elevator_up.Off and TTimer.Timeout) and (A_elevator_down.Off and S_reflective.Off and (S_elevator_down.On and (S_capacitive.On and S_transfer_athalfway.On)))) (assignments: A_elevator_up := A_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 566n 733,836,145,536p> -> <bdd 598n 955,290,665,472p> [forward reach with edge: (event: A_elevator_down_c_off) (guard: <bdd 11n 1p>) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 598n 955,290,665,472p> -> <bdd 635n 1,101,099,227,904p> [forward reach with edge: (event: A_airslide_c_on) (guard: S_atin.Off and A_airslide.Off and (S_elevator_up.On and (S_pusher.On and S_Tinitialized.On))) (assignments: A_airslide := A_airslide.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 635n 1,101,099,227,904p> -> <bdd 629n 923,225,352,192p> [forward reach with edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 629n 923,225,352,192p> -> <bdd 596n 822,793,420,800p> [forward reach with edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 596n 822,793,420,800p> -> <bdd 595n 822,793,420,800p> [forward reach with edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 595n 822,793,420,800p> -> <bdd 594n 822,793,420,800p> [forward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 594n 822,793,420,800p> -> <bdd 593n 646,740,711,552p> [forward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 593n 646,740,711,552p> -> <bdd 550n 176,052,709,248p> [forward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 550n 176,052,709,248p> -> <bdd 545n 176,052,709,248p> [forward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 545n 176,052,709,248p> -> <bdd 529n 101,638,677,504p> [forward reach with edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 529n 101,638,677,504p> -> <bdd 517n 59,894,220,672p> [forward reach with edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 517n 59,894,220,672p> -> <bdd 515n 41,744,456,832p> [forward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 515n 41,744,456,832p> -> <bdd 511n 25,409,669,376p> [forward reach with edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 511n 25,409,669,376p> -> <bdd 510n 17,242,275,648p> [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 510n 17,242,275,648p> -> <bdd 502n 18,149,763,840p> [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 502n 18,149,763,840p> -> <bdd 499n 16,334,787,456p> [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 499n 16,334,787,456p> -> <bdd 495n 12,704,834,688p> [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 495n 12,704,834,688p> -> <bdd 507n 33,577,063,104p> [forward reach with edge: (event: A_drill_c_on) (guard: S_clamp.On and S_drill_up.On and (ClampDrill.two and (A_drill.Off and S_Pinitialized.On))) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 507n 33,577,063,104p> -> <bdd 511n 35,392,039,488p> [forward reach with edge: (event: A_drillup_c_off) (guard: A_drillup.On and S_drill_up.On and (ClampDrill.three and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 511n 35,392,039,488p> -> <bdd 525n 78,043,984,512p> [forward reach with edge: (event: A_tester_c_off) (guard: S_Pinitialized.On and A_tester.On and (Tester.Two and S_test_ok.On)) (assignments: A_tester := A_tester.Off, Tester := Tester.Three), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 525n 78,043,984,512p> -> <bdd 530n 115,251,000,384p> [forward reach with edge: (event: PTimer_c_reset) (guard: S_Pinitialized.On and (PTimer.Timeout and S_turntable.Off)) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 530n 115,251,000,384p> -> <bdd 531n 110,818,269,600p> [forward reach with edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 531n 110,818,269,600p> -> <bdd 529n 88,654,615,680p> [forward reach with edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 529n 88,654,615,680p> -> <bdd 526n 66,490,961,760p> [forward reach with edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 526n 66,490,961,760p> -> <bdd 525n 57,625,500,192p> [forward reach with edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 525n 57,625,500,192p> -> <bdd 524n 57,625,500,192p> [forward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 524n 57,625,500,192p> -> <bdd 523n 41,372,153,984p> [forward reach with edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 523n 41,372,153,984p> -> <bdd 518n 50,237,615,552p> [forward reach with edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 518n 50,237,615,552p> -> <bdd 517n 35,461,846,272p> [forward reach with edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 517n 35,461,846,272p> -> <bdd 515n 41,372,153,984p> [forward reach with edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 515n 41,372,153,984p> -> <bdd 513n 41,372,153,984p> [forward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 513n 41,372,153,984p> -> <bdd 522n 106,385,538,816p> [forward reach with edge: (event: A_gate1_c_on) (guard: S_gate1_opened.On and (S_inductive.Off and S_optical.On) and (A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate1 := A_gate1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 522n 106,385,538,816p> -> <bdd 525n 193,562,577,568p> [forward reach with edge: (event: A_gate2_c_on) (guard: S_gate2_opened.On and (S_inductive.On and S_optical.On) and (A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate2 := A_gate2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 525n 193,562,577,568p> -> <bdd 527n 200,950,462,208p> [forward reach with edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout)) (assignments: A_stopperretract := A_stopperretract.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 527n 200,950,462,208p> -> <bdd 529n 254,143,231,616p> [forward reach with edge: (event: STimer_c_on) (guard: STimer.Off and S_product.On) (assignments: STimer := STimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 529n 254,143,231,616p> -> <bdd 531n 341,320,270,368p> [forward reach with edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 531n 341,320,270,368p> -> <bdd 487n 200,725,162,176p> [forward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 487n 200,725,162,176p> -> <bdd 424n 105,919,243,584p> [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 424n 105,919,243,584p> -> <bdd 377n 53,305,094,304p> [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 377n 53,305,094,304p> -> <bdd 379n 53,338,890,528p> [forward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 379n 53,338,890,528p> -> <bdd 375n 44,194,195,584p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 375n 44,194,195,584p> -> <bdd 372n 42,133,564,704p> [forward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 372n 42,133,564,704p> -> <bdd 379n 44,267,420,736p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 379n 44,267,420,736p> -> <bdd 364n 44,418,564,960p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 364n 44,418,564,960p> -> <bdd 365n 44,519,953,632p> [forward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 365n 44,519,953,632p> -> <bdd 349n 38,222,590,560p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 349n 38,222,590,560p> -> <bdd 356n 40,885,920,768p> [forward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 356n 40,885,920,768p> -> <bdd 354n 40,885,920,768p> [forward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 354n 40,885,920,768p> -> <bdd 357n 40,885,920,768p> [forward reach with edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atup := S_zpos_atup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 357n 40,885,920,768p> -> <bdd 352n 33,846,918,336p> [forward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 352n 33,846,918,336p> -> <bdd 347n 35,619,342,528p> [forward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 347n 35,619,342,528p> -> <bdd 342n 32,299,802,304p> [forward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 342n 32,299,802,304p> -> <bdd 338n 32,012,534,400p> [forward reach with edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 338n 32,012,534,400p> -> <bdd 338n 34,415,821,440p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 338n 34,415,821,440p> -> <bdd 336n 29,609,247,360p> [forward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 336n 29,609,247,360p> -> <bdd 338n 30,814,646,016p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 338n 30,814,646,016p> -> <bdd 342n 32,361,762,048p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 342n 32,361,762,048p> -> <bdd 335n 37,799,198,976p> [forward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 335n 37,799,198,976p> -> <bdd 332n 30,439,132,416p> [forward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 332n 30,439,132,416p> -> <bdd 322n 25,769,620,800p> [forward reach with edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 322n 25,769,620,800p> -> <bdd 300n 11,973,251,136p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 300n 11,973,251,136p> -> <bdd 383n 34,389,535,488p> [forward reach with edge: (event: A_x2distributing_c_off) (guard: <bdd 15n 7p>) (assignments: A_x2distributing := A_x2distributing.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 383n 34,389,535,488p> -> <bdd 571n 280,255,187,520p> [forward reach with edge: (event: A_x2testing_c_off) (guard: <bdd 28n 12p>) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 571n 280,255,187,520p> -> <bdd 834n 492,042,980,352p> [forward reach with edge: (event: A_zdown_c_on) (guard: <bdd 85n 32p>) (assignments: A_zdown := A_zdown.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 834n 492,042,980,352p> -> <bdd 856n 557,006,833,152p> [forward reach with edge: (event: A_gripperclose_c_on) (guard: S_Hinitialized.On and S_xpos_at3.On and (A_gripperclose.Off and S_zpos_atdown.On) or (S_Hinitialized.On and S_xpos_at3.Off and (S_xpos_at2.On and (A_gripperclose.Off and S_zpos_atdown.On)) or S_Hinitialized.On and (S_xpos_at3.Off and S_xpos_at2.Off) and (S_xpos_at1.On and (A_gripperclose.Off and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 856n 557,006,833,152p> -> <bdd 999n 832,378,466,304p> [forward reach with edge: (event: A_transfer2pickpos_c_on) (guard: <bdd 13n 3p>) (assignments: A_transfer2pickpos := A_transfer2pickpos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 999n 832,378,466,304p> -> <bdd 1,012n 924,304,195,584p> [forward reach with edge: (event: A_transfer2droppos_c_on) (guard: S_elevator_down.On and (S_capacitive.On and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.Off and S_transfer_athalfway.On) and (A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (S_transfer_athalfway.Off and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.Off and (A_transfer2droppos.Off and S_transfer_atpickup.On) and (A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,012n 924,304,195,584p> -> <bdd 1,056n 971,992,545,216p> [forward reach with edge: (event: A_vacuum_c_on) (guard: S_transfer_atpickup.On and (A_vacuum.Off and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,056n 971,992,545,216p> -> <bdd 1,074n 968,122,877,568p> [forward reach with edge: (event: A_ejectpulse_c_on) (guard: S_transfer_atdrop.On and S_vacuum.On and (A_ejectpulse.Off and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,074n 968,122,877,568p> -> <bdd 1,082n 1,005,289,336,128p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,082n 1,005,289,336,128p> -> <bdd 1,079n 968,122,877,568p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,079n 968,122,877,568p> -> <bdd 1,075n 757,112,397,888p> [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,075n 757,112,397,888p> -> <bdd 1,072n 719,945,939,328p> [forward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,072n 719,945,939,328p> -> <bdd 1,069n 682,779,480,768p> [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,069n 682,779,480,768p> -> <bdd 1,060n 471,769,001,088p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,060n 471,769,001,088p> -> <bdd 1,098n 1,050,657,950,496p> [forward reach with edge: (event: A_elevator_up_c_on) (guard: S_pusher.Off and S_Tinitialized.On and (A_elevator_up.Off and TTimer.Timeout) and (A_elevator_down.Off and S_reflective.Off and (S_elevator_down.On and (S_capacitive.On and S_transfer_athalfway.On)))) (assignments: A_elevator_up := A_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,098n 1,050,657,950,496p> -> <bdd 1,124n 1,272,941,348,448p> [forward reach with edge: (event: A_elevator_down_c_off) (guard: <bdd 11n 1p>) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,124n 1,272,941,348,448p> -> <bdd 1,131n 1,310,107,807,008p> [forward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,131n 1,310,107,807,008p> -> <bdd 1,169n 2,868,392,552,256p> [forward reach with edge: (event: A_airslide_c_on) (guard: S_atin.Off and A_airslide.Off and (S_elevator_up.On and (S_pusher.On and S_Tinitialized.On))) (assignments: A_airslide := A_airslide.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,169n 2,868,392,552,256p> -> <bdd 1,168n 2,868,392,552,256p> [forward reach with edge: (event: TTimer_c_reset) (guard: A_pusher.On and (S_Tinitialized.On and TTimer.Timeout)) (assignments: TTimer := TTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,168n 2,868,392,552,256p> -> <bdd 1,133n 1,558,284,745,248p> [forward reach with edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,133n 1,558,284,745,248p> -> <bdd 1,129n 993,866,648,544p> [forward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,129n 993,866,648,544p> -> <bdd 1,125n 797,547,310,560p> [forward reach with edge: (event: S_test_ok_u_off) (guard: S_test_ok.On) (assignments: S_test_ok := S_test_ok.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,125n 797,547,310,560p> -> <bdd 1,123n 564,418,096,704p> [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,123n 564,418,096,704p> -> <bdd 1,122n 662,577,765,696p> [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,122n 662,577,765,696p> -> <bdd 1,116n 417,178,593,216p> [forward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,116n 417,178,593,216p> -> <bdd 1,103n 245,399,172,480p> [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,103n 245,399,172,480p> -> <bdd 1,113n 269,939,089,728p> [forward reach with edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off and S_drill_up.On and (ClampDrill.four and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,113n 269,939,089,728p> -> <bdd 1,126n 760,737,434,688p> [forward reach with edge: (event: PTimer_c_on) (guard: S_Pinitialized.On and (PTimer.Off and S_turntable.On)) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,126n 760,737,434,688p> -> <bdd 1,121n 523,624,468,032p> [forward reach with edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,121n 523,624,468,032p> -> <bdd 1,120n 470,932,697,664p> [forward reach with edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,120n 470,932,697,664p> -> <bdd 1,118n 355,669,449,984p> [forward reach with edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,118n 355,669,449,984p> -> <bdd 1,117n 250,285,909,248p> [forward reach with edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,117n 250,285,909,248p> -> <bdd 1,116n 184,421,196,288p> [forward reach with edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,116n 184,421,196,288p> -> <bdd 1,115n 184,421,196,288p> [forward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,115n 184,421,196,288p> -> <bdd 1,114n 118,556,483,328p> [forward reach with edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,114n 118,556,483,328p> -> <bdd 1,109n 105,383,540,736p> [forward reach with edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,109n 105,383,540,736p> -> <bdd 1,107n 105,383,540,736p> [forward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,107n 105,383,540,736p> -> <bdd 1,109n 144,902,368,512p> [forward reach with edge: (event: STimer_c_on) (guard: STimer.Off and S_product.On) (assignments: STimer := STimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,109n 144,902,368,512p> -> <bdd 1,111n 158,075,311,104p> [forward reach with edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 1,111n 158,075,311,104p> -> <bdd 797n 79,964,024,832p> [forward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 797n 79,964,024,832p> -> <bdd 778n 79,964,024,832p> [forward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 778n 79,964,024,832p> -> <bdd 634n 40,004,487,168p> [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 634n 40,004,487,168p> -> <bdd 627n 39,739,361,280p> [forward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 627n 39,739,361,280p> -> <bdd 544n 19,874,918,400p> [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 544n 19,874,918,400p> -> <bdd 547n 19,886,346,240p> [forward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 547n 19,886,346,240p> -> <bdd 525n 11,480,027,136p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 525n 11,480,027,136p> -> <bdd 517n 11,061,196,800p> [forward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 517n 11,061,196,800p> -> <bdd 523n 11,221,281,792p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 523n 11,221,281,792p> -> <bdd 524n 11,295,467,520p> [forward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 524n 11,295,467,520p> -> <bdd 477n 11,518,405,632p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 477n 11,518,405,632p> -> <bdd 486n 11,609,828,352p> [forward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 486n 11,609,828,352p> -> <bdd 461n 11,396,032,512p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 461n 11,396,032,512p> -> <bdd 460n 11,475,646,464p> [forward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 460n 11,475,646,464p> -> <bdd 463n 11,387,842,560p> [forward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 463n 11,387,842,560p> -> <bdd 459n 11,387,842,560p> [forward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 459n 11,387,842,560p> -> <bdd 414n 6,331,023,360p> [forward reach with edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atup := S_zpos_atup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 414n 6,331,023,360p> -> <bdd 409n 5,737,156,608p> [forward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 409n 5,737,156,608p> -> <bdd 401n 5,772,201,984p> [forward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 401n 5,772,201,984p> -> <bdd 398n 5,753,917,440p> [forward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 398n 5,753,917,440p> -> <bdd 404n 5,804,580,864p> [forward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 404n 5,804,580,864p> -> <bdd 399n 5,655,066,624p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 399n 5,655,066,624p> -> <bdd 410n 5,510,694,912p> [forward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 410n 5,510,694,912p> -> <bdd 398n 5,363,275,776p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 398n 5,363,275,776p> -> <bdd 419n 6,104,275,968p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 419n 6,104,275,968p> -> <bdd 430n 6,073,516,032p> [forward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 430n 6,073,516,032p> -> <bdd 430n 5,802,104,832p> [forward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 430n 5,802,104,832p> -> <bdd 416n 5,131,100,160p> [forward reach with edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 416n 5,131,100,160p> -> <bdd 388n 2,239,094,784p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 388n 2,239,094,784p> -> <bdd 499n 6,356,450,304p> [forward reach with edge: (event: A_x2distributing_c_off) (guard: <bdd 15n 7p>) (assignments: A_x2distributing := A_x2distributing.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 499n 6,356,450,304p> -> <bdd 806n 52,396,741,632p> [forward reach with edge: (event: A_x2testing_c_off) (guard: <bdd 28n 12p>) (assignments: A_x2testing := A_x2testing.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 806n 52,396,741,632p> -> <bdd 825n 53,255,353,344p> [forward reach with edge: (event: A_gripperclose_c_on) (guard: S_Hinitialized.On and S_xpos_at3.On and (A_gripperclose.Off and S_zpos_atdown.On) or (S_Hinitialized.On and S_xpos_at3.Off and (S_xpos_at2.On and (A_gripperclose.Off and S_zpos_atdown.On)) or S_Hinitialized.On and (S_xpos_at3.Off and S_xpos_at2.Off) and (S_xpos_at1.On and (A_gripperclose.Off and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 825n 53,255,353,344p> -> <bdd 933n 61,239,794,688p> [forward reach with edge: (event: A_transfer2pickpos_c_on) (guard: <bdd 13n 3p>) (assignments: A_transfer2pickpos := A_transfer2pickpos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 933n 61,239,794,688p> -> <bdd 986n 77,972,057,088p> [forward reach with edge: (event: A_transfer2droppos_c_on) (guard: S_elevator_down.On and (S_capacitive.On and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.Off and S_transfer_athalfway.On) and (A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (S_transfer_athalfway.Off and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.Off and (A_transfer2droppos.Off and S_transfer_atpickup.On) and (A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 986n 77,972,057,088p> -> <bdd 1,049n 80,873,014,272p> [forward reach with edge: (event: A_vacuum_c_on) (guard: S_transfer_atpickup.On and (A_vacuum.Off and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,049n 80,873,014,272p> -> <bdd 1,091n 94,081,121,280p> [forward reach with edge: (event: A_ejectpulse_c_on) (guard: S_transfer_atdrop.On and S_vacuum.On and (A_ejectpulse.Off and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,091n 94,081,121,280p> -> <bdd 1,108n 114,953,594,880p> [forward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,108n 114,953,594,880p> -> <bdd 1,127n 122,074,281,984p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,127n 122,074,281,984p> -> <bdd 1,122n 105,848,082,432p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,122n 105,848,082,432p> -> <bdd 1,128n 99,849,037,824p> [forward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,128n 99,849,037,824p> -> <bdd 1,123n 96,528,202,752p> [forward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,123n 96,528,202,752p> -> <bdd 1,112n 71,160,873,984p> [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,112n 71,160,873,984p> -> <bdd 1,108n 62,965,969,920p> [forward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,108n 62,965,969,920p> -> <bdd 1,107n 60,135,389,184p> [forward reach with edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,107n 60,135,389,184p> -> <bdd 1,103n 51,940,485,120p> [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,103n 51,940,485,120p> -> <bdd 1,101n 51,940,485,120p> [forward reach with edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,101n 51,940,485,120p> -> <bdd 983n 36,599,562,240p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 983n 36,599,562,240p> -> <bdd 1,038n 86,741,305,344p> [forward reach with edge: (event: A_elevator_up_c_on) (guard: S_pusher.Off and S_Tinitialized.On and (A_elevator_up.Off and TTimer.Timeout) and (A_elevator_down.Off and S_reflective.Off and (S_elevator_down.On and (S_capacitive.On and S_transfer_athalfway.On)))) (assignments: A_elevator_up := A_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,038n 86,741,305,344p> -> <bdd 1,064n 102,569,816,064p> [forward reach with edge: (event: A_elevator_down_c_off) (guard: <bdd 11n 1p>) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,064n 102,569,816,064p> -> <bdd 1,080n 157,058,328,576p> [forward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,080n 157,058,328,576p> -> <bdd 1,097n 200,389,650,432p> [forward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,097n 200,389,650,432p> -> <bdd 1,120n 404,004,999,168p> [forward reach with edge: (event: A_airslide_c_on) (guard: S_atin.Off and A_airslide.Off and (S_elevator_up.On and (S_pusher.On and S_Tinitialized.On))) (assignments: A_airslide := A_airslide.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,120n 404,004,999,168p> -> <bdd 1,126n 430,946,512,896p> [forward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,126n 430,946,512,896p> -> <bdd 1,122n 404,004,999,168p> [forward reach with edge: (event: TTimer_c_reset) (guard: A_pusher.On and (S_Tinitialized.On and TTimer.Timeout)) (assignments: TTimer := TTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,122n 404,004,999,168p> -> <bdd 1,097n 203,615,348,736p> [forward reach with edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,097n 203,615,348,736p> -> <bdd 1,096n 203,615,348,736p> [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,096n 203,615,348,736p> -> <bdd 1,097n 216,751,822,848p> [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,097n 216,751,822,848p> -> <bdd 1,091n 210,183,585,792p> [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,091n 210,183,585,792p> -> <bdd 1,080n 144,501,215,232p> [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,080n 144,501,215,232p> -> <bdd 1,082n 157,637,689,344p> [forward reach with edge: (event: A_drilldown_c_off) (guard: A_drilldown.On and (S_drill_down.On and ClampDrill.five)) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,082n 157,637,689,344p> -> <bdd 1,084n 157,637,689,344p> [forward reach with edge: (event: A_drillup_c_on) (guard: A_drillup.Off and (S_drill_down.On and ClampDrill.six)) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,084n 157,637,689,344p> -> <bdd 1,080n 105,091,792,896p> [forward reach with edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,080n 105,091,792,896p> -> <bdd 1,077n 91,955,318,784p> [forward reach with edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 1,077n 91,955,318,784p> -> <bdd 1,079n 105,091,792,896p> [forward reach with edge: (event: STimer_c_on) (guard: STimer.Off and S_product.On) (assignments: STimer := STimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward reachability: iteration 6.
Forward controlled-behavior: <bdd 1,079n 105,091,792,896p> -> <bdd 992n 59,968,192,512p> [forward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 992n 59,968,192,512p> -> <bdd 764n 29,984,096,256p> [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 764n 29,984,096,256p> -> <bdd 658n 14,844,592,128p> [forward reach with edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 658n 14,844,592,128p> -> <bdd 662n 14,835,154,944p> [forward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 662n 14,835,154,944p> -> <bdd 652n 12,905,299,968p> [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 652n 12,905,299,968p> -> <bdd 646n 12,765,265,920p> [forward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 646n 12,765,265,920p> -> <bdd 651n 12,649,168,896p> [forward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 651n 12,649,168,896p> -> <bdd 652n 12,768,755,712p> [forward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 652n 12,768,755,712p> -> <bdd 554n 11,605,426,176p> [forward reach with edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 554n 11,605,426,176p> -> <bdd 566n 11,612,209,152p> [forward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 566n 11,612,209,152p> -> <bdd 542n 11,363,303,424p> [forward reach with edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 542n 11,363,303,424p> -> <bdd 536n 10,819,584,000p> [forward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 536n 10,819,584,000p> -> <bdd 523n 10,689,822,720p> [forward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 523n 10,689,822,720p> -> <bdd 457n 2,182,348,800p> [forward reach with edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atup := S_zpos_atup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 457n 2,182,348,800p> -> <bdd 450n 2,141,454,336p> [forward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 450n 2,141,454,336p> -> <bdd 445n 2,134,376,448p> [forward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 445n 2,134,376,448p> -> <bdd 410n 1,836,318,720p> [forward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 410n 1,836,318,720p> -> <bdd 411n 1,855,979,520p> [forward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 411n 1,855,979,520p> -> <bdd 385n 1,769,472,000p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 385n 1,769,472,000p> -> <bdd 386n 1,629,487,104p> [forward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 386n 1,629,487,104p> -> <bdd 366n 1,266,155,520p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 366n 1,266,155,520p> -> <bdd 373n 1,269,301,248p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 373n 1,269,301,248p> -> <bdd 379n 1,558,708,224p> [forward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 379n 1,558,708,224p> -> <bdd 357n 1,154,482,176p> [forward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 357n 1,154,482,176p> -> <bdd 295n 533,200,896p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 295n 533,200,896p> -> <bdd 312n 637,009,920p> [forward reach with edge: (event: A_transfer2droppos_c_on) (guard: S_elevator_down.On and (S_capacitive.On and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.Off and S_transfer_athalfway.On) and (A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (S_transfer_athalfway.Off and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.Off and (A_transfer2droppos.Off and S_transfer_atpickup.On) and (A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 312n 637,009,920p> -> <bdd 319n 682,622,976p> [forward reach with edge: (event: A_vacuum_c_on) (guard: S_transfer_atpickup.On and (A_vacuum.Off and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 319n 682,622,976p> -> <bdd 324n 881,590,272p> [forward reach with edge: (event: A_ejectpulse_c_on) (guard: S_transfer_atdrop.On and S_vacuum.On and (A_ejectpulse.Off and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 324n 881,590,272p> -> <bdd 355n 1,016,856,576p> [forward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 355n 1,016,856,576p> -> <bdd 368n 1,060,896,768p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 368n 1,060,896,768p> -> <bdd 364n 979,107,840p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 364n 979,107,840p> -> <bdd 361n 894,959,616p> [forward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 361n 894,959,616p> -> <bdd 347n 810,024,960p> [forward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 347n 810,024,960p> -> <bdd 327n 559,153,152p> [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 327n 559,153,152p> -> <bdd 324n 521,404,416p> [forward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 324n 521,404,416p> -> <bdd 323n 505,675,776p> [forward reach with edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 323n 505,675,776p> -> <bdd 320n 467,927,040p> [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 320n 467,927,040p> -> <bdd 309n 430,178,304p> [forward reach with edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 309n 430,178,304p> -> <bdd 249n 270,532,608p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 249n 270,532,608p> -> <bdd 290n 660,602,880p> [forward reach with edge: (event: A_elevator_up_c_on) (guard: S_pusher.Off and S_Tinitialized.On and (A_elevator_up.Off and TTimer.Timeout) and (A_elevator_down.Off and S_reflective.Off and (S_elevator_down.On and (S_capacitive.On and S_transfer_athalfway.On)))) (assignments: A_elevator_up := A_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 290n 660,602,880p> -> <bdd 310n 1,038,090,240p> [forward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 310n 1,038,090,240p> -> <bdd 324n 1,258,291,200p> [forward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 324n 1,258,291,200p> -> <bdd 342n 2,516,582,400p> [forward reach with edge: (event: A_airslide_c_on) (guard: S_atin.Off and A_airslide.Off and (S_elevator_up.On and (S_pusher.On and S_Tinitialized.On))) (assignments: A_airslide := A_airslide.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 342n 2,516,582,400p> -> <bdd 348n 2,617,245,696p> [forward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 348n 2,617,245,696p> -> <bdd 345n 2,428,502,016p> [forward reach with edge: (event: TTimer_c_reset) (guard: A_pusher.On and (S_Tinitialized.On and TTimer.Timeout)) (assignments: TTimer := TTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 345n 2,428,502,016p> -> <bdd 325n 1,214,251,008p> [forward reach with edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 325n 1,214,251,008p> -> <bdd 327n 1,770,782,720p> [forward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 327n 1,770,782,720p> -> <bdd 321n 442,695,680p> [forward reach with edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward reachability: iteration 7.
Forward controlled-behavior: <bdd 321n 442,695,680p> -> <bdd 323n 445,849,600p> [forward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 323n 445,849,600p> -> <bdd 277n 431,513,600p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 277n 431,513,600p> -> <bdd 275n 399,400,960p> [forward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 275n 399,400,960p> -> <bdd 257n 338,329,600p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 257n 338,329,600p> -> <bdd 261n 339,476,480p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 261n 339,476,480p> -> <bdd 266n 391,659,520p> [forward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 266n 391,659,520p> -> <bdd 230n 162,283,520p> [forward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 230n 162,283,520p> -> <bdd 185n 97,484,800p> [forward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 185n 97,484,800p> -> <bdd 186n 103,219,200p> [forward reach with edge: (event: A_vacuum_c_on) (guard: S_transfer_atpickup.On and (A_vacuum.Off and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 186n 103,219,200p> -> <bdd 194n 121,569,280p> [forward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 194n 121,569,280p> -> <bdd 193n 121,569,280p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 193n 121,569,280p> -> <bdd 191n 115,834,880p> [forward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 191n 115,834,880p> -> <bdd 172n 67,665,920p> [forward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 172n 67,665,920p> -> <bdd 166n 58,490,880p> [forward reach with edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 166n 58,490,880p> -> <bdd 148n 32,112,640p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 148n 32,112,640p> -> <bdd 162n 90,603,520p> [forward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 162n 90,603,520p> -> <bdd 158n 81,428,480p> [forward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 158n 81,428,480p> -> <bdd 152n 60,489,728p> [forward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 152n 60,489,728p> -> <bdd 160n 81,428,480p> [forward reach with edge: (event: A_drill_c_off) (guard: S_drill_up.On and ClampDrill.seven and (A_drill.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 160n 81,428,480p> -> <bdd 164n 86,081,536p> [forward reach with edge: (event: A_clamp_c_off) (guard: S_drill_up.On and ClampDrill.eight and (A_clamp.On and (A_drill.Off and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward reachability: iteration 8.
Forward controlled-behavior: <bdd 164n 86,081,536p> -> <bdd 129n 21,823,488p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 129n 21,823,488p> -> <bdd 128n 17,694,720p> [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 128n 17,694,720p> -> <bdd 123n 20,054,016p> [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward controlled-behavior: <bdd 123n 20,054,016p> -> <bdd 119n 20,054,016p> [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 43n 672p>]
Forward reachability: iteration 9.
Forward controlled-behavior: <bdd 119n 20,054,016p> [fixed point].
Controlled behavior: <bdd 43n 672p> -> <bdd 119n 20,054,016p>.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 99n 1p> [marker predicate]
Backward controlled-behavior: <bdd 99n 1p> -> <bdd 103n 2p> [restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 103n 2p> -> <bdd 102n 2p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 102n 2p> -> <bdd 101n 2p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 101n 2p> -> <bdd 100n 2p> [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 100n 2p> -> <bdd 99n 2p> [backward reach with edge: (event: S_pusher1_in_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_in := S_pusher1_in.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 99n 2p> -> <bdd 100n 4p> [backward reach with edge: (event: S_pusher1_out_u_off) (guard: S_pusher1_out.On) (assignments: S_pusher1_out := S_pusher1_out.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 100n 4p> -> <bdd 99n 4p> [backward reach with edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 99n 4p> -> <bdd 98n 4p> [backward reach with edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 98n 4p> -> <bdd 99n 8p> [backward reach with edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 99n 8p> -> <bdd 98n 8p> [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 98n 8p> -> <bdd 97n 8p> [backward reach with edge: (event: S_pusher3_in_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_in := S_pusher3_in.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 97n 8p> -> <bdd 98n 16p> [backward reach with edge: (event: S_pusher3_out_u_off) (guard: S_pusher3_out.On) (assignments: S_pusher3_out := S_pusher3_out.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 98n 16p> -> <bdd 97n 16p> [backward reach with edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 97n 16p> -> <bdd 96n 16p> [backward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 96n 16p> -> <bdd 114n 32p> [backward reach with edge: (event: A_pusher1_c_off) (guard: S_pusher1_out.On and S_stack1_filled.On and (A_pusher1.On and (S_Dinitialized.On and S_product1.Off))) (assignments: A_pusher1 := A_pusher1.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 114n 32p> -> <bdd 146n 92p> [backward reach with edge: (event: A_pusher2_c_off) (guard: S_pusher2_out.On and S_stack2_filled.On and (S_Dinitialized.On and (A_pusher2.On and S_product2.Off))) (assignments: A_pusher2 := A_pusher2.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 146n 92p> -> <bdd 195n 248p> [backward reach with edge: (event: A_pusher3_c_off) (guard: S_Dinitialized.On and S_pusher3_out.On and (S_stack3_filled.On and (A_pusher3.On and S_product3.Off))) (assignments: A_pusher3 := A_pusher3.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 195n 248p> -> <bdd 194n 248p> [backward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 194n 248p> -> <bdd 193n 248p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 193n 248p> -> <bdd 192n 248p> [backward reach with edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atup := S_zpos_atup.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 192n 248p> -> <bdd 196n 496p> [backward reach with edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 196n 496p> -> <bdd 195n 496p> [backward reach with edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 195n 496p> -> <bdd 187n 496p> [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 187n 496p> -> <bdd 185n 496p> [backward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 185n 496p> -> <bdd 184n 496p> [backward reach with edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 184n 496p> -> <bdd 190n 1,488p> [backward reach with edge: (event: A_x2distributing_c_on) (guard: S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.On and (A_x2distributing.Off and S_xpos_at3.On)) or S_transfer_athalfway.On and (S_Hinitialized.On and S_product4.On) and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.Off and (A_x2distributing.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and S_xpos_at3.On) or S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))))) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 190n 1,488p> -> <bdd 199n 1,984p> [backward reach with edge: (event: A_zdown_c_off) (guard: <bdd 16n 8p>) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 199n 1,984p> -> <bdd 203n 2,976p> [backward reach with edge: (event: A_gripperclose_c_off) (guard: S_Hinitialized.On and S_xpos_atdrop.On and (A_gripperclose.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 203n 2,976p> -> <bdd 210n 8,432p> [backward reach with edge: (event: A_ejectpulse_c_off) (guard: S_vacuum.Off and (A_ejectpulse.On and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 210n 8,432p> -> <bdd 209n 8,432p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 209n 8,432p> -> <bdd 208n 8,432p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 208n 8,432p> -> <bdd 207n 8,432p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 207n 8,432p> -> <bdd 205n 8,432p> [backward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 205n 8,432p> -> <bdd 204n 8,432p> [backward reach with edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 204n 8,432p> -> <bdd 203n 8,432p> [backward reach with edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 203n 8,432p> -> <bdd 202n 8,432p> [backward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 202n 8,432p> -> <bdd 211n 16,864p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 211n 16,864p> -> <bdd 213n 33,728p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 213n 33,728p> -> <bdd 212n 33,728p> [backward reach with edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 212n 33,728p> -> <bdd 211n 33,728p> [backward reach with edge: (event: S_atseparator_u_off) (guard: S_atseparator.On) (assignments: S_atseparator := S_atseparator.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 211n 33,728p> -> <bdd 210n 33,728p> [backward reach with edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 210n 33,728p> -> <bdd 209n 33,728p> [backward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 209n 33,728p> -> <bdd 208n 33,728p> [backward reach with edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 208n 33,728p> -> <bdd 213n 101,184p> [backward reach with edge: (event: A_separator_c_on) (guard: S_Binitialized.On and A_separator.Off and (S_atseparator.On and S_separator_closed.On)) (assignments: A_separator := A_separator.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 213n 101,184p> -> <bdd 217n 269,824p> [backward reach with edge: (event: A_conveyerB_c_off) (guard: BTimer.Timeout and (A_conveyerB.On and S_Binitialized.On)) (assignments: A_conveyerB := A_conveyerB.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 217n 269,824p> -> <bdd 218n 438,464p> [backward reach with edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 218n 438,464p> -> <bdd 217n 438,464p> [backward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 217n 438,464p> -> <bdd 216n 438,464p> [backward reach with edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 216n 438,464p> -> <bdd 215n 438,464p> [backward reach with edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 215n 438,464p> -> <bdd 214n 438,464p> [backward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 214n 438,464p> -> <bdd 213n 438,464p> [backward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 213n 438,464p> -> <bdd 211n 438,464p> [backward reach with edge: (event: S_test_ok_u_off) (guard: S_test_ok.On) (assignments: S_test_ok := S_test_ok.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 211n 438,464p> -> <bdd 210n 438,464p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 210n 438,464p> -> <bdd 211n 876,928p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 211n 876,928p> -> <bdd 210n 876,928p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 210n 876,928p> -> <bdd 209n 876,928p> [backward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 209n 876,928p> -> <bdd 214n 2,630,784p> [backward reach with edge: (event: A_turntable_c_off) (guard: S_Pinitialized.On and (A_turntable.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 214n 2,630,784p> -> <bdd 221n 3,507,712p> [backward reach with edge: (event: A_eject_c_off) (guard: S_Pinitialized.On and A_eject.On and (S_atexit.Off and A_conveyer.Off)) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 221n 3,507,712p> -> <bdd 222n 5,261,568p> [backward reach with edge: (event: PTimer_c_reset) (guard: S_Pinitialized.On and (PTimer.Running and S_turntable.Off)) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 222n 5,261,568p> -> <bdd 223n 7,892,352p> [backward reach with edge: (event: PTimer_c_reset) (guard: S_Pinitialized.On and (PTimer.Timeout and S_turntable.Off)) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 223n 7,892,352p> -> <bdd 222n 7,892,352p> [backward reach with edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 222n 7,892,352p> -> <bdd 221n 7,892,352p> [backward reach with edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 221n 7,892,352p> -> <bdd 220n 7,892,352p> [backward reach with edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 220n 7,892,352p> -> <bdd 219n 7,892,352p> [backward reach with edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 219n 7,892,352p> -> <bdd 218n 7,892,352p> [backward reach with edge: (event: S_gate1_opened_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_opened := S_gate1_opened.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 218n 7,892,352p> -> <bdd 219n 15,784,704p> [backward reach with edge: (event: S_gate1_closed_u_off) (guard: S_gate1_closed.On) (assignments: S_gate1_closed := S_gate1_closed.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 219n 15,784,704p> -> <bdd 218n 15,784,704p> [backward reach with edge: (event: S_gate2_opened_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_opened := S_gate2_opened.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 218n 15,784,704p> -> <bdd 219n 31,569,408p> [backward reach with edge: (event: S_gate2_closed_u_off) (guard: S_gate2_closed.On) (assignments: S_gate2_closed := S_gate2_closed.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 219n 31,569,408p> -> <bdd 218n 31,569,408p> [backward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 218n 31,569,408p> -> <bdd 227n 63,138,816p> [backward reach with edge: (event: A_conveyer_c_off) (guard: A_conveyer.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_conveyer := A_conveyer.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 227n 63,138,816p> -> <bdd 232n 78,923,520p> [backward reach with edge: (event: A_gate1_c_off) (guard: S_gate1_closed.On and A_gate1.On and (A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On))) (assignments: A_gate1 := A_gate1.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 232n 78,923,520p> -> <bdd 236n 94,708,224p> [backward reach with edge: (event: A_gate2_c_off) (guard: S_gate2_closed.On and A_gate2.On and (A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On))) (assignments: A_gate2 := A_gate2.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 236n 94,708,224p> -> <bdd 235n 126,277,632p> [backward reach with edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_stopperretract := A_stopperretract.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 235n 126,277,632p> -> <bdd 236n 157,847,040p> [backward reach with edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Running) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 236n 157,847,040p> -> <bdd 237n 284,124,672p> [backward reach with edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 237n 284,124,672p> -> <bdd 195n 284,124,672p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 195n 284,124,672p> -> <bdd 174n 238,298,112p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 174n 238,298,112p> -> <bdd 162n 201,636,864p> [backward reach with edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 162n 201,636,864p> -> <bdd 163n 348,281,856p> [backward reach with edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_out := S_pusher1_out.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 163n 348,281,856p> -> <bdd 162n 238,298,112p> [backward reach with edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 162n 238,298,112p> -> <bdd 160n 178,723,584p> [backward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 160n 178,723,584p> -> <bdd 158n 119,149,056p> [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 158n 119,149,056p> -> <bdd 157n 96,235,776p> [backward reach with edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 157n 96,235,776p> -> <bdd 156n 73,322,496p> [backward reach with edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 156n 73,322,496p> -> <bdd 148n 27,495,936p> [backward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 148n 27,495,936p> -> <bdd 152n 30,730,752p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 152n 30,730,752p> -> <bdd 152n 38,817,792p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 152n 38,817,792p> -> <bdd 154n 46,904,832p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 154n 46,904,832p> -> <bdd 155n 51,757,056p> [backward reach with edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 155n 51,757,056p> -> <bdd 151n 44,478,720p> [backward reach with edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 151n 44,478,720p> -> <bdd 153n 88,957,440p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 153n 88,957,440p> -> <bdd 155n 133,436,160p> [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 155n 133,436,160p> -> <bdd 152n 82,487,808p> [backward reach with edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 152n 82,487,808p> -> <bdd 142n 31,539,456p> [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 142n 31,539,456p> -> <bdd 152n 78,444,288p> [backward reach with edge: (event: A_x2distributing_c_on) (guard: S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.On and (A_x2distributing.Off and S_xpos_at3.On)) or S_transfer_athalfway.On and (S_Hinitialized.On and S_product4.On) and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.Off and (A_x2distributing.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and S_xpos_at3.On) or S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))))) (assignments: A_x2distributing := A_x2distributing.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 152n 78,444,288p> -> <bdd 202n 646,154,496p> [backward reach with edge: (event: A_x2testing_c_on) (guard: <bdd 17n 15p>) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 202n 646,154,496p> -> <bdd 217n 938,096,640p> [backward reach with edge: (event: A_vacuum_c_off) (guard: S_transfer_atdrop.On and (A_vacuum.On and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 217n 938,096,640p> -> <bdd 225n 1,407,144,960p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 225n 1,407,144,960p> -> <bdd 218n 1,407,144,960p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 218n 1,407,144,960p> -> <bdd 216n 1,407,144,960p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 216n 1,407,144,960p> -> <bdd 227n 3,517,862,400p> [backward reach with edge: (event: A_elevator_down_c_on) (guard: S_opticalT.Off and S_elevator_up.On and (S_pusher.Off and S_Tinitialized.On) and (PusherLift.Four and A_elevator_up.Off and (TTimer.Timeout and A_elevator_down.Off))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 227n 3,517,862,400p> -> <bdd 228n 3,752,386,560p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 228n 3,752,386,560p> -> <bdd 227n 3,752,386,560p> [backward reach with edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 227n 3,752,386,560p> -> <bdd 228n 6,061,547,520p> [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 228n 6,061,547,520p> -> <bdd 227n 6,061,547,520p> [backward reach with edge: (event: S_separator_closed_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_closed := S_separator_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 227n 6,061,547,520p> -> <bdd 223n 2,597,806,080p> [backward reach with edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 223n 2,597,806,080p> -> <bdd 224n 3,463,741,440p> [backward reach with edge: (event: BTimer_c_on) (guard: BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 224n 3,463,741,440p> -> <bdd 222n 2,309,160,960p> [backward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 222n 2,309,160,960p> -> <bdd 218n 1,924,300,800p> [backward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 218n 1,924,300,800p> -> <bdd 215n 1,539,440,640p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 215n 1,539,440,640p> -> <bdd 236n 4,041,031,680p> [backward reach with edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 236n 4,041,031,680p> -> <bdd 246n 5,388,042,240p> [backward reach with edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 246n 5,388,042,240p> -> <bdd 245n 5,388,042,240p> [backward reach with edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 245n 5,388,042,240p> -> <bdd 249n 5,580,472,320p> [backward reach with edge: (event: A_clamp_c_off) (guard: S_drill_up.On and ClampDrill.eight and (A_clamp.On and (A_drill.Off and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 249n 5,580,472,320p> -> <bdd 259n 6,157,762,560p> [backward reach with edge: (event: A_tester_c_off) (guard: S_Pinitialized.On and A_tester.On and (Tester.Two and S_test_ok.On)) (assignments: A_tester := A_tester.Off, Tester := Tester.Three), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 259n 6,157,762,560p> -> <bdd 279n 7,055,769,600p> [backward reach with edge: (event: A_eject_c_off) (guard: S_Pinitialized.On and A_eject.On and (S_atexit.Off and A_conveyer.Off)) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 279n 7,055,769,600p> -> <bdd 281n 9,300,787,200p> [backward reach with edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 281n 9,300,787,200p> -> <bdd 278n 8,210,350,080p> [backward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 278n 8,210,350,080p> -> <bdd 280n 12,860,743,680p> [backward reach with edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 280n 12,860,743,680p> -> <bdd 284n 20,108,943,360p> [backward reach with edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 284n 20,108,943,360p> -> <bdd 266n 4,906,967,040p> [backward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 266n 4,906,967,040p> -> <bdd 280n 6,061,547,520p> [backward reach with edge: (event: A_conveyer_c_off) (guard: A_conveyer.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_conveyer := A_conveyer.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 280n 6,061,547,520p> -> <bdd 260n 2,633,637,888p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 260n 2,633,637,888p> -> <bdd 249n 1,776,660,480p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 249n 1,776,660,480p> -> <bdd 230n 919,683,072p> [backward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 230n 919,683,072p> -> <bdd 225n 613,122,048p> [backward reach with edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 225n 613,122,048p> -> <bdd 224n 613,122,048p> [backward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 224n 613,122,048p> -> <bdd 223n 613,122,048p> [backward reach with edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 223n 613,122,048p> -> <bdd 216n 546,932,736p> [backward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 216n 546,932,736p> -> <bdd 221n 640,991,232p> [backward reach with edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 221n 640,991,232p> -> <bdd 218n 640,991,232p> [backward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 218n 640,991,232p> -> <bdd 211n 766,402,560p> [backward reach with edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 211n 766,402,560p> -> <bdd 211n 689,762,304p> [backward reach with edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 211n 689,762,304p> -> <bdd 211n 724,598,784p> [backward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 211n 724,598,784p> -> <bdd 208n 529,514,496p> [backward reach with edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 208n 529,514,496p> -> <bdd 206n 418,037,760p> [backward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 206n 418,037,760p> -> <bdd 208n 501,645,312p> [backward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 208n 501,645,312p> -> <bdd 205n 250,822,656p> [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 205n 250,822,656p> -> <bdd 253n 3,887,751,168p> [backward reach with edge: (event: A_x2testing_c_on) (guard: <bdd 17n 15p>) (assignments: A_x2testing := A_x2testing.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 253n 3,887,751,168p> -> <bdd 258n 3,960,907,776p> [backward reach with edge: (event: A_zdown_c_off) (guard: <bdd 16n 8p>) (assignments: A_zdown := A_zdown.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 258n 3,960,907,776p> -> <bdd 261n 4,034,064,384p> [backward reach with edge: (event: A_gripperclose_c_off) (guard: S_Hinitialized.On and S_xpos_atdrop.On and (A_gripperclose.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 261n 4,034,064,384p> -> <bdd 260n 4,538,322,432p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 260n 4,538,322,432p> -> <bdd 264n 6,051,096,576p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 264n 6,051,096,576p> -> <bdd 270n 6,051,096,576p> [backward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 270n 6,051,096,576p> -> <bdd 268n 5,042,580,480p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 268n 5,042,580,480p> -> <bdd 267n 4,034,064,384p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 267n 4,034,064,384p> -> <bdd 265n 3,025,548,288p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 265n 3,025,548,288p> -> <bdd 274n 7,311,741,696p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 274n 7,311,741,696p> -> <bdd 282n 9,580,902,912p> [backward reach with edge: (event: A_elevator_down_c_on) (guard: S_opticalT.Off and S_elevator_up.On and (S_pusher.Off and S_Tinitialized.On) and (PusherLift.Four and A_elevator_up.Off and (TTimer.Timeout and A_elevator_down.Off))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 282n 9,580,902,912p> -> <bdd 293n 13,614,967,296p> [backward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 293n 13,614,967,296p> -> <bdd 300n 16,136,257,536p> [backward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 300n 16,136,257,536p> -> <bdd 316n 21,683,096,064p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 316n 21,683,096,064p> -> <bdd 326n 26,725,676,544p> [backward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 326n 26,725,676,544p> -> <bdd 325n 27,229,934,592p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 325n 27,229,934,592p> -> <bdd 313n 13,614,967,296p> [backward reach with edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 313n 13,614,967,296p> -> <bdd 309n 9,076,644,864p> [backward reach with edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 309n 9,076,644,864p> -> <bdd 305n 9,076,644,864p> [backward reach with edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 305n 9,076,644,864p> -> <bdd 303n 9,076,644,864p> [backward reach with edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 303n 9,076,644,864p> -> <bdd 299n 7,924,055,040p> [backward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 299n 7,924,055,040p> -> <bdd 292n 7,924,055,040p> [backward reach with edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 292n 7,924,055,040p> -> <bdd 291n 7,347,760,128p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 291n 7,347,760,128p> -> <bdd 285n 13,542,930,432p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 285n 13,542,930,432p> -> <bdd 283n 12,966,635,520p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 283n 12,966,635,520p> -> <bdd 278n 11,814,045,696p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 278n 11,814,045,696p> -> <bdd 286n 19,449,953,280p> [backward reach with edge: (event: A_drill_c_off) (guard: S_drill_up.On and ClampDrill.seven and (A_drill.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 286n 19,449,953,280p> -> <bdd 296n 46,247,666,688p> [backward reach with edge: (event: PTimer_c_on) (guard: S_Pinitialized.On and (PTimer.Off and S_turntable.On)) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 296n 46,247,666,688p> -> <bdd 295n 46,247,666,688p> [backward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 295n 46,247,666,688p> -> <bdd 283n 30,831,777,792p> [backward reach with edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 283n 30,831,777,792p> -> <bdd 279n 20,554,518,528p> [backward reach with edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 279n 20,554,518,528p> -> <bdd 263n 7,299,735,552p> [backward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 4.
Backward controlled-behavior: <bdd 263n 7,299,735,552p> -> <bdd 253n 3,139,264,512p> [backward reach with edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 253n 3,139,264,512p> -> <bdd 248n 2,080,235,520p> [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 248n 2,080,235,520p> -> <bdd 232n 1,059,028,992p> [backward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 232n 1,059,028,992p> -> <bdd 222n 1,021,206,528p> [backward reach with edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 222n 1,021,206,528p> -> <bdd 209n 756,449,280p> [backward reach with edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 209n 756,449,280p> -> <bdd 205n 756,449,280p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 205n 756,449,280p> -> <bdd 187n 302,579,712p> [backward reach with edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 187n 302,579,712p> -> <bdd 204n 316,588,032p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 204n 316,588,032p> -> <bdd 208n 316,588,032p> [backward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 208n 316,588,032p> -> <bdd 187n 313,786,368p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 187n 313,786,368p> -> <bdd 194n 319,389,696p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 194n 319,389,696p> -> <bdd 174n 184,909,824p> [backward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 174n 184,909,824p> -> <bdd 160n 103,661,568p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 160n 103,661,568p> -> <bdd 152n 103,661,568p> [backward reach with edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 152n 103,661,568p> -> <bdd 141n 70,041,600p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 141n 70,041,600p> -> <bdd 159n 210,124,800p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 159n 210,124,800p> -> <bdd 182n 350,208,000p> [backward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 182n 350,208,000p> -> <bdd 193n 423,051,264p> [backward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 193n 423,051,264p> -> <bdd 204n 507,101,184p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 204n 507,101,184p> -> <bdd 214n 571,539,456p> [backward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 214n 571,539,456p> -> <bdd 213n 574,341,120p> [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 213n 574,341,120p> -> <bdd 212n 392,970,240p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 212n 392,970,240p> -> <bdd 210n 423,198,720p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 210n 423,198,720p> -> <bdd 205n 332,513,280p> [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 205n 332,513,280p> -> <bdd 194n 181,370,880p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 194n 181,370,880p> -> <bdd 198n 201,523,200p> [backward reach with edge: (event: A_drillup_c_on) (guard: A_drillup.Off and (S_drill_down.On and ClampDrill.six)) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 5.
Backward controlled-behavior: <bdd 198n 201,523,200p> -> <bdd 197n 201,523,200p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 197n 201,523,200p> -> <bdd 225n 209,387,520p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 225n 209,387,520p> -> <bdd 227n 207,421,440p> [backward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 227n 207,421,440p> -> <bdd 198n 196,608,000p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 198n 196,608,000p> -> <bdd 204n 196,608,000p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 204n 196,608,000p> -> <bdd 177n 108,134,400p> [backward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 177n 108,134,400p> -> <bdd 156n 54,067,200p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 156n 54,067,200p> -> <bdd 150n 54,067,200p> [backward reach with edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 150n 54,067,200p> -> <bdd 129n 28,508,160p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 129n 28,508,160p> -> <bdd 137n 59,965,440p> [backward reach with edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 137n 59,965,440p> -> <bdd 151n 103,219,200p> [backward reach with edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 151n 103,219,200p> -> <bdd 158n 118,947,840p> [backward reach with edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 158n 118,947,840p> -> <bdd 166n 142,540,800p> [backward reach with edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 166n 142,540,800p> -> <bdd 167n 141,557,760p> [backward reach with edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 167n 141,557,760p> -> <bdd 166n 141,557,760p> [backward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 166n 141,557,760p> -> <bdd 170n 155,713,536p> [backward reach with edge: (event: A_drilldown_c_off) (guard: A_drilldown.On and (S_drill_down.On and ClampDrill.five)) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 6.
Backward controlled-behavior: <bdd 170n 155,713,536p> -> <bdd 161n 141,656,064p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 161n 141,656,064p> -> <bdd 171n 142,737,408p> [backward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 171n 142,737,408p> -> <bdd 154n 137,330,688p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 154n 137,330,688p> -> <bdd 155n 136,249,344p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 155n 136,249,344p> -> <bdd 145n 74,612,736p> [backward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 145n 74,612,736p> -> <bdd 135n 45,416,448p> [backward reach with edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 135n 45,416,448p> -> <bdd 115n 12,976,128p> [backward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 115n 12,976,128p> -> <bdd 116n 14,155,776p> [backward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 116n 14,155,776p> -> <bdd 115n 14,155,776p> [backward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 7.
Backward controlled-behavior: <bdd 115n 14,155,776p> -> <bdd 116n 15,335,424p> [backward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 116n 15,335,424p> -> <bdd 124n 17,694,720p> [backward reach with edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off and S_drill_up.On and (ClampDrill.four and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 124n 17,694,720p> -> <bdd 128n 24,182,784p> [backward reach with edge: (event: A_drillup_c_off) (guard: A_drillup.On and S_drill_up.On and (ClampDrill.three and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 8.
Backward controlled-behavior: <bdd 128n 24,182,784p> -> <bdd 126n 17,694,720p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 126n 17,694,720p> -> <bdd 123n 20,054,016p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 123n 20,054,016p> -> <bdd 118n 17,694,720p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 118n 17,694,720p> -> <bdd 130n 41,877,504p> [backward reach with edge: (event: A_drill_c_on) (guard: S_clamp.On and S_drill_up.On and (ClampDrill.two and (A_drill.Off and S_Pinitialized.On))) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 9.
Backward controlled-behavior: <bdd 130n 41,877,504p> -> <bdd 126n 24,182,784p> [backward reach with edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 126n 24,182,784p> -> <bdd 125n 18,874,368p> [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 125n 18,874,368p> -> <bdd 123n 20,054,016p> [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward controlled-behavior: <bdd 123n 20,054,016p> -> <bdd 119n 20,054,016p> [backward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: <bdd 119n 20,054,016p>]
Backward reachability: iteration 10.
Backward controlled-behavior: <bdd 119n 20,054,016p> [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 119n 40,998,158p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: <bdd 119n 20,054,016p>)
    Edge: (event: S_product1_u_off) (guard: S_product1.On) (assignments: S_product1 := S_product1.Off)
    Edge: (event: S_product1_u_on) (guard: S_product1.Off) (assignments: S_product1 := S_product1.On)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_product3_u_off) (guard: S_product3.On) (assignments: S_product3 := S_product3.Off)
    Edge: (event: S_product3_u_on) (guard: S_product3.Off) (assignments: S_product3 := S_product3.On)
    Edge: (event: S_pusher1_in_u_off) (guard: S_pusher1_in.On) (assignments: S_pusher1_in := S_pusher1_in.Off)
    Edge: (event: S_pusher1_in_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_in := S_pusher1_in.On)
    Edge: (event: S_pusher1_out_u_off) (guard: S_pusher1_out.On) (assignments: S_pusher1_out := S_pusher1_out.Off)
    Edge: (event: S_pusher1_out_u_on) (guard: S_pusher1_out.Off and S_pusher1_in.Off) (assignments: S_pusher1_out := S_pusher1_out.On)
    Edge: (event: S_stack1_filled_u_off) (guard: S_stack1_filled.On) (assignments: S_stack1_filled := S_stack1_filled.Off)
    Edge: (event: S_stack1_filled_u_on) (guard: S_stack1_filled.Off) (assignments: S_stack1_filled := S_stack1_filled.On)
    Edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off)
    Edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On)
    Edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off)
    Edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On)
    Edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off)
    Edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On)
    Edge: (event: S_pusher3_in_u_off) (guard: S_pusher3_in.On) (assignments: S_pusher3_in := S_pusher3_in.Off)
    Edge: (event: S_pusher3_in_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_in := S_pusher3_in.On)
    Edge: (event: S_pusher3_out_u_off) (guard: S_pusher3_out.On) (assignments: S_pusher3_out := S_pusher3_out.Off)
    Edge: (event: S_pusher3_out_u_on) (guard: S_pusher3_in.Off and S_pusher3_out.Off) (assignments: S_pusher3_out := S_pusher3_out.On)
    Edge: (event: S_stack3_filled_u_off) (guard: S_stack3_filled.On) (assignments: S_stack3_filled := S_stack3_filled.Off)
    Edge: (event: S_stack3_filled_u_on) (guard: S_stack3_filled.Off) (assignments: S_stack3_filled := S_stack3_filled.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher1_c_off) (guard: S_pusher1_out.On and S_stack1_filled.On and (A_pusher1.On and (S_Dinitialized.On and S_product1.Off))) (assignments: A_pusher1 := A_pusher1.Off)
    Edge: (event: A_pusher1_c_on) (guard: S_pusher1_in.On and A_pusher1.Off and (S_Dinitialized.On and S_product1.Off)) (assignments: A_pusher1 := A_pusher1.On)
    Edge: (event: A_pusher2_c_off) (guard: S_pusher2_out.On and S_stack2_filled.On and (S_Dinitialized.On and (A_pusher2.On and S_product2.Off))) (assignments: A_pusher2 := A_pusher2.Off)
    Edge: (event: A_pusher2_c_on) (guard: S_pusher2_in.On and S_Dinitialized.On and (A_pusher2.Off and S_product2.Off)) (assignments: A_pusher2 := A_pusher2.On)
    Edge: (event: A_pusher3_c_off) (guard: S_Dinitialized.On and S_pusher3_out.On and (S_stack3_filled.On and (A_pusher3.On and S_product3.Off))) (assignments: A_pusher3 := A_pusher3.Off)
    Edge: (event: A_pusher3_c_on) (guard: S_Dinitialized.On and S_pusher3_in.On and (A_pusher3.Off and S_product3.Off)) (assignments: A_pusher3 := A_pusher3.On)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_xpos_at1_u_off) (guard: S_xpos_at1.On) (assignments: S_xpos_at1 := S_xpos_at1.Off)
    Edge: (event: S_xpos_at1_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at1 := S_xpos_at1.On)
    Edge: (event: S_xpos_at2_u_off) (guard: S_xpos_at2.On) (assignments: S_xpos_at2 := S_xpos_at2.Off)
    Edge: (event: S_xpos_at2_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at2 := S_xpos_at2.On)
    Edge: (event: S_xpos_at3_u_off) (guard: S_xpos_at3.On) (assignments: S_xpos_at3 := S_xpos_at3.Off)
    Edge: (event: S_xpos_at3_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_at3 := S_xpos_at3.On)
    Edge: (event: S_xpos_atdrop_u_off) (guard: S_xpos_atdrop.On) (assignments: S_xpos_atdrop := S_xpos_atdrop.Off)
    Edge: (event: S_xpos_atdrop_u_on) (guard: S_xpos_at3.Off and S_xpos_atdrop.Off and (S_xpos_at2.Off and S_xpos_at1.Off)) (assignments: S_xpos_atdrop := S_xpos_atdrop.On)
    Edge: (event: S_zpos_atup_u_off) (guard: S_zpos_atup.On) (assignments: S_zpos_atup := S_zpos_atup.Off)
    Edge: (event: S_zpos_atup_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atup := S_zpos_atup.On)
    Edge: (event: S_zpos_atdown_u_off) (guard: S_zpos_atdown.On) (assignments: S_zpos_atdown := S_zpos_atdown.Off)
    Edge: (event: S_zpos_atdown_u_on) (guard: S_zpos_atup.Off and S_zpos_atdown.Off) (assignments: S_zpos_atdown := S_zpos_atdown.On)
    Edge: (event: S_gripper_u_off) (guard: S_gripper.On) (assignments: S_gripper := S_gripper.Off)
    Edge: (event: S_gripper_u_on) (guard: S_gripper.Off) (assignments: S_gripper := S_gripper.On)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_vacuum_u_off) (guard: S_vacuum.On) (assignments: S_vacuum := S_vacuum.Off)
    Edge: (event: S_vacuum_u_on) (guard: S_vacuum.Off) (assignments: S_vacuum := S_vacuum.On)
    Edge: (event: S_Hinitialized_u_off) (guard: S_Hinitialized.On) (assignments: S_Hinitialized := S_Hinitialized.Off)
    Edge: (event: S_Hinitialized_u_on) (guard: S_Hinitialized.Off) (assignments: S_Hinitialized := S_Hinitialized.On)
    Edge: (event: A_x2distributing_c_off) (guard: <bdd 15n 7p>) (assignments: A_x2distributing := A_x2distributing.Off)
    Edge: (event: A_x2distributing_c_on) (guard: S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.On and (A_x2distributing.Off and S_xpos_at3.On)) or S_transfer_athalfway.On and (S_Hinitialized.On and S_product4.On) and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.On and S_Hinitialized.On and (S_product4.Off and (A_x2distributing.Off and S_xpos_atdrop.On)) or (S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and S_xpos_at3.On) or S_transfer_athalfway.Off and S_Hinitialized.On and (A_x2distributing.Off and (S_xpos_at3.Off and S_xpos_atdrop.On))))) (assignments: A_x2distributing := A_x2distributing.On)
    Edge: (event: A_x2testing_c_off) (guard: <bdd 28n 12p>) (assignments: A_x2testing := A_x2testing.Off)
    Edge: (event: A_x2testing_c_on) (guard: <bdd 17n 15p>) (assignments: A_x2testing := A_x2testing.On)
    Edge: (event: A_zdown_c_off) (guard: <bdd 16n 8p>) (assignments: A_zdown := A_zdown.Off)
    Edge: (event: A_zdown_c_on) (guard: <bdd 85n 32p>) (assignments: A_zdown := A_zdown.On)
    Edge: (event: A_gripperclose_c_off) (guard: S_Hinitialized.On and S_xpos_atdrop.On and (A_gripperclose.On and S_zpos_atdown.On)) (assignments: A_gripperclose := A_gripperclose.Off)
    Edge: (event: A_gripperclose_c_on) (guard: S_Hinitialized.On and S_xpos_at3.On and (A_gripperclose.Off and S_zpos_atdown.On) or (S_Hinitialized.On and S_xpos_at3.Off and (S_xpos_at2.On and (A_gripperclose.Off and S_zpos_atdown.On)) or S_Hinitialized.On and (S_xpos_at3.Off and S_xpos_at2.Off) and (S_xpos_at1.On and (A_gripperclose.Off and S_zpos_atdown.On)))) (assignments: A_gripperclose := A_gripperclose.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: S_transfer_athalfway.On and S_transfer_atpickup.On and (A_transfer2pickpos.On and S_Hinitialized.On) or (S_transfer_athalfway.On and S_transfer_atpickup.Off and (A_transfer2pickpos.On and (S_Hinitialized.On and S_product4.Off)) or S_transfer_athalfway.Off and S_transfer_atpickup.On and (A_transfer2pickpos.On and S_Hinitialized.On))) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: <bdd 13n 3p>) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)
    Edge: (event: A_transfer2droppos_c_off) (guard: S_elevator_down.On and S_capacitive.On and (S_transfer_athalfway.On and (A_transfer2droppos.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.On and S_transfer_athalfway.Off) and (A_transfer2droppos.On and (S_transfer_atdrop.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (A_transfer2droppos.On and (S_transfer_atdrop.On and S_Hinitialized.On)) or (S_elevator_down.Off and S_transfer_athalfway.On and (A_transfer2droppos.On and S_Hinitialized.On) or S_elevator_down.Off and S_transfer_athalfway.Off and (A_transfer2droppos.On and (S_transfer_atdrop.On and S_Hinitialized.On))))) (assignments: A_transfer2droppos := A_transfer2droppos.Off)
    Edge: (event: A_transfer2droppos_c_on) (guard: S_elevator_down.On and (S_capacitive.On and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.On and (S_capacitive.Off and S_transfer_athalfway.On) and (A_transfer2droppos.Off and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or (S_elevator_down.On and S_capacitive.Off and (S_transfer_athalfway.Off and A_transfer2droppos.Off) and (S_transfer_atpickup.On and A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)) or S_elevator_down.Off and (A_transfer2droppos.Off and S_transfer_atpickup.On) and (A_transfer2pickpos.Off and (S_vacuum.On and S_Hinitialized.On)))) (assignments: A_transfer2droppos := A_transfer2droppos.On)
    Edge: (event: A_vacuum_c_off) (guard: S_transfer_atdrop.On and (A_vacuum.On and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.Off)
    Edge: (event: A_vacuum_c_on) (guard: S_transfer_atpickup.On and (A_vacuum.Off and S_Hinitialized.On)) (assignments: A_vacuum := A_vacuum.On)
    Edge: (event: A_ejectpulse_c_off) (guard: S_vacuum.Off and (A_ejectpulse.On and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.Off)
    Edge: (event: A_ejectpulse_c_on) (guard: S_transfer_atdrop.On and S_vacuum.On and (A_ejectpulse.Off and S_Hinitialized.On)) (assignments: A_ejectpulse := A_ejectpulse.On)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_opticalT_u_off) (guard: S_opticalT.On) (assignments: S_opticalT := S_opticalT.Off)
    Edge: (event: S_opticalT_u_on) (guard: S_opticalT.Off) (assignments: S_opticalT := S_opticalT.On)
    Edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off)
    Edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On)
    Edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off)
    Edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On)
    Edge: (event: S_productheight_u_off) (guard: S_productheight.On) (assignments: S_productheight := S_productheight.Off)
    Edge: (event: S_productheight_u_on) (guard: S_productheight.Off) (assignments: S_productheight := S_productheight.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_elevator_up_c_off) (guard: S_opticalT.Off and (S_elevator_up.On and S_pusher.Off) and (S_Tinitialized.On and (A_elevator_up.On and TTimer.Timeout))) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: S_pusher.Off and S_Tinitialized.On and (A_elevator_up.Off and TTimer.Timeout) and (A_elevator_down.Off and S_reflective.Off and (S_elevator_down.On and (S_capacitive.On and S_transfer_athalfway.On)))) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: <bdd 11n 1p>) (assignments: A_elevator_down := A_elevator_down.Off, PusherLift := PusherLift.Two)
    Edge: (event: A_elevator_down_c_on) (guard: S_opticalT.Off and S_elevator_up.On and (S_pusher.Off and S_Tinitialized.On) and (PusherLift.Four and A_elevator_up.Off and (TTimer.Timeout and A_elevator_down.Off))) (assignments: A_elevator_down := A_elevator_down.On, PusherLift := PusherLift.One)
    Edge: (event: A_pusher_c_off) (guard: S_pusher.On and A_pusher.On and (S_Tinitialized.On and PusherLift.Three)) (assignments: A_pusher := A_pusher.Off, PusherLift := PusherLift.Four)
    Edge: (event: A_pusher_c_on) (guard: S_elevator_up.On and A_pusher.Off and (S_Tinitialized.On and (PusherLift.Two and S_productheight.On))) (assignments: A_pusher := A_pusher.On, PusherLift := PusherLift.Three)
    Edge: (event: A_airslide_c_off) (guard: A_airslide.On and (S_Tinitialized.On and S_elevator_down.On)) (assignments: A_airslide := A_airslide.Off)
    Edge: (event: A_airslide_c_on) (guard: S_atin.Off and A_airslide.Off and (S_elevator_up.On and (S_pusher.On and S_Tinitialized.On))) (assignments: A_airslide := A_airslide.On)
    Edge: (event: TTimer_c_on) (guard: A_pusher.Off and (S_Tinitialized.On and TTimer.Off)) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: A_pusher.On and (S_Tinitialized.On and TTimer.Running)) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: A_pusher.On and (S_Tinitialized.On and TTimer.Timeout)) (assignments: TTimer := TTimer.Off)
    Edge: (event: S_atin_u_off) (guard: S_atin.On) (assignments: S_atin := S_atin.Off)
    Edge: (event: S_atin_u_on) (guard: S_atin.Off) (assignments: S_atin := S_atin.On)
    Edge: (event: S_atseparator_u_off) (guard: S_atseparator.On) (assignments: S_atseparator := S_atseparator.Off)
    Edge: (event: S_atseparator_u_on) (guard: S_atseparator.Off) (assignments: S_atseparator := S_atseparator.On)
    Edge: (event: S_atend_u_off) (guard: S_atend.On) (assignments: S_atend := S_atend.Off)
    Edge: (event: S_atend_u_on) (guard: S_atend.Off) (assignments: S_atend := S_atend.On)
    Edge: (event: S_separator_opened_u_off) (guard: S_separator_opened.On) (assignments: S_separator_opened := S_separator_opened.Off)
    Edge: (event: S_separator_opened_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_opened := S_separator_opened.On)
    Edge: (event: S_separator_closed_u_off) (guard: S_separator_closed.On) (assignments: S_separator_closed := S_separator_closed.Off)
    Edge: (event: S_separator_closed_u_on) (guard: S_separator_opened.Off and S_separator_closed.Off) (assignments: S_separator_closed := S_separator_closed.On)
    Edge: (event: S_Binitialized_u_off) (guard: S_Binitialized.On) (assignments: S_Binitialized := S_Binitialized.Off)
    Edge: (event: S_Binitialized_u_on) (guard: S_Binitialized.Off) (assignments: S_Binitialized := S_Binitialized.On)
    Edge: (event: A_separator_c_off) (guard: S_turntable.On and (S_atinput.Off and S_Binitialized.On) and (A_separator.On and (S_atseparator.Off and S_separator_opened.On))) (assignments: A_separator := A_separator.Off)
    Edge: (event: A_separator_c_on) (guard: S_Binitialized.On and A_separator.Off and (S_atseparator.On and S_separator_closed.On)) (assignments: A_separator := A_separator.On)
    Edge: (event: A_conveyerB_c_off) (guard: BTimer.Timeout and (A_conveyerB.On and S_Binitialized.On)) (assignments: A_conveyerB := A_conveyerB.Off)
    Edge: (event: A_conveyerB_c_on) (guard: A_conveyerB.Off and (S_Binitialized.On and S_atin.On)) (assignments: A_conveyerB := A_conveyerB.On)
    Edge: (event: BTimer_c_on) (guard: BTimer.Off and S_atend.On) (assignments: BTimer := BTimer.Running)
    Edge: (event: BTimer_u_timeout) (guard: BTimer.Running) (assignments: BTimer := BTimer.Timeout)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Running and (not BTimer.Running or (A_conveyerB.Off or S_atin.On))) (assignments: BTimer := BTimer.Off)
    Edge: (event: BTimer_c_reset) (guard: BTimer.Timeout and (A_conveyerB.On and S_atin.On) or BTimer.Timeout and A_conveyerB.Off) (assignments: BTimer := BTimer.Off)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)
    Edge: (event: S_attest_u_off) (guard: S_attest.On) (assignments: S_attest := S_attest.Off)
    Edge: (event: S_attest_u_on) (guard: S_attest.Off) (assignments: S_attest := S_attest.On)
    Edge: (event: S_atdrill_u_off) (guard: S_atdrill.On) (assignments: S_atdrill := S_atdrill.Off)
    Edge: (event: S_atdrill_u_on) (guard: S_atdrill.Off) (assignments: S_atdrill := S_atdrill.On)
    Edge: (event: S_atexit_u_off) (guard: S_atexit.On) (assignments: S_atexit := S_atexit.Off)
    Edge: (event: S_atexit_u_on) (guard: S_atexit.Off) (assignments: S_atexit := S_atexit.On)
    Edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off)
    Edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On)
    Edge: (event: S_test_ok_u_off) (guard: S_test_ok.On) (assignments: S_test_ok := S_test_ok.Off)
    Edge: (event: S_test_ok_u_on) (guard: S_test_ok.Off) (assignments: S_test_ok := S_test_ok.On)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_down.Off and S_drill_up.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_drill_c_off) (guard: S_drill_up.On and ClampDrill.seven and (A_drill.On and S_Pinitialized.On)) (assignments: A_drill := A_drill.Off, ClampDrill := ClampDrill.eight)
    Edge: (event: A_drill_c_on) (guard: S_clamp.On and S_drill_up.On and (ClampDrill.two and (A_drill.Off and S_Pinitialized.On))) (assignments: A_drill := A_drill.On, ClampDrill := ClampDrill.three)
    Edge: (event: A_turntable_c_off) (guard: S_Pinitialized.On and (A_turntable.On and S_turntable.Off)) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, ClampDrill := ClampDrill.one)
    Edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One)
    Edge: (event: A_turntable_c_on) (guard: <bdd 17n 1p>) (assignments: A_turntable := A_turntable.On, Tester := Tester.One, ClampDrill := ClampDrill.one)
    Edge: (event: A_drilldown_c_off) (guard: A_drilldown.On and (S_drill_down.On and ClampDrill.five)) (assignments: A_drilldown := A_drilldown.Off, ClampDrill := ClampDrill.six)
    Edge: (event: A_drilldown_c_on) (guard: A_drilldown.Off and S_drill_up.On and (ClampDrill.four and S_Pinitialized.On)) (assignments: A_drilldown := A_drilldown.On, ClampDrill := ClampDrill.five)
    Edge: (event: A_drillup_c_off) (guard: A_drillup.On and S_drill_up.On and (ClampDrill.three and S_Pinitialized.On)) (assignments: A_drillup := A_drillup.Off, ClampDrill := ClampDrill.four)
    Edge: (event: A_drillup_c_on) (guard: A_drillup.Off and (S_drill_down.On and ClampDrill.six)) (assignments: A_drillup := A_drillup.On, ClampDrill := ClampDrill.seven)
    Edge: (event: A_clamp_c_off) (guard: S_drill_up.On and ClampDrill.eight and (A_clamp.On and (A_drill.Off and S_Pinitialized.On))) (assignments: A_clamp := A_clamp.Off, ClampDrill := ClampDrill.nine)
    Edge: (event: A_clamp_c_on) (guard: <bdd 11n 1p>) (assignments: A_clamp := A_clamp.On, ClampDrill := ClampDrill.two)
    Edge: (event: A_tester_c_off) (guard: S_Pinitialized.On and A_tester.On and (Tester.Two and S_test_ok.On)) (assignments: A_tester := A_tester.Off, Tester := Tester.Three)
    Edge: (event: A_tester_c_on) (guard: S_attest.On and (S_Pinitialized.On and A_turntable.Off) and (PTimer.Timeout and S_turntable.On and (A_tester.Off and Tester.One))) (assignments: A_tester := A_tester.On, Tester := Tester.Two)
    Edge: (event: A_eject_c_off) (guard: S_Pinitialized.On and A_eject.On and (S_atexit.Off and A_conveyer.Off)) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: S_Pinitialized.On and (A_turntable.Off and PTimer.Timeout) and (S_turntable.On and (A_eject.Off and S_atexit.On))) (assignments: A_eject := A_eject.On)
    Edge: (event: PTimer_c_on) (guard: S_Pinitialized.On and (PTimer.Off and S_turntable.On)) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: S_Pinitialized.On and (PTimer.Running and S_turntable.Off)) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: S_Pinitialized.On and (PTimer.Timeout and S_turntable.Off)) (assignments: PTimer := PTimer.Off)
    Edge: (event: S_product_u_off) (guard: S_product.On) (assignments: S_product := S_product.Off)
    Edge: (event: S_product_u_on) (guard: S_product.Off) (assignments: S_product := S_product.On)
    Edge: (event: S_inductive_u_off) (guard: S_inductive.On) (assignments: S_inductive := S_inductive.Off)
    Edge: (event: S_inductive_u_on) (guard: S_inductive.Off) (assignments: S_inductive := S_inductive.On)
    Edge: (event: S_optical_u_off) (guard: S_optical.On) (assignments: S_optical := S_optical.Off)
    Edge: (event: S_optical_u_on) (guard: S_optical.Off) (assignments: S_optical := S_optical.On)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_gate1_opened_u_off) (guard: S_gate1_opened.On) (assignments: S_gate1_opened := S_gate1_opened.Off)
    Edge: (event: S_gate1_opened_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_opened := S_gate1_opened.On)
    Edge: (event: S_gate1_closed_u_off) (guard: S_gate1_closed.On) (assignments: S_gate1_closed := S_gate1_closed.Off)
    Edge: (event: S_gate1_closed_u_on) (guard: S_gate1_closed.Off and S_gate1_opened.Off) (assignments: S_gate1_closed := S_gate1_closed.On)
    Edge: (event: S_gate2_opened_u_off) (guard: S_gate2_opened.On) (assignments: S_gate2_opened := S_gate2_opened.Off)
    Edge: (event: S_gate2_opened_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_opened := S_gate2_opened.On)
    Edge: (event: S_gate2_closed_u_off) (guard: S_gate2_closed.On) (assignments: S_gate2_closed := S_gate2_closed.Off)
    Edge: (event: S_gate2_closed_u_on) (guard: S_gate2_closed.Off and S_gate2_opened.Off) (assignments: S_gate2_closed := S_gate2_closed.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_conveyer_c_off) (guard: A_conveyer.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_conveyer := A_conveyer.Off)
    Edge: (event: A_conveyer_c_on) (guard: A_conveyer.Off and (S_Sinitialized.On and S_product.On)) (assignments: A_conveyer := A_conveyer.On)
    Edge: (event: A_gate1_c_off) (guard: S_gate1_closed.On and A_gate1.On and (A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On))) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: S_gate1_opened.On and (S_inductive.Off and S_optical.On) and (A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate1 := A_gate1.On)
    Edge: (event: A_gate2_c_off) (guard: S_gate2_closed.On and A_gate2.On and (A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On))) (assignments: A_gate2 := A_gate2.Off)
    Edge: (event: A_gate2_c_on) (guard: S_gate2_opened.On and (S_inductive.On and S_optical.On) and (A_gate2.Off and A_stopperretract.Off and (S_Sinitialized.On and STimer.Timeout))) (assignments: A_gate2 := A_gate2.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off and S_Sinitialized.On and (S_slidefull.Off and STimer.Timeout)) (assignments: A_stopperretract := A_stopperretract.On)
    Edge: (event: STimer_c_on) (guard: STimer.Off and S_product.On) (assignments: STimer := STimer.Running)
    Edge: (event: STimer_u_timeout) (guard: STimer.Running) (assignments: STimer := STimer.Timeout)
    Edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Running) (assignments: STimer := STimer.Off)
    Edge: (event: STimer_c_reset) (guard: S_slidefull.On and STimer.Timeout) (assignments: STimer := STimer.Off)

Controlled system:                     exactly 22,213,720,450,066,030,000,000,000 states.

Initial (synthesis result):            <bdd 119n 20,054,016p>
Initial (uncontrolled system):         <bdd 103n 1p>
Initial (controlled system):           <bdd 103n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Constructing output CIF specification.
Finished MLDES synthesis.

Timing measurement           Duration
---------------------------  --------
Total time                   8,679 ms
  Read input model              31 ms
  Preprocess input model        12 ms
  Create matrix                 10 ms
  Clustering in Matlab         999 ms
  Import clustering results     10 ms
  Synthesize supervisors     1,521 ms
  Nonconflicting check       1,148 ms

Controlled system  State space size
-----------------  ----------------
1                         16 states
2                      5,120 states
3                      5,120 states
4                         24 states
5                         48 states
6                         24 states
7                        360 states
8                     36,864 states
9                        192 states
10                        12 states
11                        48 states
12                        48 states
13                       144 states
14                         4 states
15                     1,980 states
16                        12 states
17                         8 states
18                         4 states
19                        96 states
20                         4 states
21                       384 states
22                        96 states
23                         6 states
24                        24 states
Total states          50,638 states
