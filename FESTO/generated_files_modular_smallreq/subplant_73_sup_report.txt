Reading CIF file "generated_files_modular_smallreq/subplant_73.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_transfer2pickpos    0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_product4            1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_transfer_atdrop     2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_transfer_athalfway  3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_transfer_atpickup   4      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                5      10        20          20          100%

Applying automatic variable ordering:
  Number of hyperedges: 11

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    9 (total)                 0.82 (avg/edge) [before]
    Total span:                    9 (total)                 0.82 (avg/edge) [iteration 1]
    Total span:                    9 (total)                 0.82 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    9 (total)                 0.82 (avg/edge) [before]
    Total span:                    8 (total)                 0.73 (avg/edge) [window 1..4]
    Total span:                    8 (total)                 0.73 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_transfer2pickpos    0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_product4            1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_transfer_athalfway  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_transfer_atpickup   3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_transfer_atdrop     4      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                5      10        20          20          100%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_product4.Off
Initial   (aut/locs init predicate):     S_transfer_atpickup.Off
Initial   (aut/locs init predicate):     S_transfer_atdrop.Off
Initial   (aut/locs init predicate):     S_transfer_athalfway.On
Initial   (aut/locs init predicate):     A_transfer2pickpos.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    A_transfer2pickpos.Off and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off))
Initial   (uncontrolled system):         A_transfer2pickpos.Off and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off))
Initial   (system, combined init/inv):   A_transfer2pickpos.Off and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_product4.Off
Marked    (aut/locs marker predicate):   S_transfer_atpickup.Off
Marked    (aut/locs marker predicate):   S_transfer_atdrop.Off
Marked    (aut/locs marker predicate):   S_transfer_athalfway.On
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  S_product4.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)
Marked    (uncontrolled system):         S_product4.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)
Marked    (system, combined marked/inv): S_product4.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)

State/event exclusion requirements:
  Event "A_transfer2pickpos_c_off" needs:
    (S_product4.Off or S_transfer_atpickup.On) and (S_product4.On or (S_transfer_athalfway.On or S_transfer_atpickup.On))

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off): guard: A_transfer2pickpos.On -> (A_transfer2pickpos.Off or (S_product4.Off or S_transfer_atpickup.On)) and ((A_transfer2pickpos.Off or S_product4.On or (S_transfer_athalfway.On or S_transfer_atpickup.On)) and A_transfer2pickpos.On) [requirement: (S_product4.Off or S_transfer_atpickup.On) and (S_product4.On or (S_transfer_athalfway.On or S_transfer_atpickup.On))].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On -> (A_transfer2pickpos.Off or (S_product4.Off or S_transfer_atpickup.On)) and ((A_transfer2pickpos.Off or S_product4.On or (S_transfer_athalfway.On or S_transfer_atpickup.On)) and A_transfer2pickpos.On)) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: S_product4.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: S_product4.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) -> S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) [backward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) -> S_transfer_athalfway.On and S_transfer_atdrop.Off [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: S_transfer_athalfway.On and S_transfer_atdrop.Off -> S_transfer_athalfway.On [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: S_transfer_athalfway.On -> S_transfer_athalfway.On or S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: S_transfer_athalfway.On or S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) -> S_transfer_athalfway.On or S_transfer_atdrop.Off [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: S_transfer_athalfway.On or S_transfer_atdrop.Off -> true [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_transfer2pickpos.Off and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_transfer2pickpos.Off and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) -> A_transfer2pickpos.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) [forward reach with edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_transfer2pickpos.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) -> A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_transfer2pickpos.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) -> S_transfer_atpickup.Off and S_transfer_atdrop.Off [forward reach with edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off) (assignments: A_transfer2pickpos := A_transfer2pickpos.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: S_transfer_atpickup.Off and S_transfer_atdrop.Off -> S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) or S_transfer_athalfway.Off and S_transfer_atdrop.Off [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) or S_transfer_athalfway.Off and S_transfer_atdrop.Off -> (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off))) [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off))) [fixed point].
Controlled behavior: true -> (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off))).

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: S_product4.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: S_product4.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) -> S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) [backward reach with edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off), restricted to current/previous controlled-behavior predicate: (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off)))]
Backward controlled-behavior: S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) -> S_transfer_atpickup.Off and S_transfer_atdrop.Off [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off)))]
Backward reachability: iteration 2.
Backward controlled-behavior: S_transfer_atpickup.Off and S_transfer_atdrop.Off -> S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) or S_transfer_athalfway.Off and S_transfer_atdrop.Off [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off)))]
Backward controlled-behavior: S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) or S_transfer_athalfway.Off and S_transfer_atdrop.Off -> (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off))) [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off)))]
Backward reachability: iteration 3.
Backward controlled-behavior: (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off))) [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: (S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.On)) and ((S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.On)) and (S_transfer_athalfway.On or S_transfer_atpickup.On)) [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On -> (A_transfer2pickpos.Off or (S_product4.Off or S_transfer_atpickup.On)) and ((A_transfer2pickpos.Off or S_product4.On or (S_transfer_athalfway.On or S_transfer_atpickup.On)) and A_transfer2pickpos.On)) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off): guard: (A_transfer2pickpos.Off or (S_product4.Off or S_transfer_atpickup.On)) and ((A_transfer2pickpos.Off or S_product4.On or (S_transfer_athalfway.On or S_transfer_atpickup.On)) and A_transfer2pickpos.On) -> A_transfer2pickpos.On and S_product4.On and (S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off)) or (A_transfer2pickpos.On and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) or A_transfer2pickpos.On and S_product4.Off and (S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off))).
Edge (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off) (assignments: A_transfer2pickpos := A_transfer2pickpos.On): guard: A_transfer2pickpos.Off -> A_transfer2pickpos.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) or (A_transfer2pickpos.Off and S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off) or A_transfer2pickpos.Off and (S_transfer_athalfway.Off and S_transfer_atpickup.Off)).

Final synthesis result:
  State: (controlled-behavior: (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off))))
    Edge: (event: S_product4_u_off) (guard: S_product4.On) (assignments: S_product4 := S_product4.Off)
    Edge: (event: S_product4_u_on) (guard: S_product4.Off) (assignments: S_product4 := S_product4.On)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: A_transfer2pickpos_c_off) (guard: A_transfer2pickpos.On -> A_transfer2pickpos.On and S_product4.On and (S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off)) or (A_transfer2pickpos.On and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) or A_transfer2pickpos.On and S_product4.Off and (S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off)))) (assignments: A_transfer2pickpos := A_transfer2pickpos.Off)
    Edge: (event: A_transfer2pickpos_c_on) (guard: A_transfer2pickpos.Off -> A_transfer2pickpos.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) or (A_transfer2pickpos.Off and S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off) or A_transfer2pickpos.Off and (S_transfer_athalfway.Off and S_transfer_atpickup.Off))) (assignments: A_transfer2pickpos := A_transfer2pickpos.On)

Controlled system:                     exactly 16 states.

Initial (synthesis result):            (S_transfer_athalfway.Off or S_transfer_atpickup.Off) and ((S_transfer_athalfway.Off or (S_transfer_atpickup.On or S_transfer_atdrop.Off)) and (S_transfer_athalfway.On or (S_transfer_atpickup.Off or S_transfer_atdrop.Off)))
Initial (uncontrolled system):         A_transfer2pickpos.Off and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off))
Initial (controlled system):           A_transfer2pickpos.Off and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_transfer2pickpos_c_off: guard: A_transfer2pickpos.On and S_product4.On and (S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off)) or (A_transfer2pickpos.On and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) or A_transfer2pickpos.On and S_product4.Off and (S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off))) -> true [assume A_transfer2pickpos.On and S_product4.On and (S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off)) or (A_transfer2pickpos.On and S_product4.Off and (S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off)) or A_transfer2pickpos.On and S_product4.Off and (S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off)))].
  Event A_transfer2pickpos_c_on: guard: A_transfer2pickpos.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) or (A_transfer2pickpos.Off and S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off) or A_transfer2pickpos.Off and (S_transfer_athalfway.Off and S_transfer_atpickup.Off)) -> true [assume A_transfer2pickpos.Off and S_transfer_athalfway.On and (S_transfer_atpickup.Off and S_transfer_atdrop.Off) or (A_transfer2pickpos.Off and S_transfer_athalfway.Off and (S_transfer_atpickup.On and S_transfer_atdrop.Off) or A_transfer2pickpos.Off and (S_transfer_athalfway.Off and S_transfer_atpickup.Off))].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_smallreq/subplant_73_sup.cif".
