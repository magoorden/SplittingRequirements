plant automaton S_product1:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_product2:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_product3:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_pusher1_in:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_pusher1_out:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_stack1_filled:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_pusher2_in:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_pusher2_out:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_stack2_filled:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_pusher3_in:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_pusher3_out:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_stack3_filled:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_Dinitialized:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton A_pusher1:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_pusher2:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_pusher3:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton DDynamics1:
  location:
    initial;
    marked;
    edge S_pusher1_in.u_on when S_pusher1_out.Off;
    edge S_pusher1_out.u_on when S_pusher1_in.Off;
end
plant automaton DDynamics2:
  location:
    initial;
    marked;
    edge S_pusher2_in.u_on when S_pusher2_out.Off;
    edge S_pusher2_out.u_on when S_pusher2_in.Off;
end
plant automaton DDynamics3:
  location:
    initial;
    marked;
    edge S_pusher3_in.u_on when S_pusher3_out.Off;
    edge S_pusher3_out.u_on when S_pusher3_in.Off;
end
plant automaton S_product4:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_xpos_at1:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_xpos_at2:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_xpos_at3:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_xpos_atdrop:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_zpos_atup:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_zpos_atdown:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_gripper:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_transfer_atpickup:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_transfer_atdrop:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_transfer_athalfway:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_vacuum:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_Hinitialized:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton A_x2distributing:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_x2testing:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_zdown:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_gripperclose:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_transfer2pickpos:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked;
    edge c_on goto On;
end
plant automaton A_transfer2droppos:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked;
    edge c_on goto On;
end
plant automaton A_vacuum:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_ejectpulse:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton HDynamics1:
  location:
    initial;
    marked;
    edge S_xpos_at1.u_on when S_xpos_at2.Off and S_xpos_at3.Off and S_xpos_atdrop.Off;
    edge S_xpos_at2.u_on when S_xpos_at1.Off and S_xpos_at3.Off and S_xpos_atdrop.Off;
    edge S_xpos_at3.u_on when S_xpos_at1.Off and S_xpos_at2.Off and S_xpos_atdrop.Off;
    edge S_xpos_atdrop.u_on when S_xpos_at1.Off and S_xpos_at2.Off and S_xpos_at3.Off;
end
plant automaton HDynamics3:
  location:
    initial;
    marked;
    edge S_zpos_atup.u_on when S_zpos_atdown.Off;
    edge S_zpos_atdown.u_on when S_zpos_atup.Off;
end
plant automaton HDynamics2:
  location:
    initial;
    marked;
    edge S_transfer_atpickup.u_on when S_transfer_atdrop.Off and S_transfer_athalfway.Off;
    edge S_transfer_atdrop.u_on when S_transfer_atpickup.Off and S_transfer_athalfway.Off;
    edge S_transfer_athalfway.u_on when S_transfer_atdrop.Off and S_transfer_atpickup.Off;
end
plant automaton S_elevator_up:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_elevator_down:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_pusher:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_opticalT:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_capacitive:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_reflective:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_productheight:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_Tinitialized:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton A_elevator_up:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_elevator_down:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_pusher:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_airslide:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton TDynamics:
  location:
    initial;
    marked;
    edge S_elevator_up.u_on when S_elevator_down.Off;
    edge S_elevator_down.u_on when S_elevator_up.Off;
end
plant automaton TTimer:
  controllable c_on;
  controllable c_reset;
  uncontrollable u_timeout;
  location Off:
    initial;
    marked;
    edge c_on goto Running;
  location Running:
    edge u_timeout goto Timeout;
    edge c_reset goto Off;
  location Timeout:
    marked;
    edge c_reset goto Off;
end
supervisor automaton PusherLift:
  location One:
    initial;
    marked;
    edge A_elevator_down.c_off goto Two;
  location Two:
    edge A_pusher.c_on goto Three;
  location Three:
    edge A_pusher.c_off goto Four;
  location Four:
    edge A_elevator_down.c_on goto One;
end
plant automaton S_atin:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_atseparator:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_atend:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_separator_opened:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_separator_closed:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_Binitialized:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton A_separator:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_conveyerB:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton BTimer:
  controllable c_on;
  controllable c_reset;
  uncontrollable u_timeout;
  location Off:
    initial;
    marked;
    edge c_on goto Running;
  location Running:
    edge u_timeout goto Timeout;
    edge c_reset goto Off;
  location Timeout:
    marked;
    edge c_reset goto Off;
end
plant automaton BDynamics:
  location:
    initial;
    marked;
    edge S_separator_opened.u_on when S_separator_closed.Off;
    edge S_separator_closed.u_on when S_separator_opened.Off;
end
plant automaton S_atinput:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_attest:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_atdrill:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_atexit:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_clamp:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_test_ok:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_drill_up:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_drill_down:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_turntable:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_Pinitialized:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton A_drill:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_turntable:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_drilldown:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_drillup:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_clamp:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_tester:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_eject:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton PTimer:
  controllable c_on;
  controllable c_reset;
  uncontrollable u_timeout;
  location Off:
    initial;
    marked;
    edge c_on goto Running;
  location Running:
    edge u_timeout goto Timeout;
    edge c_reset goto Off;
  location Timeout:
    edge c_reset goto Off;
end
plant automaton PDynamics:
  location:
    initial;
    marked;
    edge S_drill_up.u_on when S_drill_down.Off;
    edge S_drill_down.u_on when S_drill_up.Off;
end
supervisor automaton Tester:
  location One:
    initial;
    marked;
    edge A_turntable.c_on;
    edge A_tester.c_on goto Two;
  location Two:
    edge A_tester.c_off goto Three;
  location Three:
    edge A_turntable.c_on goto One;
end
supervisor automaton ClampDrill:
  location one:
    initial;
    marked;
    edge A_turntable.c_on;
    edge A_clamp.c_on goto two;
  location two:
    edge A_drill.c_on goto three;
  location three:
    edge A_drillup.c_off goto four;
  location four:
    edge A_drilldown.c_on goto five;
  location five:
    edge A_drilldown.c_off goto six;
  location six:
    edge A_drillup.c_on goto seven;
  location seven:
    edge A_drill.c_off goto eight;
  location eight:
    edge A_clamp.c_off goto nine;
  location nine:
    edge A_turntable.c_on goto one;
end
plant automaton S_product:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_inductive:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_optical:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_slidefull:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_gate1_opened:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_gate1_closed:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_gate2_opened:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = true;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_gate2_closed:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton S_Sinitialized:
  uncontrollable u_on;
  uncontrollable u_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge u_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge u_on goto On;
end
plant automaton A_conveyer:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_gate1:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_gate2:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton A_stopperretract:
  controllable c_on;
  controllable c_off;
  alg bool InitialOn = false;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge c_off goto Off;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge c_on goto On;
end
plant automaton STimer:
  controllable c_on;
  controllable c_reset;
  uncontrollable u_timeout;
  location Off:
    initial;
    marked;
    edge c_on goto Running;
  location Running:
    edge u_timeout goto Timeout;
    edge c_reset goto Off;
  location Timeout:
    edge c_reset goto Off;
end
plant automaton SDynamics1:
  location:
    initial;
    marked;
    edge S_gate1_opened.u_on when S_gate1_closed.Off;
    edge S_gate1_closed.u_on when S_gate1_opened.Off;
end
plant automaton SDynamics2:
  location:
    initial;
    marked;
    edge S_gate2_opened.u_on when S_gate2_closed.Off;
    edge S_gate2_closed.u_on when S_gate2_opened.Off;
end
supervisor automaton sup:
  alphabet A_pusher1.c_off, A_pusher1.c_on, A_pusher2.c_off, A_pusher2.c_on, A_pusher3.c_off, A_pusher3.c_on, A_x2distributing.c_off, A_x2distributing.c_on, A_x2testing.c_off, A_x2testing.c_on, A_zdown.c_off, A_zdown.c_on, A_gripperclose.c_off, A_gripperclose.c_on, A_transfer2pickpos.c_off, A_transfer2pickpos.c_on, A_transfer2droppos.c_off, A_transfer2droppos.c_on, A_vacuum.c_off, A_vacuum.c_on, A_ejectpulse.c_off, A_ejectpulse.c_on, A_elevator_up.c_off, A_elevator_up.c_on, A_elevator_down.c_off, A_elevator_down.c_on, A_pusher.c_off, A_pusher.c_on, A_airslide.c_off, A_airslide.c_on, TTimer.c_on, TTimer.c_reset, A_separator.c_off, A_separator.c_on, A_conveyerB.c_off, A_conveyerB.c_on, BTimer.c_on, BTimer.c_reset, A_drill.c_off, A_drill.c_on, A_turntable.c_off, A_turntable.c_on, A_drilldown.c_off, A_drilldown.c_on, A_drillup.c_off, A_drillup.c_on, A_clamp.c_off, A_clamp.c_on, A_tester.c_off, A_tester.c_on, A_eject.c_off, A_eject.c_on, PTimer.c_on, PTimer.c_reset, A_conveyer.c_off, A_conveyer.c_on, A_gate1.c_off, A_gate1.c_on, A_gate2.c_off, A_gate2.c_on, A_stopperretract.c_off, A_stopperretract.c_on, STimer.c_on, STimer.c_reset;
  location:
    initial;
    marked;
    edge A_airslide.c_off when true;
    edge A_airslide.c_on when true;
    edge A_clamp.c_off when true;
    edge A_clamp.c_on when true;
    edge A_conveyer.c_off when true;
    edge A_conveyer.c_on when true;
    edge A_conveyerB.c_off when true;
    edge A_conveyerB.c_on when true;
    edge A_drill.c_off when true;
    edge A_drill.c_on when true;
    edge A_drilldown.c_off when true;
    edge A_drilldown.c_on when true;
    edge A_drillup.c_off when true;
    edge A_drillup.c_on when true;
    edge A_eject.c_off when true;
    edge A_eject.c_on when true;
    edge A_ejectpulse.c_off when true;
    edge A_ejectpulse.c_on when true;
    edge A_elevator_down.c_off when true;
    edge A_elevator_down.c_on when true;
    edge A_elevator_up.c_off when true;
    edge A_elevator_up.c_on when true;
    edge A_gate1.c_off when true;
    edge A_gate1.c_on when true;
    edge A_gate2.c_off when true;
    edge A_gate2.c_on when true;
    edge A_gripperclose.c_off when true;
    edge A_gripperclose.c_on when true;
    edge A_pusher.c_off when true;
    edge A_pusher.c_on when true;
    edge A_pusher1.c_off when true;
    edge A_pusher1.c_on when true;
    edge A_pusher2.c_off when true;
    edge A_pusher2.c_on when true;
    edge A_pusher3.c_off when true;
    edge A_pusher3.c_on when true;
    edge A_separator.c_off when true;
    edge A_separator.c_on when true;
    edge A_stopperretract.c_off when true;
    edge A_stopperretract.c_on when true;
    edge A_tester.c_off when true;
    edge A_tester.c_on when true;
    edge A_transfer2droppos.c_off when true;
    edge A_transfer2droppos.c_on when true;
    edge A_transfer2pickpos.c_off when true;
    edge A_transfer2pickpos.c_on when true;
    edge A_turntable.c_off when true;
    edge A_turntable.c_on when true;
    edge A_vacuum.c_off when true;
    edge A_vacuum.c_on when true;
    edge A_x2distributing.c_off when true;
    edge A_x2distributing.c_on when true;
    edge A_x2testing.c_off when true;
    edge A_x2testing.c_on when true;
    edge A_zdown.c_off when true;
    edge A_zdown.c_on when true;
    edge BTimer.c_on when true;
    edge BTimer.c_reset when true;
    edge PTimer.c_on when true;
    edge PTimer.c_reset when true;
    edge STimer.c_on when true;
    edge STimer.c_reset when true;
    edge TTimer.c_on when true;
    edge TTimer.c_reset when true;
end
requirement invariant A_elevator_up.c_on needs S_transfer_athalfway.On;
requirement invariant A_elevator_down.c_off needs S_transfer_athalfway.On;
requirement invariant A_elevator_up.c_on needs S_reflective.Off;
requirement invariant A_elevator_down.c_off needs S_reflective.Off;
requirement invariant A_transfer2droppos.c_on needs S_transfer_atpickup.On or S_transfer_athalfway.On and S_elevator_down.On and S_capacitive.Off;
requirement invariant A_transfer2droppos.c_off needs S_transfer_atdrop.On or S_transfer_athalfway.On and (S_elevator_down.Off or S_capacitive.On);
requirement invariant A_separator.c_off needs S_atinput.Off;
requirement invariant A_separator.c_off needs S_turntable.On;
requirement invariant A_eject.c_off needs A_conveyer.Off;
requirement invariant A_airslide.c_on needs S_atin.Off;
requirement invariant A_pusher1.c_on needs S_Dinitialized.On;
requirement invariant A_pusher1.c_off needs S_Dinitialized.On;
requirement invariant A_pusher2.c_on needs S_Dinitialized.On;
requirement invariant A_pusher2.c_off needs S_Dinitialized.On;
requirement invariant A_pusher3.c_on needs S_Dinitialized.On;
requirement invariant A_pusher3.c_off needs S_Dinitialized.On;
requirement invariant A_pusher1.c_on needs S_pusher1_in.On;
requirement invariant A_pusher2.c_on needs S_pusher2_in.On;
requirement invariant A_pusher3.c_on needs S_pusher3_in.On;
requirement invariant A_pusher1.c_off needs S_pusher1_out.On;
requirement invariant A_pusher2.c_off needs S_pusher2_out.On;
requirement invariant A_pusher3.c_off needs S_pusher3_out.On;
requirement invariant A_pusher1.c_on needs S_product1.Off;
requirement invariant A_pusher2.c_on needs S_product2.Off;
requirement invariant A_pusher3.c_on needs S_product3.Off;
requirement invariant A_pusher1.c_off needs S_stack1_filled.On;
requirement invariant A_pusher2.c_off needs S_stack2_filled.On;
requirement invariant A_pusher3.c_off needs S_stack3_filled.On;
requirement invariant A_pusher1.c_off needs S_product1.Off;
requirement invariant A_pusher2.c_off needs S_product2.Off;
requirement invariant A_pusher3.c_off needs S_product3.Off;
requirement invariant A_x2distributing.c_on needs S_Hinitialized.On;
requirement invariant A_x2distributing.c_off needs S_Hinitialized.On;
requirement invariant A_x2testing.c_on needs S_Hinitialized.On;
requirement invariant A_x2testing.c_off needs S_Hinitialized.On;
requirement invariant A_zdown.c_on needs S_Hinitialized.On;
requirement invariant A_zdown.c_off needs S_Hinitialized.On;
requirement invariant A_gripperclose.c_on needs S_Hinitialized.On;
requirement invariant A_gripperclose.c_off needs S_Hinitialized.On;
requirement invariant A_transfer2pickpos.c_on needs S_Hinitialized.On;
requirement invariant A_transfer2pickpos.c_off needs S_Hinitialized.On;
requirement invariant A_transfer2droppos.c_on needs S_Hinitialized.On;
requirement invariant A_transfer2droppos.c_off needs S_Hinitialized.On;
requirement invariant A_vacuum.c_on needs S_Hinitialized.On;
requirement invariant A_vacuum.c_off needs S_Hinitialized.On;
requirement invariant A_ejectpulse.c_on needs S_Hinitialized.On;
requirement invariant A_ejectpulse.c_off needs S_Hinitialized.On;
requirement invariant A_zdown.c_on needs S_zpos_atup.On;
requirement invariant A_zdown.c_off needs S_zpos_atdown.On;
requirement invariant A_zdown.c_on needs A_x2distributing.On and A_x2testing.On;
requirement invariant A_zdown.c_on needs S_xpos_at1.On and S_product1.On and S_gripper.Off or S_xpos_at2.On and S_product2.On and S_gripper.Off or S_xpos_at3.On and S_product3.On and S_gripper.Off or S_xpos_atdrop.On and S_product4.Off and S_gripper.On;
requirement invariant A_zdown.c_off needs S_xpos_at1.On and A_gripperclose.On and S_gripper.On or S_xpos_at2.On and A_gripperclose.On and S_gripper.On or S_xpos_at3.On and A_gripperclose.On and S_gripper.On or S_xpos_atdrop.On and A_gripperclose.Off;
requirement invariant A_gripperclose.c_on needs S_zpos_atdown.On;
requirement invariant A_gripperclose.c_off needs S_zpos_atdown.On;
requirement invariant A_gripperclose.c_on needs S_xpos_at1.On or S_xpos_at2.On or S_xpos_at3.On;
requirement invariant A_gripperclose.c_off needs S_xpos_atdrop.On;
requirement invariant A_x2distributing.c_off needs S_zpos_atup.On;
requirement invariant A_x2testing.c_off needs S_zpos_atup.On;
requirement invariant A_x2distributing.c_off needs A_x2testing.On;
requirement invariant A_x2testing.c_off needs A_x2distributing.On;
requirement invariant A_x2testing.c_off needs S_xpos_atdrop.On and S_gripper.Off or S_xpos_at3.On and S_gripper.Off and (S_product1.On or S_product2.On) and S_product3.Off or S_xpos_at2.On and S_gripper.Off and S_product1.On and S_product2.Off;
requirement invariant A_x2testing.c_on needs S_xpos_at3.On and S_product3.On or S_xpos_at3.On and S_product2.Off and S_product1.Off or S_xpos_at2.On and S_product2.On or S_xpos_at1.On;
requirement invariant A_x2distributing.c_off needs S_xpos_at1.On and S_gripper.On or S_xpos_at2.On and S_gripper.On or S_xpos_at3.On and S_gripper.On and S_product4.Off and S_transfer_athalfway.On;
requirement invariant A_x2distributing.c_on needs S_xpos_at3.On and S_transfer_athalfway.Off or S_xpos_at3.On and S_product4.On or S_xpos_atdrop.On;
requirement invariant A_transfer2pickpos.c_on needs A_transfer2droppos.Off;
requirement invariant A_transfer2droppos.c_on needs A_transfer2pickpos.Off;
requirement invariant A_transfer2pickpos.c_on needs S_vacuum.Off;
requirement invariant A_transfer2droppos.c_on needs S_vacuum.On;
requirement invariant A_transfer2pickpos.c_on needs S_transfer_atdrop.On or S_transfer_athalfway.On and S_product4.On and S_xpos_at3.On;
requirement invariant A_transfer2pickpos.c_off needs S_transfer_atpickup.On or S_transfer_athalfway.On and not S_product4.On;
requirement invariant A_vacuum.c_on needs S_transfer_atpickup.On;
requirement invariant A_vacuum.c_off needs S_transfer_atdrop.On;
requirement invariant A_ejectpulse.c_on needs S_transfer_atdrop.On and S_vacuum.On;
requirement invariant A_ejectpulse.c_off needs S_vacuum.Off;
requirement invariant A_elevator_up.c_on needs S_Tinitialized.On;
requirement invariant A_elevator_up.c_off needs S_Tinitialized.On;
requirement invariant A_elevator_down.c_on needs S_Tinitialized.On;
requirement invariant A_elevator_down.c_off needs S_Tinitialized.On;
requirement invariant A_pusher.c_on needs S_Tinitialized.On;
requirement invariant A_pusher.c_off needs S_Tinitialized.On;
requirement invariant A_airslide.c_on needs S_Tinitialized.On;
requirement invariant A_airslide.c_off needs S_Tinitialized.On;
requirement invariant TTimer.c_on needs S_Tinitialized.On;
requirement invariant TTimer.c_reset needs S_Tinitialized.On;
requirement invariant TTimer.c_on needs A_pusher.Off;
requirement invariant TTimer.c_reset needs A_pusher.On;
requirement invariant A_pusher.c_off needs S_pusher.On;
requirement invariant A_pusher.c_on needs S_elevator_up.On;
requirement invariant A_pusher.c_on needs S_productheight.On;
requirement invariant A_elevator_down.c_on needs A_elevator_up.Off;
requirement invariant A_elevator_up.c_on needs A_elevator_down.Off;
requirement invariant A_elevator_up.c_on needs S_elevator_down.On;
requirement invariant A_elevator_down.c_off needs S_elevator_down.On;
requirement invariant A_elevator_down.c_on needs S_elevator_up.On;
requirement invariant A_elevator_up.c_off needs S_elevator_up.On;
requirement invariant A_elevator_down.c_on needs S_pusher.Off;
requirement invariant A_elevator_up.c_off needs S_pusher.Off;
requirement invariant A_elevator_down.c_on needs TTimer.Timeout;
requirement invariant A_elevator_up.c_off needs TTimer.Timeout;
requirement invariant A_elevator_up.c_on needs S_pusher.Off;
requirement invariant A_elevator_down.c_off needs S_pusher.Off;
requirement invariant A_elevator_up.c_on needs TTimer.Timeout;
requirement invariant A_elevator_down.c_off needs TTimer.Timeout;
requirement invariant A_elevator_up.c_on needs S_capacitive.On;
requirement invariant A_elevator_down.c_off needs S_capacitive.On;
requirement invariant A_elevator_up.c_on needs S_reflective.Off;
requirement invariant A_elevator_down.c_off needs S_reflective.Off;
requirement invariant A_elevator_down.c_on needs S_opticalT.Off;
requirement invariant A_elevator_up.c_off needs S_opticalT.Off;
requirement invariant A_airslide.c_on needs S_elevator_up.On and S_pusher.On;
requirement invariant A_airslide.c_off needs S_elevator_down.On;
requirement invariant A_separator.c_on needs S_Binitialized.On;
requirement invariant A_separator.c_off needs S_Binitialized.On;
requirement invariant A_conveyerB.c_on needs S_Binitialized.On;
requirement invariant A_conveyerB.c_off needs S_Binitialized.On;
requirement invariant BTimer.c_on needs S_atend.On;
requirement invariant BTimer.c_reset needs S_atin.On or A_conveyerB.Off;
requirement invariant A_separator.c_on needs S_separator_closed.On;
requirement invariant A_separator.c_off needs S_separator_opened.On;
requirement invariant A_separator.c_on needs S_atseparator.On;
requirement invariant A_separator.c_off needs S_atseparator.Off;
requirement invariant A_conveyerB.c_on needs S_atin.On;
requirement invariant A_conveyerB.c_off needs BTimer.Timeout;
requirement invariant A_drill.c_on needs S_Pinitialized.On;
requirement invariant A_drill.c_off needs S_Pinitialized.On;
requirement invariant A_turntable.c_on needs S_Pinitialized.On;
requirement invariant A_turntable.c_off needs S_Pinitialized.On;
requirement invariant A_drilldown.c_on needs S_Pinitialized.On;
requirement invariant A_drillup.c_off needs S_Pinitialized.On;
requirement invariant A_clamp.c_on needs S_Pinitialized.On;
requirement invariant A_clamp.c_off needs S_Pinitialized.On;
requirement invariant A_tester.c_on needs S_Pinitialized.On;
requirement invariant A_tester.c_off needs S_Pinitialized.On;
requirement invariant A_eject.c_on needs S_Pinitialized.On;
requirement invariant A_eject.c_off needs S_Pinitialized.On;
requirement invariant PTimer.c_on needs S_Pinitialized.On;
requirement invariant PTimer.c_reset needs S_Pinitialized.On;
requirement invariant PTimer.c_on needs S_turntable.On;
requirement invariant PTimer.c_reset needs S_turntable.Off;
requirement invariant A_turntable.c_on needs S_turntable.On;
requirement invariant A_turntable.c_on needs PTimer.Timeout;
requirement invariant A_turntable.c_off needs S_turntable.Off;
requirement invariant A_turntable.c_on needs S_drill_up.On;
requirement invariant A_turntable.c_on needs S_clamp.Off;
requirement invariant A_turntable.c_on needs A_eject.Off;
requirement invariant A_turntable.c_on needs A_drill.Off;
requirement invariant A_turntable.c_on needs A_tester.Off;
requirement invariant A_turntable.c_on needs S_atinput.On;
requirement invariant A_tester.c_on needs S_turntable.On;
requirement invariant A_tester.c_on needs A_turntable.Off;
requirement invariant A_tester.c_on needs PTimer.Timeout;
requirement invariant A_tester.c_on needs S_attest.On;
requirement invariant A_tester.c_off needs S_test_ok.On;
requirement invariant A_clamp.c_on needs S_turntable.On;
requirement invariant A_clamp.c_on needs A_turntable.Off;
requirement invariant A_clamp.c_on needs PTimer.Timeout;
requirement invariant A_clamp.c_on needs S_atdrill.On;
requirement invariant A_clamp.c_off needs S_drill_up.On;
requirement invariant A_clamp.c_off needs A_drill.Off;
requirement invariant A_drill.c_on needs S_drill_up.On;
requirement invariant A_drill.c_on needs S_clamp.On;
requirement invariant A_drill.c_off needs S_drill_up.On;
requirement invariant A_drillup.c_off needs S_drill_up.On;
requirement invariant A_drilldown.c_on needs S_drill_up.On;
requirement invariant A_drillup.c_on needs S_drill_down.On;
requirement invariant A_drilldown.c_off needs S_drill_down.On;
requirement invariant A_eject.c_on needs S_turntable.On;
requirement invariant A_eject.c_on needs A_turntable.Off;
requirement invariant A_eject.c_on needs PTimer.Timeout;
requirement invariant A_eject.c_on needs S_atexit.On;
requirement invariant A_eject.c_off needs S_atexit.Off;
requirement invariant A_conveyer.c_on needs S_Sinitialized.On;
requirement invariant A_conveyer.c_off needs S_Sinitialized.On;
requirement invariant A_gate1.c_on needs S_Sinitialized.On;
requirement invariant A_gate1.c_off needs S_Sinitialized.On;
requirement invariant A_gate2.c_on needs S_Sinitialized.On;
requirement invariant A_gate2.c_off needs S_Sinitialized.On;
requirement invariant A_stopperretract.c_on needs S_Sinitialized.On;
requirement invariant A_stopperretract.c_off needs S_Sinitialized.On;
requirement invariant STimer.c_on needs S_product.On;
requirement invariant STimer.c_reset needs S_slidefull.On;
requirement invariant A_conveyer.c_on needs S_product.On;
requirement invariant A_conveyer.c_off needs S_slidefull.On;
requirement invariant A_stopperretract.c_on needs STimer.Timeout;
requirement invariant A_stopperretract.c_on needs S_slidefull.Off;
requirement invariant A_stopperretract.c_off needs S_slidefull.On;
requirement invariant A_gate1.c_on needs S_gate1_opened.On;
requirement invariant A_gate2.c_on needs S_gate2_opened.On;
requirement invariant A_gate1.c_off needs S_gate1_closed.On;
requirement invariant A_gate2.c_off needs S_gate2_closed.On;
requirement invariant A_gate1.c_on needs S_optical.On;
requirement invariant A_gate1.c_on needs S_inductive.Off;
requirement invariant A_gate1.c_on needs STimer.Timeout;
requirement invariant A_gate1.c_off needs S_slidefull.On;
requirement invariant A_gate2.c_on needs S_optical.On;
requirement invariant A_gate2.c_on needs S_inductive.On;
requirement invariant A_gate2.c_on needs STimer.Timeout;
requirement invariant A_gate2.c_off needs S_slidefull.On;
requirement invariant A_gate1.c_on needs A_stopperretract.Off;
requirement invariant A_gate1.c_off needs A_stopperretract.Off;
requirement invariant A_gate2.c_on needs A_stopperretract.Off;
requirement invariant A_gate2.c_off needs A_stopperretract.Off;
