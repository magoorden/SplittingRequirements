Reading CIF file "generated_files_modular_largereq/subplant_4.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_elevator_down       0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_elevator_up         1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_capacitive          2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_elevator_down       3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_elevator_up         4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_pusher              5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_reflective          6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_Tinitialized        7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_transfer_atdrop     8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_transfer_athalfway  9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_transfer_atpickup   10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   TTimer                11     2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                12     26        50          52          ~96%

Applying automatic variable ordering:
  Number of hyperedges: 26

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   19 (total)                 0.73 (avg/edge) [before]
    Total span:                   18 (total)                 0.69 (avg/edge) [iteration 1]
    Total span:                   18 (total)                 0.69 (avg/edge) [iteration 2]
    Total span:                   18 (total)                 0.69 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   18 (total)                 0.69 (avg/edge) [before]
    Total span:                   16 (total)                 0.62 (avg/edge) [window 8..11]
    Total span:                   16 (total)                 0.62 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name                  Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_elevator_up         0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_elevator_down       1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_capacitive          2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_elevator_up         3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_elevator_down       4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_pusher              5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_reflective          6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_Tinitialized        7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   TTimer                8      2 * 2     3 * 2       4 * 2       75%
  10     location pointer  n/a   S_transfer_athalfway  9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_transfer_atdrop     10     1 * 2     2 * 2       2 * 2       100%
  12     location pointer  n/a   S_transfer_atpickup   11     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------------  -----  --------  ----------  ----------  -----------
  Total                                                12     26        50          52          ~96%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_transfer_atpickup.Off
Initial   (aut/locs init predicate):     S_transfer_atdrop.Off
Initial   (aut/locs init predicate):     S_transfer_athalfway.On
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     S_elevator_up.Off
Initial   (aut/locs init predicate):     S_elevator_down.On
Initial   (aut/locs init predicate):     S_pusher.Off
Initial   (aut/locs init predicate):     S_capacitive.Off
Initial   (aut/locs init predicate):     S_reflective.Off
Initial   (aut/locs init predicate):     S_Tinitialized.Off
Initial   (aut/locs init predicate):     A_elevator_up.Off
Initial   (aut/locs init predicate):     A_elevator_down.On
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     TTimer.Off
Initial   (auts/locs init predicate):    <bdd 13n 1p>
Initial   (uncontrolled system):         <bdd 13n 1p>
Initial   (system, combined init/inv):   <bdd 13n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_transfer_atpickup.Off
Marked    (aut/locs marker predicate):   S_transfer_atdrop.Off
Marked    (aut/locs marker predicate):   S_transfer_athalfway.On
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   S_elevator_up.Off
Marked    (aut/locs marker predicate):   S_elevator_down.On
Marked    (aut/locs marker predicate):   S_pusher.Off
Marked    (aut/locs marker predicate):   S_capacitive.Off
Marked    (aut/locs marker predicate):   S_reflective.Off
Marked    (aut/locs marker predicate):   S_Tinitialized.Off
Marked    (aut/locs marker predicate):   A_elevator_up.Off
Marked    (aut/locs marker predicate):   A_elevator_down.On
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   not TTimer.Running
Marked    (auts/locs marker predicate):  <bdd 12n 1p>
Marked    (uncontrolled system):         <bdd 12n 1p>
Marked    (system, combined marked/inv): <bdd 12n 1p>

State/event exclusion requirements:
  Event "A_elevator_up_c_on" needs:
    A_elevator_down.Off and S_capacitive.On and (S_elevator_down.On and S_pusher.Off) and (S_reflective.Off and S_Tinitialized.On and (TTimer.Timeout and S_transfer_athalfway.On))

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off)
    Edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On)
    Edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off)
    Edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On) (assignments: A_elevator_down := A_elevator_down.Off)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off) (assignments: A_elevator_down := A_elevator_down.On)
    Edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Running) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "TTimer" (group: 8, domain: 16+17, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_elevator_up_c_on) (guard: A_elevator_up.Off) (assignments: A_elevator_up := A_elevator_up.On): guard: A_elevator_up.Off -> A_elevator_up.Off and A_elevator_down.Off and (S_capacitive.On and S_elevator_down.On) and (S_pusher.Off and S_reflective.Off and (S_Tinitialized.On and (TTimer.Timeout and S_transfer_athalfway.On))) [requirement: A_elevator_down.Off and S_capacitive.On and (S_elevator_down.On and S_pusher.Off) and (S_reflective.Off and S_Tinitialized.On and (TTimer.Timeout and S_transfer_athalfway.On))].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off)
    Edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On)
    Edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off)
    Edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_up.Off and A_elevator_down.Off and (S_capacitive.On and S_elevator_down.On) and (S_pusher.Off and S_reflective.Off and (S_Tinitialized.On and (TTimer.Timeout and S_transfer_athalfway.On)))) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On) (assignments: A_elevator_down := A_elevator_down.Off)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off) (assignments: A_elevator_down := A_elevator_down.On)
    Edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Running) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 12n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 1p> -> A_elevator_up.Off and A_elevator_down.On and (S_capacitive.Off and (S_elevator_up.Off and S_elevator_down.On)) and (S_pusher.Off and S_reflective.Off and (S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On))) [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_elevator_up.Off and A_elevator_down.On and (S_capacitive.Off and (S_elevator_up.Off and S_elevator_down.On)) and (S_pusher.Off and S_reflective.Off and (S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On))) -> <bdd 12n 2p> [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 2p> -> <bdd 11n 2p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 2p> -> <bdd 12n 4p> [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 4p> -> <bdd 11n 4p> [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 4p> -> A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.On and S_elevator_down.On) and (S_reflective.Off and S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.On and (S_elevator_down.On and S_reflective.Off)) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) or (A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (S_reflective.Off and S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and S_reflective.Off) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)))) [backward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.On and S_elevator_down.On) and (S_reflective.Off and S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.On and (S_elevator_down.On and S_reflective.Off)) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) or (A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (S_reflective.Off and S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and S_reflective.Off) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)))) -> A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.On) and (S_elevator_down.On and S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.On and S_elevator_down.On) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) or (A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and S_Tinitialized.Off) and (not TTimer.Running and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) [backward reach with edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.On) and (S_elevator_down.On and S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.On and S_elevator_down.On) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) or (A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (S_Tinitialized.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and S_Tinitialized.Off) and (not TTimer.Running and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) -> A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.On) and (S_elevator_down.On and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.On and S_elevator_down.On) and (not TTimer.Running and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (not TTimer.Running and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) [backward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.On) and (S_elevator_down.On and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.On and S_elevator_down.On) and (not TTimer.Running and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (not TTimer.Running and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) -> A_elevator_down.On and S_elevator_up.On and (S_elevator_down.On and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_down.On and (S_elevator_up.On and S_elevator_down.On) and (not TTimer.Running and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (A_elevator_down.On and S_elevator_up.Off and (not TTimer.Running and S_transfer_athalfway.On) or A_elevator_down.On and (S_elevator_up.Off and not TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) [backward reach with edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_elevator_down.On and S_elevator_up.On and (S_elevator_down.On and (not TTimer.Running and S_transfer_athalfway.On)) or A_elevator_down.On and (S_elevator_up.On and S_elevator_down.On) and (not TTimer.Running and S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (A_elevator_down.On and S_elevator_up.Off and (not TTimer.Running and S_transfer_athalfway.On) or A_elevator_down.On and (S_elevator_up.Off and not TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) -> S_elevator_up.On and S_elevator_down.On and (not TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.On and (S_elevator_down.On and not TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and (not TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) [backward reach with edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off) (assignments: A_elevator_down := A_elevator_down.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: S_elevator_up.On and S_elevator_down.On and (not TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.On and (S_elevator_down.On and not TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and (not TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) -> S_elevator_up.On and S_elevator_down.On and (not TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.On and (S_elevator_down.On and not TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and S_elevator_down.On and (TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.On and (S_elevator_down.On and TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) or (S_elevator_up.Off and (not TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and (TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)))) [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: S_elevator_up.On and S_elevator_down.On and (not TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.On and (S_elevator_down.On and not TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and S_elevator_down.On and (TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.On and (S_elevator_down.On and TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) or (S_elevator_up.Off and (not TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and (TTimer.Running and S_transfer_athalfway.On) or S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)))) -> (S_elevator_up.Off or S_elevator_down.Off or (TTimer.Running or (S_transfer_athalfway.On or S_transfer_atdrop.Off))) and (S_elevator_up.Off or S_elevator_down.Off or (not TTimer.Running or (S_transfer_athalfway.On or S_transfer_atdrop.Off))) and ((S_elevator_up.Off or S_elevator_down.On) and ((S_elevator_up.On or TTimer.Running or (S_transfer_athalfway.On or S_transfer_atdrop.Off)) and (S_elevator_up.On or not TTimer.Running or (S_transfer_athalfway.On or S_transfer_atdrop.Off)))) [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (S_elevator_up.Off or S_elevator_down.Off or (TTimer.Running or (S_transfer_athalfway.On or S_transfer_atdrop.Off))) and (S_elevator_up.Off or S_elevator_down.Off or (not TTimer.Running or (S_transfer_athalfway.On or S_transfer_atdrop.Off))) and ((S_elevator_up.Off or S_elevator_down.On) and ((S_elevator_up.On or TTimer.Running or (S_transfer_athalfway.On or S_transfer_atdrop.Off)) and (S_elevator_up.On or not TTimer.Running or (S_transfer_athalfway.On or S_transfer_atdrop.Off)))) -> S_elevator_up.Off or S_elevator_down.On [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: S_elevator_up.Off or S_elevator_down.On -> true [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 13n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 13n 1p> -> <bdd 12n 1p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 1p> -> A_elevator_up.Off and A_elevator_down.On and (S_capacitive.Off and S_elevator_up.Off) and (S_reflective.Off and S_Tinitialized.Off and (TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_up.Off and A_elevator_down.On and (S_capacitive.Off and S_elevator_up.Off) and (S_reflective.Off and S_Tinitialized.Off and (TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) -> A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and S_reflective.Off) and (S_Tinitialized.Off and TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [forward reach with edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and S_reflective.Off) and (S_Tinitialized.Off and TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (S_Tinitialized.Off and TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (S_Tinitialized.Off and TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [forward reach with edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> A_elevator_up.Off and S_elevator_up.Off and (TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [forward reach with edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On) (assignments: A_elevator_down := A_elevator_down.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_up.Off and S_elevator_up.Off and (TTimer.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> A_elevator_up.Off and S_elevator_up.Off and (not TTimer.Timeout and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [forward reach with edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_up.Off and S_elevator_up.Off and (not TTimer.Timeout and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> A_elevator_up.Off and S_elevator_up.Off and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [forward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_elevator_up.Off and S_elevator_up.Off and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> A_elevator_up.Off and (S_elevator_up.Off and not TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (not TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_elevator_up.Off and (S_elevator_up.Off and TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_up.Off and (S_elevator_up.Off and not TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (not TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (A_elevator_up.Off and (S_elevator_up.Off and TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) -> A_elevator_up.Off and (S_elevator_up.Off and not TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (A_elevator_up.Off and (S_elevator_up.Off and not TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (not TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (A_elevator_up.Off and (S_elevator_up.Off and TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (A_elevator_up.Off and (S_elevator_up.Off and TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)))) [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_elevator_up.Off and (S_elevator_up.Off and not TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (A_elevator_up.Off and (S_elevator_up.Off and not TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (not TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (A_elevator_up.Off and (S_elevator_up.Off and TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (A_elevator_up.Off and (S_elevator_up.Off and TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or A_elevator_up.Off and S_elevator_up.Off and (TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)))) -> <bdd 9n 12p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 9n 12p> -> <bdd 19n 13p> [forward reach with edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_up.Off and A_elevator_down.Off and (S_capacitive.On and S_elevator_down.On) and (S_pusher.Off and S_reflective.Off and (S_Tinitialized.On and (TTimer.Timeout and S_transfer_athalfway.On)))) (assignments: A_elevator_up := A_elevator_up.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 13p> -> <bdd 18n 13p> [forward reach with edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off) (assignments: A_elevator_down := A_elevator_down.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 13p> -> <bdd 17n 13p> [forward reach with edge: (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 17n 13p> -> <bdd 16n 13p> [forward reach with edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 13p> -> <bdd 15n 13p> [forward reach with edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 13p> -> <bdd 14n 13p> [forward reach with edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 13p> -> <bdd 13n 13p> [forward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 13p> -> <bdd 12n 13p> [forward reach with edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 13p> -> <bdd 11n 13p> [forward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 13p> -> <bdd 12n 14p> [forward reach with edge: (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 12n 14p> -> <bdd 14n 16p> [forward reach with edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 16p> -> <bdd 10n 18p> [forward reach with edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 10n 18p> -> <bdd 8n 12p> [forward reach with edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 8n 12p> [fixed point].
Controlled behavior: true -> <bdd 8n 12p>.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 12n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: <bdd 11n 1p> -> A_elevator_up.Off and A_elevator_down.On and (S_capacitive.Off and (S_elevator_up.Off and S_pusher.Off)) and (S_reflective.Off and S_Tinitialized.Off and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) [backward reach with edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: A_elevator_up.Off and A_elevator_down.On and (S_capacitive.Off and (S_elevator_up.Off and S_pusher.Off)) and (S_reflective.Off and S_Tinitialized.Off and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) -> A_elevator_up.Off and A_elevator_down.On and (S_capacitive.Off and S_elevator_up.Off) and (S_reflective.Off and S_Tinitialized.Off and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) [backward reach with edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: A_elevator_up.Off and A_elevator_down.On and (S_capacitive.Off and S_elevator_up.Off) and (S_reflective.Off and S_Tinitialized.Off and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off))) -> A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and S_reflective.Off) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [backward reach with edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: A_elevator_up.Off and A_elevator_down.On and (S_elevator_up.Off and S_reflective.Off) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [backward reach with edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (S_Tinitialized.Off and not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [backward reach with edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: A_elevator_up.Off and (A_elevator_down.On and S_elevator_up.Off) and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> A_elevator_down.On and S_elevator_up.Off and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) [backward reach with edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On) (assignments: A_elevator_up := A_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: A_elevator_down.On and S_elevator_up.Off and (not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) -> S_elevator_up.Off and not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off) [backward reach with edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off) (assignments: A_elevator_down := A_elevator_down.On), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: S_elevator_up.Off and not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off) -> S_elevator_up.Off and not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off) or S_elevator_up.Off and TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off) [backward reach with edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward reachability: iteration 2.
Backward controlled-behavior: S_elevator_up.Off and not TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off) or S_elevator_up.Off and TTimer.Running and (S_transfer_atdrop.Off and S_transfer_atpickup.Off) -> S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) [backward reach with edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) -> S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) [backward reach with edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward controlled-behavior: S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and not TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) -> <bdd 8n 12p> [backward reach with edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off), restricted to current/previous controlled-behavior predicate: <bdd 8n 12p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 8n 12p> [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: <bdd 8n 15p> [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_elevator_up_c_off) (guard: A_elevator_up.On) (assignments: A_elevator_up := A_elevator_up.Off): guard: A_elevator_up.On -> <bdd 9n 12p>.
Edge (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> A_elevator_up.Off and A_elevator_down.Off and (S_capacitive.On and S_elevator_down.On) and (S_pusher.Off and S_reflective.Off and (S_Tinitialized.On and (TTimer.Timeout and S_transfer_athalfway.On)))) (assignments: A_elevator_up := A_elevator_up.On): guard: A_elevator_up.Off and A_elevator_down.Off and (S_capacitive.On and S_elevator_down.On) and (S_pusher.Off and S_reflective.Off and (S_Tinitialized.On and (TTimer.Timeout and S_transfer_athalfway.On))) -> <bdd 13n 1p>.
Edge (event: A_elevator_down_c_off) (guard: A_elevator_down.On) (assignments: A_elevator_down := A_elevator_down.Off): guard: A_elevator_down.On -> <bdd 9n 12p>.
Edge (event: A_elevator_down_c_on) (guard: A_elevator_down.Off) (assignments: A_elevator_down := A_elevator_down.On): guard: A_elevator_down.Off -> <bdd 9n 12p>.
Edge (event: TTimer_c_on) (guard: TTimer.Off) (assignments: TTimer := TTimer.Running): guard: TTimer.Off -> S_elevator_up.On and (S_elevator_down.Off and TTimer.Off) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and (S_elevator_down.Off and TTimer.Off) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.On and S_elevator_down.Off and (TTimer.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))).
Edge (event: TTimer_c_reset) (guard: TTimer.Running) (assignments: TTimer := TTimer.Off): guard: TTimer.Running -> S_elevator_up.On and (S_elevator_down.Off and TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and (S_elevator_down.Off and TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.On and S_elevator_down.Off and (TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))).
Edge (event: TTimer_c_reset) (guard: TTimer.Timeout) (assignments: TTimer := TTimer.Off): guard: TTimer.Timeout -> S_elevator_up.On and (S_elevator_down.Off and TTimer.Timeout) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and (S_elevator_down.Off and TTimer.Timeout) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.On and S_elevator_down.Off and (TTimer.Timeout and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (S_elevator_up.Off and TTimer.Timeout and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Timeout and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Timeout and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))).

Final synthesis result:
  State: (controlled-behavior: <bdd 8n 12p>)
    Edge: (event: S_transfer_atpickup_u_off) (guard: S_transfer_atpickup.On) (assignments: S_transfer_atpickup := S_transfer_atpickup.Off)
    Edge: (event: S_transfer_atpickup_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atpickup := S_transfer_atpickup.On)
    Edge: (event: S_transfer_atdrop_u_off) (guard: S_transfer_atdrop.On) (assignments: S_transfer_atdrop := S_transfer_atdrop.Off)
    Edge: (event: S_transfer_atdrop_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_atdrop := S_transfer_atdrop.On)
    Edge: (event: S_transfer_athalfway_u_off) (guard: S_transfer_athalfway.On) (assignments: S_transfer_athalfway := S_transfer_athalfway.Off)
    Edge: (event: S_transfer_athalfway_u_on) (guard: S_transfer_athalfway.Off and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) (assignments: S_transfer_athalfway := S_transfer_athalfway.On)
    Edge: (event: S_elevator_up_u_off) (guard: S_elevator_up.On) (assignments: S_elevator_up := S_elevator_up.Off)
    Edge: (event: S_elevator_up_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_up := S_elevator_up.On)
    Edge: (event: S_elevator_down_u_off) (guard: S_elevator_down.On) (assignments: S_elevator_down := S_elevator_down.Off)
    Edge: (event: S_elevator_down_u_on) (guard: S_elevator_up.Off and S_elevator_down.Off) (assignments: S_elevator_down := S_elevator_down.On)
    Edge: (event: S_pusher_u_off) (guard: S_pusher.On) (assignments: S_pusher := S_pusher.Off)
    Edge: (event: S_pusher_u_on) (guard: S_pusher.Off) (assignments: S_pusher := S_pusher.On)
    Edge: (event: S_capacitive_u_off) (guard: S_capacitive.On) (assignments: S_capacitive := S_capacitive.Off)
    Edge: (event: S_capacitive_u_on) (guard: S_capacitive.Off) (assignments: S_capacitive := S_capacitive.On)
    Edge: (event: S_reflective_u_off) (guard: S_reflective.On) (assignments: S_reflective := S_reflective.Off)
    Edge: (event: S_reflective_u_on) (guard: S_reflective.Off) (assignments: S_reflective := S_reflective.On)
    Edge: (event: S_Tinitialized_u_off) (guard: S_Tinitialized.On) (assignments: S_Tinitialized := S_Tinitialized.Off)
    Edge: (event: S_Tinitialized_u_on) (guard: S_Tinitialized.Off) (assignments: S_Tinitialized := S_Tinitialized.On)
    Edge: (event: A_elevator_up_c_off) (guard: A_elevator_up.On -> <bdd 9n 12p>) (assignments: A_elevator_up := A_elevator_up.Off)
    Edge: (event: A_elevator_up_c_on) (guard: A_elevator_up.Off -> <bdd 13n 1p>) (assignments: A_elevator_up := A_elevator_up.On)
    Edge: (event: A_elevator_down_c_off) (guard: A_elevator_down.On -> <bdd 9n 12p>) (assignments: A_elevator_down := A_elevator_down.Off)
    Edge: (event: A_elevator_down_c_on) (guard: A_elevator_down.Off -> <bdd 9n 12p>) (assignments: A_elevator_down := A_elevator_down.On)
    Edge: (event: TTimer_c_on) (guard: TTimer.Off -> S_elevator_up.On and (S_elevator_down.Off and TTimer.Off) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and (S_elevator_down.Off and TTimer.Off) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.On and S_elevator_down.Off and (TTimer.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)))) (assignments: TTimer := TTimer.Running)
    Edge: (event: TTimer_u_timeout) (guard: TTimer.Running) (assignments: TTimer := TTimer.Timeout)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Running -> S_elevator_up.On and (S_elevator_down.Off and TTimer.Running) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and (S_elevator_down.Off and TTimer.Running) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.On and S_elevator_down.Off and (TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Running and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)))) (assignments: TTimer := TTimer.Off)
    Edge: (event: TTimer_c_reset) (guard: TTimer.Timeout -> S_elevator_up.On and (S_elevator_down.Off and TTimer.Timeout) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and (S_elevator_down.Off and TTimer.Timeout) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.On and S_elevator_down.Off and (TTimer.Timeout and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (S_elevator_up.Off and TTimer.Timeout and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Timeout and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Timeout and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)))) (assignments: TTimer := TTimer.Off)

Controlled system:                     exactly 2,304 states.

Initial (synthesis result):            <bdd 8n 12p>
Initial (uncontrolled system):         <bdd 13n 1p>
Initial (controlled system):           <bdd 13n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_elevator_up_c_off: guard: <bdd 9n 12p> -> true [assume <bdd 9n 12p>].
  Event A_elevator_up_c_on: guard: <bdd 13n 1p> -> true [assume <bdd 13n 1p>].
  Event A_elevator_down_c_off: guard: <bdd 9n 12p> -> true [assume <bdd 9n 12p>].
  Event A_elevator_down_c_on: guard: <bdd 9n 12p> -> true [assume <bdd 9n 12p>].
  Event TTimer_c_on: guard: S_elevator_up.On and (S_elevator_down.Off and TTimer.Off) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and (S_elevator_down.Off and TTimer.Off) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.On and S_elevator_down.Off and (TTimer.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) -> true [assume S_elevator_up.On and (S_elevator_down.Off and TTimer.Off) and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.On and (S_elevator_down.Off and TTimer.Off) and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.On and S_elevator_down.Off and (TTimer.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off))) or (S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.On and (S_transfer_atdrop.Off and S_transfer_atpickup.Off)) or (S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.Off and (S_transfer_atdrop.On and S_transfer_atpickup.Off)) or S_elevator_up.Off and TTimer.Off and (S_transfer_athalfway.Off and S_transfer_atdrop.Off)))].
  Event TTimer_c_reset: guard: <bdd 9n 12p> -> true [assume <bdd 9n 12p>].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_largereq/subplant_4_sup.cif".
