Reading CIF file "generated_files_modular_largereq/subplant_76.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name              Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_gate1           0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_stopperretract  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_Sinitialized    2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_slidefull       3      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ----------------  -----  --------  ----------  ----------  -----------
  Total                                            4      8         16          16          100%

Applying automatic variable ordering:
  Number of hyperedges: 9

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    2 (total)                 0.22 (avg/edge) [before]
    Total span:                    2 (total)                 0.22 (avg/edge) [iteration 1]
    Total span:                    2 (total)                 0.22 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    2 (total)                 0.22 (avg/edge) [before]
    Total span:                    2 (total)                 0.22 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_slidefull.Off
Initial   (aut/locs init predicate):     S_Sinitialized.Off
Initial   (aut/locs init predicate):     A_gate1.Off
Initial   (aut/locs init predicate):     A_stopperretract.Off
Initial   (auts/locs init predicate):    A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off)
Initial   (uncontrolled system):         A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off)
Initial   (system, combined init/inv):   A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_slidefull.Off
Marked    (aut/locs marker predicate):   S_Sinitialized.Off
Marked    (aut/locs marker predicate):   A_gate1.Off
Marked    (aut/locs marker predicate):   A_stopperretract.Off
Marked    (auts/locs marker predicate):  A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off)
Marked    (uncontrolled system):         A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off)
Marked    (system, combined marked/inv): A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off)

State/event exclusion requirements:
  Event "A_gate1_c_off" needs:
    A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_gate1_c_off) (guard: A_gate1.On) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: A_gate1.Off) (assignments: A_gate1 := A_gate1.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_gate1_c_off) (guard: A_gate1.On) (assignments: A_gate1 := A_gate1.Off): guard: A_gate1.On -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On) [requirement: A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: A_gate1.Off) (assignments: A_gate1 := A_gate1.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off) -> A_gate1.Off and (A_stopperretract.Off and S_Sinitialized.Off) [backward reach with edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.Off and (A_stopperretract.Off and S_Sinitialized.Off) -> A_gate1.Off and A_stopperretract.Off [backward reach with edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.Off and A_stopperretract.Off -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On) or A_gate1.Off and A_stopperretract.Off [backward reach with edge: (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_gate1 := A_gate1.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On) or A_gate1.Off and A_stopperretract.Off -> A_gate1.On and (S_Sinitialized.On and S_slidefull.On) or A_gate1.Off [backward reach with edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: A_gate1.On and (S_Sinitialized.On and S_slidefull.On) or A_gate1.Off -> A_gate1.Off or S_Sinitialized.On [backward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_gate1.Off or S_Sinitialized.On -> true [backward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off) -> A_gate1.Off and (A_stopperretract.Off and S_Sinitialized.Off) [forward reach with edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and (A_stopperretract.Off and S_Sinitialized.Off) -> A_gate1.Off and A_stopperretract.Off [forward reach with edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_gate1.Off and A_stopperretract.Off -> A_stopperretract.Off [forward reach with edge: (event: A_gate1_c_on) (guard: A_gate1.Off) (assignments: A_gate1 := A_gate1.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_stopperretract.Off -> true [forward reach with edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: S_slidefull_u_off) (guard: S_slidefull.On) (assignments: S_slidefull := S_slidefull.Off)
    Edge: (event: S_slidefull_u_on) (guard: S_slidefull.Off) (assignments: S_slidefull := S_slidefull.On)
    Edge: (event: S_Sinitialized_u_off) (guard: S_Sinitialized.On) (assignments: S_Sinitialized := S_Sinitialized.Off)
    Edge: (event: S_Sinitialized_u_on) (guard: S_Sinitialized.Off) (assignments: S_Sinitialized := S_Sinitialized.On)
    Edge: (event: A_gate1_c_off) (guard: A_gate1.On -> A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)) (assignments: A_gate1 := A_gate1.Off)
    Edge: (event: A_gate1_c_on) (guard: A_gate1.Off) (assignments: A_gate1 := A_gate1.On)
    Edge: (event: A_stopperretract_c_off) (guard: A_stopperretract.On) (assignments: A_stopperretract := A_stopperretract.Off)
    Edge: (event: A_stopperretract_c_on) (guard: A_stopperretract.Off) (assignments: A_stopperretract := A_stopperretract.On)

Controlled system:                     exactly 16 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off)
Initial (controlled system):           A_gate1.Off and A_stopperretract.Off and (S_Sinitialized.Off and S_slidefull.Off)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_gate1_c_off: guard: A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On) -> true [assume A_gate1.On and A_stopperretract.Off and (S_Sinitialized.On and S_slidefull.On)].
  Event A_gate1_c_on: guard: A_gate1.Off -> true [assume A_gate1.Off].
  Event A_stopperretract_c_off: guard: A_stopperretract.On -> true [assume A_stopperretract.On].
  Event A_stopperretract_c_on: guard: A_stopperretract.Off -> true [assume A_stopperretract.Off].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_largereq/subplant_76_sup.cif".
