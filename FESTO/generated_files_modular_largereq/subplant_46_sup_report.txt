Reading CIF file "generated_files_modular_largereq/subplant_46.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name            Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_drill         0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_eject         1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_tester        2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_turntable     3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   PTimer          4      2 * 2     3 * 2       4 * 2       75%
  6      location pointer  n/a   S_atinput       5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_clamp         6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_drill_down    7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_drill_up      8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_Pinitialized  9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_turntable     10     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  Total                                          11     24        46          48          ~96%

Applying automatic variable ordering:
  Number of hyperedges: 24

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   12 (total)                 0.50 (avg/edge) [before]
    Total span:                   12 (total)                 0.50 (avg/edge) [iteration 1]
    Total span:                   12 (total)                 0.50 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   12 (total)                 0.50 (avg/edge) [before]
    Total span:                   11 (total)                 0.46 (avg/edge) [window 0..3]
    Total span:                   10 (total)                 0.42 (avg/edge) [window 7..10]
    Total span:                   10 (total)                 0.42 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name            Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_turntable     0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   A_tester        1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   A_eject         2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   A_drill         3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   PTimer          4      2 * 2     3 * 2       4 * 2       75%
  6      location pointer  n/a   S_atinput       5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   S_clamp         6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   S_Pinitialized  7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   S_turntable     8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   S_drill_up      9      1 * 2     2 * 2       2 * 2       100%
  11     location pointer  n/a   S_drill_down    10     1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  --------------  -----  --------  ----------  ----------  -----------
  Total                                          11     24        46          48          ~96%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_atinput.Off
Initial   (aut/locs init predicate):     S_clamp.Off
Initial   (aut/locs init predicate):     S_drill_up.On
Initial   (aut/locs init predicate):     S_drill_down.Off
Initial   (aut/locs init predicate):     S_turntable.On
Initial   (aut/locs init predicate):     S_Pinitialized.Off
Initial   (aut/locs init predicate):     A_drill.Off
Initial   (aut/locs init predicate):     A_turntable.Off
Initial   (aut/locs init predicate):     A_tester.Off
Initial   (aut/locs init predicate):     A_eject.Off
Initial   (aut/locs init predicate):     PTimer.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    <bdd 12n 1p>
Initial   (uncontrolled system):         <bdd 12n 1p>
Initial   (system, combined init/inv):   <bdd 12n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_atinput.Off
Marked    (aut/locs marker predicate):   S_clamp.Off
Marked    (aut/locs marker predicate):   S_drill_up.On
Marked    (aut/locs marker predicate):   S_drill_down.Off
Marked    (aut/locs marker predicate):   S_turntable.On
Marked    (aut/locs marker predicate):   S_Pinitialized.Off
Marked    (aut/locs marker predicate):   A_drill.Off
Marked    (aut/locs marker predicate):   A_turntable.Off
Marked    (aut/locs marker predicate):   A_tester.Off
Marked    (aut/locs marker predicate):   A_eject.Off
Marked    (aut/locs marker predicate):   PTimer.Off
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  <bdd 12n 1p>
Marked    (uncontrolled system):         <bdd 12n 1p>
Marked    (system, combined marked/inv): <bdd 12n 1p>

State/event exclusion requirements:
  Event "A_turntable_c_on" needs:
    A_tester.Off and A_eject.Off and (A_drill.Off and PTimer.Timeout) and (S_atinput.On and S_clamp.Off and (S_Pinitialized.On and (S_turntable.On and S_drill_up.On)))

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)
    Edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off)
    Edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_drill_c_off) (guard: A_drill.On) (assignments: A_drill := A_drill.Off)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off) (assignments: A_drill := A_drill.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: A_turntable.Off) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_tester_c_off) (guard: A_tester.On) (assignments: A_tester := A_tester.Off)
    Edge: (event: A_tester_c_on) (guard: A_tester.Off) (assignments: A_tester := A_tester.On)
    Edge: (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On)
    Edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "PTimer" (group: 4, domain: 8+9, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_turntable_c_on) (guard: A_turntable.Off) (assignments: A_turntable := A_turntable.On): guard: A_turntable.Off -> <bdd 11n 1p> [requirement: A_tester.Off and A_eject.Off and (A_drill.Off and PTimer.Timeout) and (S_atinput.On and S_clamp.Off and (S_Pinitialized.On and (S_turntable.On and S_drill_up.On)))].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)
    Edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off)
    Edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_drill_c_off) (guard: A_drill.On) (assignments: A_drill := A_drill.Off)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off) (assignments: A_drill := A_drill.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: A_turntable.Off -> <bdd 11n 1p>) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_tester_c_off) (guard: A_tester.On) (assignments: A_tester := A_tester.Off)
    Edge: (event: A_tester_c_on) (guard: A_tester.Off) (assignments: A_tester := A_tester.On)
    Edge: (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On)
    Edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 12n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 1p> -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) [backward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_down.Off)) [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_down.Off)) -> A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_Pinitialized.Off and S_turntable.On)) [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_Pinitialized.Off and S_turntable.On)) -> A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and (PTimer.Off and S_Pinitialized.Off)) [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and (PTimer.Off and S_Pinitialized.Off)) -> A_turntable.Off and A_tester.Off and (A_eject.Off and (A_drill.Off and PTimer.Off)) [backward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and (A_drill.Off and PTimer.Off)) -> A_turntable.Off and A_tester.Off and (A_eject.Off and PTimer.Off) [backward reach with edge: (event: A_drill_c_off) (guard: A_drill.On) (assignments: A_drill := A_drill.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and PTimer.Off) -> A_tester.Off and (A_eject.Off and PTimer.Off) [backward reach with edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_tester.Off and (A_eject.Off and PTimer.Off) -> A_eject.Off and PTimer.Off [backward reach with edge: (event: A_tester_c_off) (guard: A_tester.On) (assignments: A_tester := A_tester.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_eject.Off and PTimer.Off -> PTimer.Off [backward reach with edge: (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: PTimer.Off -> not PTimer.Timeout [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not PTimer.Timeout -> true [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 12n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [forward reach with edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 1p> -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) [forward reach with edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_down.Off)) [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_down.Off)) -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) or A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_up.Off)) [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) or A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_up.Off)) -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_Pinitialized.Off and S_drill_up.Off)) [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_Pinitialized.Off and S_drill_up.Off)) -> A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and (PTimer.Off and S_drill_up.Off)) [forward reach with edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and (PTimer.Off and S_drill_up.Off)) -> A_turntable.Off and (A_tester.Off and A_eject.Off) and (PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and A_tester.Off and (A_eject.Off and (PTimer.Off and S_drill_up.Off)) [forward reach with edge: (event: A_drill_c_on) (guard: A_drill.Off) (assignments: A_drill := A_drill.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and (A_tester.Off and A_eject.Off) and (PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and A_tester.Off and (A_eject.Off and (PTimer.Off and S_drill_up.Off)) -> A_turntable.Off and A_eject.Off and (PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and A_eject.Off and (PTimer.Off and S_drill_up.Off) [forward reach with edge: (event: A_tester_c_on) (guard: A_tester.Off) (assignments: A_tester := A_tester.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and A_eject.Off and (PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and A_eject.Off and (PTimer.Off and S_drill_up.Off) -> A_turntable.Off and PTimer.Off and (S_drill_up.On and S_drill_down.Off) or A_turntable.Off and (PTimer.Off and S_drill_up.Off) [forward reach with edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and PTimer.Off and (S_drill_up.On and S_drill_down.Off) or A_turntable.Off and (PTimer.Off and S_drill_up.Off) -> A_turntable.Off and ((A_turntable.On or PTimer.Timeout or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Timeout)) [forward reach with edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.Off and ((A_turntable.On or PTimer.Timeout or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Timeout)) -> A_turntable.Off and ((A_turntable.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) [forward reach with edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: A_turntable.Off and ((A_turntable.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) -> <bdd 15n 5p> [forward reach with edge: (event: A_turntable_c_on) (guard: A_turntable.Off -> <bdd 11n 1p>) (assignments: A_turntable := A_turntable.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 5p> -> <bdd 14n 5p> [forward reach with edge: (event: A_tester_c_on) (guard: A_tester.Off) (assignments: A_tester := A_tester.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 5p> -> <bdd 13n 5p> [forward reach with edge: (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 5p> -> <bdd 12n 5p> [forward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 12n 5p> -> <bdd 11n 5p> [forward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 5p> -> A_turntable.On and (A_drill.Off and not PTimer.Running) and (S_Pinitialized.On and S_turntable.On and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and not PTimer.Running and (S_drill_up.On and S_drill_down.Off) or (A_turntable.Off and (not PTimer.Running and S_drill_up.Off) or (A_turntable.Off and PTimer.Running and (S_drill_up.On and S_drill_down.Off) or A_turntable.Off and (PTimer.Running and S_drill_up.Off))) [forward reach with edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.On and (A_drill.Off and not PTimer.Running) and (S_Pinitialized.On and S_turntable.On and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and not PTimer.Running and (S_drill_up.On and S_drill_down.Off) or (A_turntable.Off and (not PTimer.Running and S_drill_up.Off) or (A_turntable.Off and PTimer.Running and (S_drill_up.On and S_drill_down.Off) or A_turntable.Off and (PTimer.Running and S_drill_up.Off))) -> A_turntable.On and (A_drill.Off and not PTimer.Running) and (S_Pinitialized.On and (S_turntable.On and S_drill_down.Off)) or A_turntable.Off and not PTimer.Running and (S_drill_up.On and S_drill_down.Off) or (A_turntable.Off and (not PTimer.Running and S_drill_up.Off) or (A_turntable.Off and PTimer.Running and (S_drill_up.On and S_drill_down.Off) or A_turntable.Off and (PTimer.Running and S_drill_up.Off))) [forward reach with edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.On and (A_drill.Off and not PTimer.Running) and (S_Pinitialized.On and (S_turntable.On and S_drill_down.Off)) or A_turntable.Off and not PTimer.Running and (S_drill_up.On and S_drill_down.Off) or (A_turntable.Off and (not PTimer.Running and S_drill_up.Off) or (A_turntable.Off and PTimer.Running and (S_drill_up.On and S_drill_down.Off) or A_turntable.Off and (PTimer.Running and S_drill_up.Off))) -> A_turntable.On and (A_drill.Off and not PTimer.Running) and (S_Pinitialized.On and S_turntable.On and (S_drill_up.On and S_drill_down.Off)) or (A_turntable.On and (A_drill.Off and not PTimer.Running) and (S_Pinitialized.On and (S_turntable.On and S_drill_up.Off)) or A_turntable.Off and not PTimer.Running and (S_drill_up.On and S_drill_down.Off)) or (A_turntable.Off and (not PTimer.Running and S_drill_up.Off) or (A_turntable.Off and PTimer.Running and (S_drill_up.On and S_drill_down.Off) or A_turntable.Off and (PTimer.Running and S_drill_up.Off))) [forward reach with edge: (event: S_drill_down_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_down := S_drill_down.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_turntable.On and (A_drill.Off and not PTimer.Running) and (S_Pinitialized.On and S_turntable.On and (S_drill_up.On and S_drill_down.Off)) or (A_turntable.On and (A_drill.Off and not PTimer.Running) and (S_Pinitialized.On and (S_turntable.On and S_drill_up.Off)) or A_turntable.Off and not PTimer.Running and (S_drill_up.On and S_drill_down.Off)) or (A_turntable.Off and (not PTimer.Running and S_drill_up.Off) or (A_turntable.Off and PTimer.Running and (S_drill_up.On and S_drill_down.Off) or A_turntable.Off and (PTimer.Running and S_drill_up.Off))) -> (A_turntable.Off or A_drill.Off) and ((A_turntable.Off or (A_drill.On or PTimer.Running) or (S_Pinitialized.Off or (S_drill_up.Off or S_drill_down.Off))) and (A_turntable.Off or A_drill.On or (PTimer.Running or S_Pinitialized.On))) and ((A_turntable.Off or (A_drill.On or not PTimer.Running)) and ((A_turntable.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))) [forward reach with edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_turntable.Off or A_drill.Off) and ((A_turntable.Off or (A_drill.On or PTimer.Running) or (S_Pinitialized.Off or (S_drill_up.Off or S_drill_down.Off))) and (A_turntable.Off or A_drill.On or (PTimer.Running or S_Pinitialized.On))) and ((A_turntable.Off or (A_drill.On or not PTimer.Running)) and ((A_turntable.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))) -> (A_turntable.Off or A_drill.Off) and (A_turntable.Off or A_drill.On or (PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) and ((A_turntable.Off or (A_drill.On or not PTimer.Running)) and ((A_turntable.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))) [forward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_turntable.Off or A_drill.Off) and (A_turntable.Off or A_drill.On or (PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) and ((A_turntable.Off or (A_drill.On or not PTimer.Running)) and ((A_turntable.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))) -> (A_turntable.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.Off or not PTimer.Running) and ((A_turntable.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) [forward reach with edge: (event: A_drill_c_on) (guard: A_drill.Off) (assignments: A_drill := A_drill.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (A_turntable.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.Off or not PTimer.Running) and ((A_turntable.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_turntable.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) -> (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) [forward reach with edge: (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) [fixed point].
Controlled behavior: true -> (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)).

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 12n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: <bdd 11n 1p> -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) [backward reach with edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_down.Off)) [backward reach with edge: (event: S_drill_up_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_up := S_drill_up.On), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_down.Off)) -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) or A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_up.Off)) [backward reach with edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and (S_drill_up.On and S_drill_down.Off))) or A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_turntable.On and S_drill_up.Off)) -> A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_Pinitialized.Off and S_drill_up.Off)) [backward reach with edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: A_turntable.Off and A_tester.Off and (A_eject.Off and A_drill.Off) and (PTimer.Off and S_Pinitialized.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_Pinitialized.Off and S_drill_up.Off)) -> A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and (PTimer.Off and S_drill_up.Off)) [backward reach with edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and (A_tester.Off and A_eject.Off) and (A_drill.Off and (PTimer.Off and S_drill_up.Off)) -> A_turntable.Off and (A_tester.Off and A_eject.Off) and (PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and A_tester.Off and (A_eject.Off and (PTimer.Off and S_drill_up.Off)) [backward reach with edge: (event: A_drill_c_off) (guard: A_drill.On) (assignments: A_drill := A_drill.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: A_turntable.Off and (A_tester.Off and A_eject.Off) and (PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_turntable.Off and A_tester.Off and (A_eject.Off and (PTimer.Off and S_drill_up.Off)) -> A_tester.Off and A_eject.Off and (PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_tester.Off and A_eject.Off and (PTimer.Off and S_drill_up.Off) [backward reach with edge: (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: A_tester.Off and A_eject.Off and (PTimer.Off and (S_drill_up.On and S_drill_down.Off)) or A_tester.Off and A_eject.Off and (PTimer.Off and S_drill_up.Off) -> A_eject.Off and PTimer.Off and (S_drill_up.On and S_drill_down.Off) or A_eject.Off and (PTimer.Off and S_drill_up.Off) [backward reach with edge: (event: A_tester_c_off) (guard: A_tester.On) (assignments: A_tester := A_tester.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: A_eject.Off and PTimer.Off and (S_drill_up.On and S_drill_down.Off) or A_eject.Off and (PTimer.Off and S_drill_up.Off) -> PTimer.Off and (S_drill_up.On and S_drill_down.Off) or PTimer.Off and S_drill_up.Off [backward reach with edge: (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: PTimer.Off and (S_drill_up.On and S_drill_down.Off) or PTimer.Off and S_drill_up.Off -> (PTimer.Timeout or (S_drill_up.Off or S_drill_down.Off)) and not PTimer.Timeout [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward controlled-behavior: (PTimer.Timeout or (S_drill_up.Off or S_drill_down.Off)) and not PTimer.Timeout -> (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) [backward reach with edge: (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off), restricted to current/previous controlled-behavior predicate: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))]
Backward reachability: iteration 2.
Backward controlled-behavior: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: not PTimer.Running and (S_drill_up.On and S_drill_down.On) or PTimer.Running and (S_drill_up.On and S_drill_down.On) [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_drill_c_off) (guard: A_drill.On) (assignments: A_drill := A_drill.Off): guard: A_drill.On -> (A_drill.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_drill.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_drill.On).
Edge (event: A_drill_c_on) (guard: A_drill.Off) (assignments: A_drill := A_drill.On): guard: A_drill.Off -> A_drill.Off and ((A_drill.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_drill.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))).
Edge (event: A_turntable_c_off) (guard: A_turntable.On) (assignments: A_turntable := A_turntable.Off): guard: A_turntable.On -> (A_turntable.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_turntable.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_turntable.On).
Edge (event: A_turntable_c_on) (guard: A_turntable.Off -> <bdd 11n 1p>) (assignments: A_turntable := A_turntable.On): guard: <bdd 11n 1p> -> <bdd 12n 1p>.
Edge (event: A_tester_c_off) (guard: A_tester.On) (assignments: A_tester := A_tester.Off): guard: A_tester.On -> (A_tester.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_tester.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_tester.On).
Edge (event: A_tester_c_on) (guard: A_tester.Off) (assignments: A_tester := A_tester.On): guard: A_tester.Off -> A_tester.Off and ((A_tester.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_tester.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))).
Edge (event: A_eject_c_off) (guard: A_eject.On) (assignments: A_eject := A_eject.Off): guard: A_eject.On -> (A_eject.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_eject.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_eject.On).
Edge (event: A_eject_c_on) (guard: A_eject.Off) (assignments: A_eject := A_eject.On): guard: A_eject.Off -> A_eject.Off and ((A_eject.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_eject.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))).
Edge (event: PTimer_c_on) (guard: PTimer.Off) (assignments: PTimer := PTimer.Running): guard: PTimer.Off -> PTimer.Off and (S_drill_up.On and S_drill_down.Off) or PTimer.Off and S_drill_up.Off.
Edge (event: PTimer_c_reset) (guard: PTimer.Running) (assignments: PTimer := PTimer.Off): guard: PTimer.Running -> PTimer.Running and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)).
Edge (event: PTimer_c_reset) (guard: PTimer.Timeout) (assignments: PTimer := PTimer.Off): guard: PTimer.Timeout -> PTimer.Timeout and (S_drill_up.On and S_drill_down.Off) or PTimer.Timeout and S_drill_up.Off.

Final synthesis result:
  State: (controlled-behavior: (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))
    Edge: (event: S_atinput_u_off) (guard: S_atinput.On) (assignments: S_atinput := S_atinput.Off)
    Edge: (event: S_atinput_u_on) (guard: S_atinput.Off) (assignments: S_atinput := S_atinput.On)
    Edge: (event: S_clamp_u_off) (guard: S_clamp.On) (assignments: S_clamp := S_clamp.Off)
    Edge: (event: S_clamp_u_on) (guard: S_clamp.Off) (assignments: S_clamp := S_clamp.On)
    Edge: (event: S_drill_up_u_off) (guard: S_drill_up.On) (assignments: S_drill_up := S_drill_up.Off)
    Edge: (event: S_drill_up_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_up := S_drill_up.On)
    Edge: (event: S_drill_down_u_off) (guard: S_drill_down.On) (assignments: S_drill_down := S_drill_down.Off)
    Edge: (event: S_drill_down_u_on) (guard: S_drill_up.Off and S_drill_down.Off) (assignments: S_drill_down := S_drill_down.On)
    Edge: (event: S_turntable_u_off) (guard: S_turntable.On) (assignments: S_turntable := S_turntable.Off)
    Edge: (event: S_turntable_u_on) (guard: S_turntable.Off) (assignments: S_turntable := S_turntable.On)
    Edge: (event: S_Pinitialized_u_off) (guard: S_Pinitialized.On) (assignments: S_Pinitialized := S_Pinitialized.Off)
    Edge: (event: S_Pinitialized_u_on) (guard: S_Pinitialized.Off) (assignments: S_Pinitialized := S_Pinitialized.On)
    Edge: (event: A_drill_c_off) (guard: A_drill.On -> (A_drill.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_drill.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_drill.On)) (assignments: A_drill := A_drill.Off)
    Edge: (event: A_drill_c_on) (guard: A_drill.Off -> A_drill.Off and ((A_drill.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_drill.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))) (assignments: A_drill := A_drill.On)
    Edge: (event: A_turntable_c_off) (guard: A_turntable.On -> (A_turntable.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_turntable.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_turntable.On)) (assignments: A_turntable := A_turntable.Off)
    Edge: (event: A_turntable_c_on) (guard: A_turntable.Off -> <bdd 12n 1p>) (assignments: A_turntable := A_turntable.On)
    Edge: (event: A_tester_c_off) (guard: A_tester.On -> (A_tester.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_tester.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_tester.On)) (assignments: A_tester := A_tester.Off)
    Edge: (event: A_tester_c_on) (guard: A_tester.Off -> A_tester.Off and ((A_tester.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_tester.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))) (assignments: A_tester := A_tester.On)
    Edge: (event: A_eject_c_off) (guard: A_eject.On -> (A_eject.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_eject.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_eject.On)) (assignments: A_eject := A_eject.Off)
    Edge: (event: A_eject_c_on) (guard: A_eject.Off -> A_eject.Off and ((A_eject.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_eject.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))) (assignments: A_eject := A_eject.On)
    Edge: (event: PTimer_c_on) (guard: PTimer.Off -> PTimer.Off and (S_drill_up.On and S_drill_down.Off) or PTimer.Off and S_drill_up.Off) (assignments: PTimer := PTimer.Running)
    Edge: (event: PTimer_u_timeout) (guard: PTimer.Running) (assignments: PTimer := PTimer.Timeout)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Running -> PTimer.Running and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) (assignments: PTimer := PTimer.Off)
    Edge: (event: PTimer_c_reset) (guard: PTimer.Timeout -> PTimer.Timeout and (S_drill_up.On and S_drill_down.Off) or PTimer.Timeout and S_drill_up.Off) (assignments: PTimer := PTimer.Off)

Controlled system:                     exactly 2,304 states.

Initial (synthesis result):            (PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))
Initial (uncontrolled system):         <bdd 12n 1p>
Initial (controlled system):           <bdd 12n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_drill_c_off: guard: (A_drill.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_drill.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_drill.On) -> true [assume (A_drill.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_drill.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_drill.On)].
  Event A_drill_c_on: guard: A_drill.Off and ((A_drill.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_drill.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) -> true [assume A_drill.Off and ((A_drill.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_drill.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))].
  Event A_turntable_c_off: guard: (A_turntable.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_turntable.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_turntable.On) -> true [assume (A_turntable.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_turntable.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_turntable.On)].
  Event A_turntable_c_on: guard: <bdd 12n 1p> -> true [assume <bdd 12n 1p>].
  Event A_tester_c_off: guard: (A_tester.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_tester.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_tester.On) -> true [assume (A_tester.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_tester.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_tester.On)].
  Event A_tester_c_on: guard: A_tester.Off and ((A_tester.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_tester.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) -> true [assume A_tester.Off and ((A_tester.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_tester.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))].
  Event A_eject_c_off: guard: (A_eject.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_eject.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_eject.On) -> true [assume (A_eject.Off or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and ((A_eject.Off or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and A_eject.On)].
  Event A_eject_c_on: guard: A_eject.Off and ((A_eject.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_eject.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) -> true [assume A_eject.Off and ((A_eject.On or PTimer.Running or (S_drill_up.Off or S_drill_down.Off)) and (A_eject.On or not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))].
  Event PTimer_c_on: guard: PTimer.Off and (S_drill_up.On and S_drill_down.Off) or PTimer.Off and S_drill_up.Off -> true [assume PTimer.Off and (S_drill_up.On and S_drill_down.Off) or PTimer.Off and S_drill_up.Off].
  Event PTimer_c_reset: guard: not PTimer.Off and ((not PTimer.Timeout or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off))) -> true [assume not PTimer.Off and ((not PTimer.Timeout or (S_drill_up.Off or S_drill_down.Off)) and (not PTimer.Running or (S_drill_up.Off or S_drill_down.Off)))].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_largereq/subplant_46_sup.cif".
