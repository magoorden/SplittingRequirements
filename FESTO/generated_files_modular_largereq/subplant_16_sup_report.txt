Reading CIF file "generated_files_modular_largereq/subplant_16.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name             Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_pusher2        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_Dinitialized   1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_product2       2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_pusher2_in     3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_pusher2_out    4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_stack2_filled  5      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  Total                                           6      12        24          24          100%

Applying automatic variable ordering:
  Number of hyperedges: 13

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    6 (total)                 0.46 (avg/edge) [before]
    Total span:                    6 (total)                 0.46 (avg/edge) [iteration 1]
    Total span:                    6 (total)                 0.46 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    6 (total)                 0.46 (avg/edge) [before]
    Total span:                    5 (total)                 0.38 (avg/edge) [window 1..4]
    Total span:                    5 (total)                 0.38 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name             Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   A_pusher2        0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   S_pusher2_in     1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   S_pusher2_out    2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   S_Dinitialized   3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   S_product2       4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   S_stack2_filled  5      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ---------------  -----  --------  ----------  ----------  -----------
  Total                                           6      12        24          24          100%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     S_product2.Off
Initial   (aut/locs init predicate):     S_pusher2_in.On
Initial   (aut/locs init predicate):     S_pusher2_out.Off
Initial   (aut/locs init predicate):     S_stack2_filled.On
Initial   (aut/locs init predicate):     S_Dinitialized.Off
Initial   (aut/locs init predicate):     A_pusher2.Off
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On))
Initial   (uncontrolled system):         A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On))
Initial   (system, combined init/inv):   A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   S_product2.Off
Marked    (aut/locs marker predicate):   S_pusher2_in.On
Marked    (aut/locs marker predicate):   S_pusher2_out.Off
Marked    (aut/locs marker predicate):   S_stack2_filled.On
Marked    (aut/locs marker predicate):   S_Dinitialized.Off
Marked    (aut/locs marker predicate):   A_pusher2.Off
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On))
Marked    (uncontrolled system):         A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On))
Marked    (system, combined marked/inv): A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On))

State/event exclusion requirements:
  Event "A_pusher2_c_off" needs:
    S_pusher2_out.On and S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off)
    Edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On)
    Edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off)
    Edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On)
    Edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off)
    Edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher2_c_off) (guard: A_pusher2.On) (assignments: A_pusher2 := A_pusher2.Off)
    Edge: (event: A_pusher2_c_on) (guard: A_pusher2.Off) (assignments: A_pusher2 := A_pusher2.On)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: A_pusher2_c_off) (guard: A_pusher2.On) (assignments: A_pusher2 := A_pusher2.Off): guard: A_pusher2.On -> A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)) [requirement: S_pusher2_out.On and S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off)
    Edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On)
    Edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off)
    Edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On)
    Edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off)
    Edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off)
    Edge: (event: A_pusher2_c_on) (guard: A_pusher2.Off) (assignments: A_pusher2 := A_pusher2.On)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On) [backward reach with edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off and S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On) -> A_pusher2.Off and (S_Dinitialized.Off and S_stack2_filled.On) [backward reach with edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off and (S_Dinitialized.Off and S_stack2_filled.On) -> A_pusher2.Off and S_Dinitialized.Off [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off and S_Dinitialized.Off -> A_pusher2.Off [backward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.Off -> A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)) or A_pusher2.Off [backward reach with edge: (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)) or A_pusher2.Off -> A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and S_stack2_filled.On) or A_pusher2.Off [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and S_stack2_filled.On) or A_pusher2.Off -> A_pusher2.On and S_pusher2_in.On and (S_pusher2_out.On and (S_Dinitialized.On and S_stack2_filled.On)) or (A_pusher2.On and S_pusher2_in.Off and (S_Dinitialized.On and S_stack2_filled.On) or A_pusher2.Off) [backward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.On and S_pusher2_in.On and (S_pusher2_out.On and (S_Dinitialized.On and S_stack2_filled.On)) or (A_pusher2.On and S_pusher2_in.Off and (S_Dinitialized.On and S_stack2_filled.On) or A_pusher2.Off) -> A_pusher2.On and S_pusher2_in.On and (S_pusher2_out.On and S_Dinitialized.On) or (A_pusher2.On and (S_pusher2_in.Off and S_Dinitialized.On) or A_pusher2.Off) [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: A_pusher2.On and S_pusher2_in.On and (S_pusher2_out.On and S_Dinitialized.On) or (A_pusher2.On and (S_pusher2_in.Off and S_Dinitialized.On) or A_pusher2.Off) -> A_pusher2.Off or (S_pusher2_in.Off or S_pusher2_out.On) [backward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: A_pusher2.Off or (S_pusher2_in.Off or S_pusher2_out.On) -> true [backward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) [forward reach with edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On) [forward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On) -> A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) or A_pusher2.Off and S_pusher2_in.Off and (S_Dinitialized.Off and S_stack2_filled.On) [forward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) or A_pusher2.Off and S_pusher2_in.Off and (S_Dinitialized.Off and S_stack2_filled.On) -> A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and S_Dinitialized.Off) or A_pusher2.Off and (S_pusher2_in.Off and S_Dinitialized.Off) [forward reach with edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and S_Dinitialized.Off) or A_pusher2.Off and (S_pusher2_in.Off and S_Dinitialized.Off) -> A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) [forward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) -> S_pusher2_in.Off or S_pusher2_out.Off [forward reach with edge: (event: A_pusher2_c_on) (guard: A_pusher2.Off) (assignments: A_pusher2 := A_pusher2.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: S_pusher2_in.Off or S_pusher2_out.Off [fixed point].
Controlled behavior: true -> S_pusher2_in.Off or S_pusher2_out.Off.

Round 1: finished, need another round.

Round 2: started.

Round 2: computing backward controlled-behavior predicate.
Backward controlled-behavior: A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) -> A_pusher2.Off and S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On) [backward reach with edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On) -> A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) or A_pusher2.Off and S_pusher2_in.Off and (S_Dinitialized.Off and S_stack2_filled.On) [backward reach with edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and (S_Dinitialized.Off and S_stack2_filled.On)) or A_pusher2.Off and S_pusher2_in.Off and (S_Dinitialized.Off and S_stack2_filled.On) -> A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and S_Dinitialized.Off) or A_pusher2.Off and (S_pusher2_in.Off and S_Dinitialized.Off) [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and S_pusher2_in.On and (S_pusher2_out.Off and S_Dinitialized.Off) or A_pusher2.Off and (S_pusher2_in.Off and S_Dinitialized.Off) -> A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) [backward reach with edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) -> A_pusher2.On and (S_pusher2_in.Off and S_pusher2_out.On) and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) [backward reach with edge: (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward reachability: iteration 2.
Backward controlled-behavior: A_pusher2.On and (S_pusher2_in.Off and S_pusher2_out.On) and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) -> A_pusher2.On and S_pusher2_in.Off and (S_pusher2_out.On and (S_Dinitialized.On and S_stack2_filled.On)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) [backward reach with edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.On and S_pusher2_in.Off and (S_pusher2_out.On and (S_Dinitialized.On and S_stack2_filled.On)) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) -> A_pusher2.On and S_pusher2_in.Off and (S_Dinitialized.On and S_stack2_filled.On) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) [backward reach with edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: A_pusher2.On and S_pusher2_in.Off and (S_Dinitialized.On and S_stack2_filled.On) or (A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) or A_pusher2.Off and S_pusher2_in.Off) -> (A_pusher2.Off or S_pusher2_in.Off) and ((A_pusher2.Off or (S_pusher2_in.On or S_Dinitialized.On)) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))) [backward reach with edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward controlled-behavior: (A_pusher2.Off or S_pusher2_in.Off) and ((A_pusher2.Off or (S_pusher2_in.On or S_Dinitialized.On)) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))) -> (A_pusher2.Off or S_pusher2_in.Off) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) [backward reach with edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward reachability: iteration 3.
Backward controlled-behavior: (A_pusher2.Off or S_pusher2_in.Off) and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) -> S_pusher2_in.Off or S_pusher2_out.Off [backward reach with edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off), restricted to current/previous controlled-behavior predicate: S_pusher2_in.Off or S_pusher2_out.Off]
Backward reachability: iteration 4.
Backward controlled-behavior: S_pusher2_in.Off or S_pusher2_out.Off [fixed point].

Round 2: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: S_pusher2_in.On and S_pusher2_out.On [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 2: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off): guard: A_pusher2.On and S_pusher2_out.On and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)) -> A_pusher2.On and (S_pusher2_in.Off and S_pusher2_out.On) and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)).
Edge (event: A_pusher2_c_on) (guard: A_pusher2.Off) (assignments: A_pusher2 := A_pusher2.On): guard: A_pusher2.Off -> A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)).

Final synthesis result:
  State: (controlled-behavior: S_pusher2_in.Off or S_pusher2_out.Off)
    Edge: (event: S_product2_u_off) (guard: S_product2.On) (assignments: S_product2 := S_product2.Off)
    Edge: (event: S_product2_u_on) (guard: S_product2.Off) (assignments: S_product2 := S_product2.On)
    Edge: (event: S_pusher2_in_u_off) (guard: S_pusher2_in.On) (assignments: S_pusher2_in := S_pusher2_in.Off)
    Edge: (event: S_pusher2_in_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_in := S_pusher2_in.On)
    Edge: (event: S_pusher2_out_u_off) (guard: S_pusher2_out.On) (assignments: S_pusher2_out := S_pusher2_out.Off)
    Edge: (event: S_pusher2_out_u_on) (guard: S_pusher2_in.Off and S_pusher2_out.Off) (assignments: S_pusher2_out := S_pusher2_out.On)
    Edge: (event: S_stack2_filled_u_off) (guard: S_stack2_filled.On) (assignments: S_stack2_filled := S_stack2_filled.Off)
    Edge: (event: S_stack2_filled_u_on) (guard: S_stack2_filled.Off) (assignments: S_stack2_filled := S_stack2_filled.On)
    Edge: (event: S_Dinitialized_u_off) (guard: S_Dinitialized.On) (assignments: S_Dinitialized := S_Dinitialized.Off)
    Edge: (event: S_Dinitialized_u_on) (guard: S_Dinitialized.Off) (assignments: S_Dinitialized := S_Dinitialized.On)
    Edge: (event: A_pusher2_c_off) (guard: A_pusher2.On -> A_pusher2.On and (S_pusher2_in.Off and S_pusher2_out.On) and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On))) (assignments: A_pusher2 := A_pusher2.Off)
    Edge: (event: A_pusher2_c_on) (guard: A_pusher2.Off -> A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))) (assignments: A_pusher2 := A_pusher2.On)

Controlled system:                     exactly 48 states.

Initial (synthesis result):            S_pusher2_in.Off or S_pusher2_out.Off
Initial (uncontrolled system):         A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On))
Initial (controlled system):           A_pusher2.Off and (S_pusher2_in.On and S_pusher2_out.Off) and (S_Dinitialized.Off and (S_product2.Off and S_stack2_filled.On))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event A_pusher2_c_off: guard: A_pusher2.On and (S_pusher2_in.Off and S_pusher2_out.On) and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On)) -> true [assume A_pusher2.On and (S_pusher2_in.Off and S_pusher2_out.On) and (S_Dinitialized.On and (S_product2.Off and S_stack2_filled.On))].
  Event A_pusher2_c_on: guard: A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off)) -> true [assume A_pusher2.Off and (A_pusher2.On or (S_pusher2_in.Off or S_pusher2_out.Off))].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_largereq/subplant_16_sup.cif".
