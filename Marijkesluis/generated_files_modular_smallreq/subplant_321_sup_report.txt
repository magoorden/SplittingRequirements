Reading CIF file "generated_files_modular_smallreq/subplant_321.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                                        Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------------------------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   South_Downstream_EnteringTLs_East_Actuator  0      2 * 2     4 * 2       4 * 2       100%
  2      location pointer  n/a   South_Downstream_EnteringTLs_East_SensorG   1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   South_Downstream_EnteringTLs_East_SensorR1  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   South_Downstream_EnteringTLs_East_SensorR2  3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   South_Downstream_LeavingTLs_East_Actuator   4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   South_Downstream_LeavingTLs_East_SensorG    5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   South_Downstream_LeavingTLs_East_SensorR    6      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ------------------------------------------  -----  --------  ----------  ----------  -----------
  Total                                                                      7      16        32          32          100%

Applying automatic variable ordering:
  Number of hyperedges: 17

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                   18 (total)                 1.06 (avg/edge) [before]
    Total span:                   14 (total)                 0.82 (avg/edge) [iteration 1]
    Total span:                   14 (total)                 0.82 (avg/edge) [iteration 2]
    Total span:                   14 (total)                 0.82 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   14 (total)                 0.82 (avg/edge) [before]
    Total span:                   12 (total)                 0.71 (avg/edge) [window 2..5]
    Total span:                   12 (total)                 0.71 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name                                        Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------------------------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   South_Downstream_EnteringTLs_East_SensorG   0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   South_Downstream_EnteringTLs_East_Actuator  1      2 * 2     4 * 2       4 * 2       100%
  3      location pointer  n/a   South_Downstream_EnteringTLs_East_SensorR2  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   South_Downstream_EnteringTLs_East_SensorR1  3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   South_Downstream_LeavingTLs_East_SensorG    4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   South_Downstream_LeavingTLs_East_Actuator   5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   South_Downstream_LeavingTLs_East_SensorR    6      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ------------------------------------------  -----  --------  ----------  ----------  -----------
  Total                                                                      7      16        32          32          100%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     South_Downstream_EnteringTLs_East_Actuator.Red
Initial   (aut/locs init predicate):     South_Downstream_EnteringTLs_East_SensorR1.On
Initial   (aut/locs init predicate):     South_Downstream_EnteringTLs_East_SensorG.Off
Initial   (aut/locs init predicate):     South_Downstream_EnteringTLs_East_SensorR2.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     South_Downstream_LeavingTLs_East_Actuator.Red
Initial   (aut/locs init predicate):     South_Downstream_LeavingTLs_East_SensorR.On
Initial   (aut/locs init predicate):     South_Downstream_LeavingTLs_East_SensorG.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))
Initial   (uncontrolled system):         South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))
Initial   (system, combined init/inv):   South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red
Marked    (aut/locs marker predicate):   South_Downstream_EnteringTLs_East_SensorR1.On
Marked    (aut/locs marker predicate):   South_Downstream_EnteringTLs_East_SensorG.Off
Marked    (aut/locs marker predicate):   South_Downstream_EnteringTLs_East_SensorR2.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   South_Downstream_LeavingTLs_East_Actuator.Red
Marked    (aut/locs marker predicate):   South_Downstream_LeavingTLs_East_SensorR.On
Marked    (aut/locs marker predicate):   South_Downstream_LeavingTLs_East_SensorG.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))
Marked    (uncontrolled system):         South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))
Marked    (system, combined marked/inv): South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))

State/event exclusion requirements:
  Event "South_Downstream_EnteringTLs_East_Actuator_c_g" needs:
    South_Downstream_LeavingTLs_East_Actuator.Red

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.Green) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedRed)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedGreen)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_g) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Green)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR1_u_on) (guard: (South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR1.Off or South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR1.Off) (assignments: South_Downstream_EnteringTLs_East_SensorR1 := South_Downstream_EnteringTLs_East_SensorR1.On)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR1.On) (assignments: South_Downstream_EnteringTLs_East_SensorR1 := South_Downstream_EnteringTLs_East_SensorR1.Off)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorG_u_on) (guard: South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.RedGreen or South_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: South_Downstream_EnteringTLs_East_SensorG := South_Downstream_EnteringTLs_East_SensorG.On)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorG_u_off) (guard: South_Downstream_EnteringTLs_East_SensorG.On and (South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red)) (assignments: South_Downstream_EnteringTLs_East_SensorG := South_Downstream_EnteringTLs_East_SensorG.Off)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed and South_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: South_Downstream_EnteringTLs_East_SensorR2 := South_Downstream_EnteringTLs_East_SensorR2.On)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR2_u_off) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_EnteringTLs_East_SensorR2.On or (South_Downstream_EnteringTLs_East_Actuator.Red or South_Downstream_EnteringTLs_East_Actuator.Green) and South_Downstream_EnteringTLs_East_SensorR2.On) (assignments: South_Downstream_EnteringTLs_East_SensorR2 := South_Downstream_EnteringTLs_East_SensorR2.Off)
    Edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_g) (guard: South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Green)
    Edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_r) (guard: South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorR_u_on) (guard: South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.Off) (assignments: South_Downstream_LeavingTLs_East_SensorR := South_Downstream_LeavingTLs_East_SensorR.On)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorR_u_off) (guard: South_Downstream_LeavingTLs_East_Actuator.Green and South_Downstream_LeavingTLs_East_SensorR.On) (assignments: South_Downstream_LeavingTLs_East_SensorR := South_Downstream_LeavingTLs_East_SensorR.Off)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorG_u_on) (guard: South_Downstream_LeavingTLs_East_SensorG.Off and South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_SensorG := South_Downstream_LeavingTLs_East_SensorG.On)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorG_u_off) (guard: South_Downstream_LeavingTLs_East_SensorG.On and South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_LeavingTLs_East_SensorG := South_Downstream_LeavingTLs_East_SensorG.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: South_Downstream_EnteringTLs_East_Actuator_c_g) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Green): guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen -> South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_LeavingTLs_East_Actuator.Red [requirement: South_Downstream_LeavingTLs_East_Actuator.Red].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.Green) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedRed)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedGreen)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_g) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen -> South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Green)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR1_u_on) (guard: (South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR1.Off or South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR1.Off) (assignments: South_Downstream_EnteringTLs_East_SensorR1 := South_Downstream_EnteringTLs_East_SensorR1.On)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR1.On) (assignments: South_Downstream_EnteringTLs_East_SensorR1 := South_Downstream_EnteringTLs_East_SensorR1.Off)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorG_u_on) (guard: South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.RedGreen or South_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: South_Downstream_EnteringTLs_East_SensorG := South_Downstream_EnteringTLs_East_SensorG.On)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorG_u_off) (guard: South_Downstream_EnteringTLs_East_SensorG.On and (South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red)) (assignments: South_Downstream_EnteringTLs_East_SensorG := South_Downstream_EnteringTLs_East_SensorG.Off)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed and South_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: South_Downstream_EnteringTLs_East_SensorR2 := South_Downstream_EnteringTLs_East_SensorR2.On)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR2_u_off) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_EnteringTLs_East_SensorR2.On or (South_Downstream_EnteringTLs_East_Actuator.Red or South_Downstream_EnteringTLs_East_Actuator.Green) and South_Downstream_EnteringTLs_East_SensorR2.On) (assignments: South_Downstream_EnteringTLs_East_SensorR2 := South_Downstream_EnteringTLs_East_SensorR2.Off)
    Edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_g) (guard: South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Green)
    Edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_r) (guard: South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorR_u_on) (guard: South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.Off) (assignments: South_Downstream_LeavingTLs_East_SensorR := South_Downstream_LeavingTLs_East_SensorR.On)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorR_u_off) (guard: South_Downstream_LeavingTLs_East_Actuator.Green and South_Downstream_LeavingTLs_East_SensorR.On) (assignments: South_Downstream_LeavingTLs_East_SensorR := South_Downstream_LeavingTLs_East_SensorR.Off)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorG_u_on) (guard: South_Downstream_LeavingTLs_East_SensorG.Off and South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_SensorG := South_Downstream_LeavingTLs_East_SensorG.On)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorG_u_off) (guard: South_Downstream_LeavingTLs_East_SensorG.On and South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_LeavingTLs_East_SensorG := South_Downstream_LeavingTLs_East_SensorG.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) -> South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) [backward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) -> South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_SensorR2.Off and South_Downstream_EnteringTLs_East_SensorR1.On) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) [backward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.Green) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_SensorR2.Off and South_Downstream_EnteringTLs_East_SensorR1.On) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) -> South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or (South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))) [backward reach with edge: (event: South_Downstream_EnteringTLs_East_SensorR1_u_on) (guard: (South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR1.Off or South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR1.Off) (assignments: South_Downstream_EnteringTLs_East_SensorR1 := South_Downstream_EnteringTLs_East_SensorR1.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or (South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))) -> South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or (South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.On and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))) [backward reach with edge: (event: South_Downstream_EnteringTLs_East_SensorG_u_off) (guard: South_Downstream_EnteringTLs_East_SensorG.On and (South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red)) (assignments: South_Downstream_EnteringTLs_East_SensorG := South_Downstream_EnteringTLs_East_SensorG.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or (South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.On and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))) -> <bdd 12n 6p> [backward reach with edge: (event: South_Downstream_EnteringTLs_East_SensorR2_u_off) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_EnteringTLs_East_SensorR2.On or (South_Downstream_EnteringTLs_East_Actuator.Red or South_Downstream_EnteringTLs_East_Actuator.Green) and South_Downstream_EnteringTLs_East_SensorR2.On) (assignments: South_Downstream_EnteringTLs_East_SensorR2 := South_Downstream_EnteringTLs_East_SensorR2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 6p> -> <bdd 11n 6p> [backward reach with edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_r) (guard: South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 6p> -> <bdd 12n 12p> [backward reach with edge: (event: South_Downstream_LeavingTLs_East_SensorR_u_on) (guard: South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.Off) (assignments: South_Downstream_LeavingTLs_East_SensorR := South_Downstream_LeavingTLs_East_SensorR.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 12p> -> <bdd 13n 18p> [backward reach with edge: (event: South_Downstream_LeavingTLs_East_SensorG_u_off) (guard: South_Downstream_LeavingTLs_East_SensorG.On and South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_LeavingTLs_East_SensorG := South_Downstream_LeavingTLs_East_SensorG.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 13n 18p> -> <bdd 9n 12p> [backward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 9n 12p> -> <bdd 10n 15p> [backward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 10n 15p> -> (South_Downstream_LeavingTLs_East_SensorG.On or (South_Downstream_LeavingTLs_East_Actuator.Red or South_Downstream_LeavingTLs_East_SensorR.On)) and (South_Downstream_LeavingTLs_East_SensorG.Off or South_Downstream_LeavingTLs_East_Actuator.Red) [backward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.Green) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (South_Downstream_LeavingTLs_East_SensorG.On or (South_Downstream_LeavingTLs_East_Actuator.Red or South_Downstream_LeavingTLs_East_SensorR.On)) and (South_Downstream_LeavingTLs_East_SensorG.Off or South_Downstream_LeavingTLs_East_Actuator.Red) -> true [backward reach with edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_r) (guard: South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) -> South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) -> South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) -> South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_SensorR2.Off and South_Downstream_EnteringTLs_East_SensorR1.On) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_g) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen -> South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_SensorR2.Off and South_Downstream_EnteringTLs_East_SensorR1.On) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) -> South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or (South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))) [forward reach with edge: (event: South_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR1.On) (assignments: South_Downstream_EnteringTLs_East_SensorR1 := South_Downstream_EnteringTLs_East_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: South_Downstream_EnteringTLs_East_SensorG.Off and ((South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or (South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On)) or South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))) -> <bdd 12n 5p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_SensorG_u_on) (guard: South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.RedGreen or South_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: South_Downstream_EnteringTLs_East_SensorG := South_Downstream_EnteringTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 5p> -> <bdd 13n 6p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed and South_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: South_Downstream_EnteringTLs_East_SensorR2 := South_Downstream_EnteringTLs_East_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 6p> -> <bdd 12n 6p> [forward reach with edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_g) (guard: South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 6p> -> <bdd 13n 12p> [forward reach with edge: (event: South_Downstream_LeavingTLs_East_SensorR_u_off) (guard: South_Downstream_LeavingTLs_East_Actuator.Green and South_Downstream_LeavingTLs_East_SensorR.On) (assignments: South_Downstream_LeavingTLs_East_SensorR := South_Downstream_LeavingTLs_East_SensorR.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 12p> -> <bdd 14n 18p> [forward reach with edge: (event: South_Downstream_LeavingTLs_East_SensorG_u_on) (guard: South_Downstream_LeavingTLs_East_SensorG.Off and South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_SensorG := South_Downstream_LeavingTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 14n 18p> -> <bdd 14n 18p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 18p> -> <bdd 14n 21p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 21p> -> <bdd 14n 21p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.Green) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 21p> -> <bdd 14n 27p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 27p> -> <bdd 10n 18p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 10n 18p> -> <bdd 14n 19p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_g) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen -> South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 19p> -> <bdd 13n 19p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR1.On) (assignments: South_Downstream_EnteringTLs_East_SensorR1 := South_Downstream_EnteringTLs_East_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 19p> -> <bdd 16n 32p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_SensorG_u_on) (guard: South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.RedGreen or South_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: South_Downstream_EnteringTLs_East_SensorG := South_Downstream_EnteringTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 32p> -> <bdd 16n 35p> [forward reach with edge: (event: South_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed and South_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: South_Downstream_EnteringTLs_East_SensorR2 := South_Downstream_EnteringTLs_East_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 35p> -> <bdd 15n 35p> [forward reach with edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_g) (guard: South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 35p> -> <bdd 12n 13p> [forward reach with edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_r) (guard: South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 13p> -> <bdd 13n 15p> [forward reach with edge: (event: South_Downstream_LeavingTLs_East_SensorR_u_off) (guard: South_Downstream_LeavingTLs_East_Actuator.Green and South_Downstream_LeavingTLs_East_SensorR.On) (assignments: South_Downstream_LeavingTLs_East_SensorR := South_Downstream_LeavingTLs_East_SensorR.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 15p> -> <bdd 14n 17p> [forward reach with edge: (event: South_Downstream_LeavingTLs_East_SensorG_u_on) (guard: South_Downstream_LeavingTLs_East_SensorG.Off and South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_SensorG := South_Downstream_LeavingTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 14n 17p> -> (not South_Downstream_EnteringTLs_East_Actuator.RedGreen or (South_Downstream_EnteringTLs_East_SensorR2.Off or South_Downstream_EnteringTLs_East_SensorR1.On)) and ((not South_Downstream_EnteringTLs_East_Actuator.Green or South_Downstream_EnteringTLs_East_SensorR2.Off or (South_Downstream_LeavingTLs_East_SensorG.On or (South_Downstream_LeavingTLs_East_Actuator.Green or South_Downstream_LeavingTLs_East_SensorR.On))) and (not South_Downstream_EnteringTLs_East_Actuator.Green or South_Downstream_EnteringTLs_East_SensorR2.Off or (South_Downstream_LeavingTLs_East_SensorG.Off or South_Downstream_LeavingTLs_East_Actuator.Green))) [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not South_Downstream_EnteringTLs_East_Actuator.RedGreen or (South_Downstream_EnteringTLs_East_SensorR2.Off or South_Downstream_EnteringTLs_East_SensorR1.On)) and ((not South_Downstream_EnteringTLs_East_Actuator.Green or South_Downstream_EnteringTLs_East_SensorR2.Off or (South_Downstream_LeavingTLs_East_SensorG.On or (South_Downstream_LeavingTLs_East_Actuator.Green or South_Downstream_LeavingTLs_East_SensorR.On))) and (not South_Downstream_EnteringTLs_East_Actuator.Green or South_Downstream_EnteringTLs_East_SensorR2.Off or (South_Downstream_LeavingTLs_East_SensorG.Off or South_Downstream_LeavingTLs_East_Actuator.Green))) -> (not South_Downstream_EnteringTLs_East_Actuator.Green or South_Downstream_EnteringTLs_East_SensorR2.Off or (South_Downstream_LeavingTLs_East_SensorG.On or (South_Downstream_LeavingTLs_East_Actuator.Green or South_Downstream_LeavingTLs_East_SensorR.On))) and (not South_Downstream_EnteringTLs_East_Actuator.Green or South_Downstream_EnteringTLs_East_SensorR2.Off or (South_Downstream_LeavingTLs_East_SensorG.Off or South_Downstream_LeavingTLs_East_Actuator.Green)) [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not South_Downstream_EnteringTLs_East_Actuator.Green or South_Downstream_EnteringTLs_East_SensorR2.Off or (South_Downstream_LeavingTLs_East_SensorG.On or (South_Downstream_LeavingTLs_East_Actuator.Green or South_Downstream_LeavingTLs_East_SensorR.On))) and (not South_Downstream_EnteringTLs_East_Actuator.Green or South_Downstream_EnteringTLs_East_SensorR2.Off or (South_Downstream_LeavingTLs_East_SensorG.Off or South_Downstream_LeavingTLs_East_Actuator.Green)) -> true [forward reach with edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_g) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen -> South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_r) (guard: South_Downstream_EnteringTLs_East_Actuator.Green) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedRed)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: South_Downstream_EnteringTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.RedGreen)
    Edge: (event: South_Downstream_EnteringTLs_East_Actuator_c_g) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen -> South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_EnteringTLs_East_Actuator := South_Downstream_EnteringTLs_East_Actuator.Green)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR1_u_on) (guard: (South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.RedGreen) and South_Downstream_EnteringTLs_East_SensorR1.Off or South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR1.Off) (assignments: South_Downstream_EnteringTLs_East_SensorR1 := South_Downstream_EnteringTLs_East_SensorR1.On)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR1.On) (assignments: South_Downstream_EnteringTLs_East_SensorR1 := South_Downstream_EnteringTLs_East_SensorR1.Off)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorG_u_on) (guard: South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.RedGreen or South_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: South_Downstream_EnteringTLs_East_SensorG := South_Downstream_EnteringTLs_East_SensorG.On)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorG_u_off) (guard: South_Downstream_EnteringTLs_East_SensorG.On and (South_Downstream_EnteringTLs_East_Actuator.RedRed or South_Downstream_EnteringTLs_East_Actuator.Red)) (assignments: South_Downstream_EnteringTLs_East_SensorG := South_Downstream_EnteringTLs_East_SensorG.Off)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: South_Downstream_EnteringTLs_East_Actuator.RedRed and South_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: South_Downstream_EnteringTLs_East_SensorR2 := South_Downstream_EnteringTLs_East_SensorR2.On)
    Edge: (event: South_Downstream_EnteringTLs_East_SensorR2_u_off) (guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_EnteringTLs_East_SensorR2.On or (South_Downstream_EnteringTLs_East_Actuator.Red or South_Downstream_EnteringTLs_East_Actuator.Green) and South_Downstream_EnteringTLs_East_SensorR2.On) (assignments: South_Downstream_EnteringTLs_East_SensorR2 := South_Downstream_EnteringTLs_East_SensorR2.Off)
    Edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_g) (guard: South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Green)
    Edge: (event: South_Downstream_LeavingTLs_East_Actuator_c_r) (guard: South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_Actuator := South_Downstream_LeavingTLs_East_Actuator.Red)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorR_u_on) (guard: South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.Off) (assignments: South_Downstream_LeavingTLs_East_SensorR := South_Downstream_LeavingTLs_East_SensorR.On)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorR_u_off) (guard: South_Downstream_LeavingTLs_East_Actuator.Green and South_Downstream_LeavingTLs_East_SensorR.On) (assignments: South_Downstream_LeavingTLs_East_SensorR := South_Downstream_LeavingTLs_East_SensorR.Off)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorG_u_on) (guard: South_Downstream_LeavingTLs_East_SensorG.Off and South_Downstream_LeavingTLs_East_Actuator.Green) (assignments: South_Downstream_LeavingTLs_East_SensorG := South_Downstream_LeavingTLs_East_SensorG.On)
    Edge: (event: South_Downstream_LeavingTLs_East_SensorG_u_off) (guard: South_Downstream_LeavingTLs_East_SensorG.On and South_Downstream_LeavingTLs_East_Actuator.Red) (assignments: South_Downstream_LeavingTLs_East_SensorG := South_Downstream_LeavingTLs_East_SensorG.Off)

Controlled system:                     exactly 256 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))
Initial (controlled system):           South_Downstream_EnteringTLs_East_SensorG.Off and (South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR2.Off) and (South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_LeavingTLs_East_SensorG.Off and (South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event South_Downstream_EnteringTLs_East_Actuator_c_r: guard: not South_Downstream_EnteringTLs_East_Actuator.Red -> true [assume not South_Downstream_EnteringTLs_East_Actuator.Red].
  Event South_Downstream_EnteringTLs_East_Actuator_c_rr: guard: South_Downstream_EnteringTLs_East_Actuator.Red -> true [assume South_Downstream_EnteringTLs_East_Actuator.Red].
  Event South_Downstream_EnteringTLs_East_Actuator_c_rg: guard: South_Downstream_EnteringTLs_East_Actuator.Red -> true [assume South_Downstream_EnteringTLs_East_Actuator.Red].
  Event South_Downstream_EnteringTLs_East_Actuator_c_g: guard: South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_LeavingTLs_East_Actuator.Red -> true [assume South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_LeavingTLs_East_Actuator.Red].
  Event South_Downstream_LeavingTLs_East_Actuator_c_g: guard: South_Downstream_LeavingTLs_East_Actuator.Red -> true [assume South_Downstream_LeavingTLs_East_Actuator.Red].
  Event South_Downstream_LeavingTLs_East_Actuator_c_r: guard: South_Downstream_LeavingTLs_East_Actuator.Green -> true [assume South_Downstream_LeavingTLs_East_Actuator.Green].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_smallreq/subplant_321_sup.cif".
