Reading CIF file "generated_files_modular_smallreq/subplant_112.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                                      Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ----------------------------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   North_Upstream_EnteringTLs_East_Actuator  0      2 * 2     4 * 2       4 * 2       100%
  2      location pointer  n/a   North_Upstream_EnteringTLs_East_SensorG   1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   North_Upstream_EnteringTLs_East_SensorR1  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   North_Upstream_EnteringTLs_East_SensorR2  3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   North_Upstream_EnteringTLs_West_Actuator  4      2 * 2     4 * 2       4 * 2       100%
  6      location pointer  n/a   North_Upstream_EnteringTLs_West_SensorG   5      1 * 2     2 * 2       2 * 2       100%
  7      location pointer  n/a   North_Upstream_EnteringTLs_West_SensorR1  6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   North_Upstream_EnteringTLs_West_SensorR2  7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   North_Upstream_Gates_West_Actuator        8      2 * 2     3 * 2       4 * 2       75%
  10     location pointer  n/a   North_Upstream_Gates_West_Sensor          9      2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  ----------------------------------------  -----  --------  ----------  ----------  -----------
  Total                                                                    10     28        52          56          ~93%

Applying automatic variable ordering:
  Number of hyperedges: 30

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   35 (total)                 1.17 (avg/edge) [before]
    Total span:                   31 (total)                 1.03 (avg/edge) [iteration 1]
    Total span:                   31 (total)                 1.03 (avg/edge) [iteration 2]
    Total span:                   31 (total)                 1.03 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   31 (total)                 1.03 (avg/edge) [before]
    Total span:                   27 (total)                 0.90 (avg/edge) [window 0..3]
    Total span:                   27 (total)                 0.90 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name                                      Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ----------------------------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   North_Upstream_EnteringTLs_East_SensorG   0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   North_Upstream_EnteringTLs_East_Actuator  1      2 * 2     4 * 2       4 * 2       100%
  3      location pointer  n/a   North_Upstream_EnteringTLs_East_SensorR1  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   North_Upstream_EnteringTLs_East_SensorR2  3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   North_Upstream_EnteringTLs_West_SensorG   4      1 * 2     2 * 2       2 * 2       100%
  6      location pointer  n/a   North_Upstream_EnteringTLs_West_Actuator  5      2 * 2     4 * 2       4 * 2       100%
  7      location pointer  n/a   North_Upstream_EnteringTLs_West_SensorR1  6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   North_Upstream_EnteringTLs_West_SensorR2  7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   North_Upstream_Gates_West_Actuator        8      2 * 2     3 * 2       4 * 2       75%
  10     location pointer  n/a   North_Upstream_Gates_West_Sensor          9      2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  ----------------------------------------  -----  --------  ----------  ----------  -----------
  Total                                                                    10     28        52          56          ~93%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     North_Upstream_Gates_West_Actuator.Rest
Initial   (aut/locs init predicate):     North_Upstream_Gates_West_Sensor.Closed
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     North_Upstream_EnteringTLs_East_Actuator.Red
Initial   (aut/locs init predicate):     North_Upstream_EnteringTLs_East_SensorR1.On
Initial   (aut/locs init predicate):     North_Upstream_EnteringTLs_East_SensorG.Off
Initial   (aut/locs init predicate):     North_Upstream_EnteringTLs_East_SensorR2.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     North_Upstream_EnteringTLs_West_Actuator.Red
Initial   (aut/locs init predicate):     North_Upstream_EnteringTLs_West_SensorR1.On
Initial   (aut/locs init predicate):     North_Upstream_EnteringTLs_West_SensorG.Off
Initial   (aut/locs init predicate):     North_Upstream_EnteringTLs_West_SensorR2.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    <bdd 14n 1p>
Initial   (uncontrolled system):         <bdd 14n 1p>
Initial   (system, combined init/inv):   <bdd 14n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   North_Upstream_Gates_West_Actuator.Rest
Marked    (aut/locs marker predicate):   North_Upstream_Gates_West_Sensor.Closed
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.Red
Marked    (aut/locs marker predicate):   North_Upstream_EnteringTLs_East_SensorR1.On
Marked    (aut/locs marker predicate):   North_Upstream_EnteringTLs_East_SensorG.Off
Marked    (aut/locs marker predicate):   North_Upstream_EnteringTLs_East_SensorR2.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.Red
Marked    (aut/locs marker predicate):   North_Upstream_EnteringTLs_West_SensorR1.On
Marked    (aut/locs marker predicate):   North_Upstream_EnteringTLs_West_SensorG.Off
Marked    (aut/locs marker predicate):   North_Upstream_EnteringTLs_West_SensorR2.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  <bdd 12n 1p>
Marked    (uncontrolled system):         <bdd 12n 1p>
Marked    (system, combined marked/inv): <bdd 12n 1p>

State/event exclusion requirements:
  Event "North_Upstream_Gates_West_Actuator_c_close" needs:
    <bdd 18n 2p>

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_open) (guard: North_Upstream_Gates_West_Actuator.Rest) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Opening)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_close) (guard: North_Upstream_Gates_West_Actuator.Rest) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Closing)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Closing) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_endStopOpening) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_endStopClosing) (guard: North_Upstream_Gates_West_Actuator.Closing) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_closed_off) (guard: North_Upstream_Gates_West_Actuator.Opening and North_Upstream_Gates_West_Sensor.Closed) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_closed_on) (guard: North_Upstream_Gates_West_Actuator.Closing and North_Upstream_Gates_West_Sensor.Intermediate) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Closed)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_open_on) (guard: North_Upstream_Gates_West_Actuator.Opening and North_Upstream_Gates_West_Sensor.Intermediate) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Open)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_open_off) (guard: North_Upstream_Gates_West_Actuator.Closing and North_Upstream_Gates_West_Sensor.Open) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedRed)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedGreen)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_g) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Green)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen) and North_Upstream_EnteringTLs_East_SensorR1.Off or North_Upstream_EnteringTLs_East_Actuator.Red and North_Upstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.On)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.Green and North_Upstream_EnteringTLs_East_SensorR1.On) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.Off)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_on) (guard: North_Upstream_EnteringTLs_East_SensorG.Off and (North_Upstream_EnteringTLs_East_Actuator.RedGreen or North_Upstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.On)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_off) (guard: North_Upstream_EnteringTLs_East_SensorG.On and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.Off)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed and North_Upstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.On)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen and North_Upstream_EnteringTLs_East_SensorR2.On or (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and North_Upstream_EnteringTLs_East_SensorR2.On) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.Off)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedRed)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedGreen)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_g) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Green)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen) and North_Upstream_EnteringTLs_West_SensorR1.Off or North_Upstream_EnteringTLs_West_Actuator.Red and North_Upstream_EnteringTLs_West_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.On)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.Green and North_Upstream_EnteringTLs_West_SensorR1.On) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.Off)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_on) (guard: North_Upstream_EnteringTLs_West_SensorG.Off and (North_Upstream_EnteringTLs_West_Actuator.RedGreen or North_Upstream_EnteringTLs_West_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.On)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_off) (guard: North_Upstream_EnteringTLs_West_SensorG.On and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.Off)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed and North_Upstream_EnteringTLs_West_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.On)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen and North_Upstream_EnteringTLs_West_SensorR2.On or (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and North_Upstream_EnteringTLs_West_SensorR2.On) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "North_Upstream_Gates_West_Actuator" (group: 8, domain: 16+17, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> true [range: true, variable: location pointer for automaton "North_Upstream_Gates_West_Sensor" (group: 9, domain: 18+19, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: North_Upstream_Gates_West_Actuator_c_close) (guard: North_Upstream_Gates_West_Actuator.Rest) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Closing): guard: North_Upstream_Gates_West_Actuator.Rest -> <bdd 20n 2p> [requirement: <bdd 18n 2p>].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_open) (guard: North_Upstream_Gates_West_Actuator.Rest) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Opening)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_close) (guard: North_Upstream_Gates_West_Actuator.Rest -> <bdd 20n 2p>) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Closing)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Closing) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_endStopOpening) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_endStopClosing) (guard: North_Upstream_Gates_West_Actuator.Closing) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_closed_off) (guard: North_Upstream_Gates_West_Actuator.Opening and North_Upstream_Gates_West_Sensor.Closed) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_closed_on) (guard: North_Upstream_Gates_West_Actuator.Closing and North_Upstream_Gates_West_Sensor.Intermediate) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Closed)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_open_on) (guard: North_Upstream_Gates_West_Actuator.Opening and North_Upstream_Gates_West_Sensor.Intermediate) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Open)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_open_off) (guard: North_Upstream_Gates_West_Actuator.Closing and North_Upstream_Gates_West_Sensor.Open) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedRed)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedGreen)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_g) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Green)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen) and North_Upstream_EnteringTLs_East_SensorR1.Off or North_Upstream_EnteringTLs_East_Actuator.Red and North_Upstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.On)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.Green and North_Upstream_EnteringTLs_East_SensorR1.On) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.Off)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_on) (guard: North_Upstream_EnteringTLs_East_SensorG.Off and (North_Upstream_EnteringTLs_East_Actuator.RedGreen or North_Upstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.On)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_off) (guard: North_Upstream_EnteringTLs_East_SensorG.On and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.Off)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed and North_Upstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.On)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen and North_Upstream_EnteringTLs_East_SensorR2.On or (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and North_Upstream_EnteringTLs_East_SensorR2.On) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.Off)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedRed)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedGreen)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_g) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Green)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen) and North_Upstream_EnteringTLs_West_SensorR1.Off or North_Upstream_EnteringTLs_West_Actuator.Red and North_Upstream_EnteringTLs_West_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.On)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.Green and North_Upstream_EnteringTLs_West_SensorR1.On) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.Off)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_on) (guard: North_Upstream_EnteringTLs_West_SensorG.Off and (North_Upstream_EnteringTLs_West_Actuator.RedGreen or North_Upstream_EnteringTLs_West_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.On)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_off) (guard: North_Upstream_EnteringTLs_West_SensorG.On and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.Off)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed and North_Upstream_EnteringTLs_West_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.On)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen and North_Upstream_EnteringTLs_West_SensorR2.On or (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and North_Upstream_EnteringTLs_West_SensorR2.On) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 12n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 1p> -> <bdd 12n 2p> [backward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Closing) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 2p> -> <bdd 13n 3p> [backward reach with edge: (event: North_Upstream_Gates_West_Sensor_u_closed_on) (guard: North_Upstream_Gates_West_Actuator.Closing and North_Upstream_Gates_West_Sensor.Intermediate) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Closed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 3p> -> <bdd 14n 4p> [backward reach with edge: (event: North_Upstream_Gates_West_Sensor_u_open_off) (guard: North_Upstream_Gates_West_Actuator.Closing and North_Upstream_Gates_West_Sensor.Open) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Intermediate), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 4p> -> <bdd 15n 8p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 8p> -> <bdd 13n 4p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 4p> -> <bdd 15n 12p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen) and North_Upstream_EnteringTLs_East_SensorR1.Off or North_Upstream_EnteringTLs_East_Actuator.Red and North_Upstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 12p> -> <bdd 16n 16p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_off) (guard: North_Upstream_EnteringTLs_East_SensorG.On and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 16p> -> <bdd 19n 24p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen and North_Upstream_EnteringTLs_East_SensorR2.On or (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and North_Upstream_EnteringTLs_East_SensorR2.On) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 24p> -> <bdd 20n 48p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 20n 48p> -> <bdd 18n 24p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 24p> -> <bdd 20n 72p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen) and North_Upstream_EnteringTLs_West_SensorR1.Off or North_Upstream_EnteringTLs_West_Actuator.Red and North_Upstream_EnteringTLs_West_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 20n 72p> -> <bdd 21n 96p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_off) (guard: North_Upstream_EnteringTLs_West_SensorG.On and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 21n 96p> -> <bdd 24n 144p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen and North_Upstream_EnteringTLs_West_SensorR2.On or (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and North_Upstream_EnteringTLs_West_SensorR2.On) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 24n 144p> -> <bdd 32n 199p> [backward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_close) (guard: North_Upstream_Gates_West_Actuator.Rest -> <bdd 20n 2p>) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 32n 199p> -> <bdd 33n 200p> [backward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 33n 200p> -> <bdd 30n 232p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 30n 232p> -> <bdd 30n 232p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 30n 232p> -> <bdd 25n 104p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 25n 104p> -> <bdd 27n 216p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen) and North_Upstream_EnteringTLs_East_SensorR1.Off or North_Upstream_EnteringTLs_East_Actuator.Red and North_Upstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 27n 216p> -> <bdd 28n 272p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_off) (guard: North_Upstream_EnteringTLs_East_SensorG.On and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 28n 272p> -> <bdd 31n 312p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen and North_Upstream_EnteringTLs_East_SensorR2.On or (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and North_Upstream_EnteringTLs_East_SensorR2.On) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 31n 312p> -> <bdd 28n 296p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 28n 296p> -> <bdd 28n 316p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 28n 316p> -> <bdd 20n 116p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 20n 116p> -> <bdd 22n 212p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen) and North_Upstream_EnteringTLs_West_SensorR1.Off or North_Upstream_EnteringTLs_West_Actuator.Red and North_Upstream_EnteringTLs_West_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 22n 212p> -> <bdd 23n 260p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_off) (guard: North_Upstream_EnteringTLs_West_SensorG.On and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 23n 260p> -> <bdd 26n 284p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen and North_Upstream_EnteringTLs_West_SensorR2.On or (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and North_Upstream_EnteringTLs_West_SensorR2.On) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 26n 284p> -> <bdd 34n 351p> [backward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_close) (guard: North_Upstream_Gates_West_Actuator.Rest -> <bdd 20n 2p>) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 34n 351p> -> <bdd 33n 352p> [backward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 33n 352p> -> <bdd 29n 320p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 29n 320p> -> <bdd 30n 364p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 30n 364p> -> <bdd 26n 268p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 26n 268p> -> <bdd 25n 224p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 25n 224p> -> <bdd 24n 180p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen) and North_Upstream_EnteringTLs_East_SensorR1.Off or North_Upstream_EnteringTLs_East_Actuator.Red and North_Upstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 24n 180p> -> <bdd 23n 136p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_off) (guard: North_Upstream_EnteringTLs_East_SensorG.On and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 23n 136p> -> <bdd 25n 228p> [backward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed and North_Upstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 25n 228p> -> <bdd 13n 24p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 24p> -> <bdd 14n 28p> [backward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 28p> -> true [backward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 4.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 14n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 14n 1p> -> <bdd 13n 1p> [forward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_open) (guard: North_Upstream_Gates_West_Actuator.Rest) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 1p> -> <bdd 14n 2p> [forward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_close) (guard: North_Upstream_Gates_West_Actuator.Rest -> <bdd 20n 2p>) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 2p> -> <bdd 14n 2p> [forward reach with edge: (event: North_Upstream_Gates_West_Sensor_u_closed_off) (guard: North_Upstream_Gates_West_Actuator.Opening and North_Upstream_Gates_West_Sensor.Closed) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Intermediate), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 2p> -> <bdd 15n 3p> [forward reach with edge: (event: North_Upstream_Gates_West_Sensor_u_open_on) (guard: North_Upstream_Gates_West_Actuator.Opening and North_Upstream_Gates_West_Sensor.Intermediate) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Open), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 3p> -> <bdd 14n 3p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 3p> -> <bdd 15n 6p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 6p> -> <bdd 13n 3p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_g) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 3p> -> <bdd 15n 9p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.Green and North_Upstream_EnteringTLs_East_SensorR1.On) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 9p> -> <bdd 18n 15p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_on) (guard: North_Upstream_EnteringTLs_East_SensorG.Off and (North_Upstream_EnteringTLs_East_Actuator.RedGreen or North_Upstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 15p> -> <bdd 20n 18p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed and North_Upstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 18p> -> <bdd 19n 18p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 18p> -> <bdd 20n 36p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 36p> -> <bdd 18n 18p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_g) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 18p> -> <bdd 20n 54p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.Green and North_Upstream_EnteringTLs_West_SensorR1.On) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 54p> -> <bdd 23n 90p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_on) (guard: North_Upstream_EnteringTLs_West_SensorG.Off and (North_Upstream_EnteringTLs_West_Actuator.RedGreen or North_Upstream_EnteringTLs_West_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 90p> -> <bdd 25n 108p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed and North_Upstream_EnteringTLs_West_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 25n 108p> -> <bdd 26n 180p> [forward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 180p> -> <bdd 26n 180p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 180p> -> <bdd 26n 210p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 210p> -> <bdd 26n 210p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 210p> -> <bdd 25n 270p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 25n 270p> -> <bdd 21n 180p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 180p> -> <bdd 19n 90p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_g) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 90p> -> <bdd 21n 180p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.Green and North_Upstream_EnteringTLs_East_SensorR1.On) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 180p> -> <bdd 24n 300p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_on) (guard: North_Upstream_EnteringTLs_East_SensorG.Off and (North_Upstream_EnteringTLs_East_Actuator.RedGreen or North_Upstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 300p> -> <bdd 24n 330p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed and North_Upstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 330p> -> <bdd 24n 330p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 330p> -> <bdd 24n 385p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 385p> -> <bdd 24n 385p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 385p> -> <bdd 23n 495p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 495p> -> <bdd 19n 330p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 330p> -> <bdd 17n 165p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_g) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 165p> -> <bdd 19n 330p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.Green and North_Upstream_EnteringTLs_West_SensorR1.On) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 330p> -> <bdd 22n 550p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_on) (guard: North_Upstream_EnteringTLs_West_SensorG.Off and (North_Upstream_EnteringTLs_West_Actuator.RedGreen or North_Upstream_EnteringTLs_West_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 550p> -> <bdd 22n 605p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed and North_Upstream_EnteringTLs_West_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 22n 605p> -> <bdd 38n 783p> [forward reach with edge: (event: North_Upstream_Gates_West_Actuator_c_close) (guard: North_Upstream_Gates_West_Actuator.Rest -> <bdd 20n 2p>) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 38n 783p> -> <bdd 37n 737p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 37n 737p> -> <bdd 35n 741p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 35n 741p> -> <bdd 30n 466p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 30n 466p> -> <bdd 28n 233p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_g) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 233p> -> <bdd 30n 534p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.Green and North_Upstream_EnteringTLs_East_SensorR1.On) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 30n 534p> -> <bdd 33n 890p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_on) (guard: North_Upstream_EnteringTLs_East_SensorG.Off and (North_Upstream_EnteringTLs_East_Actuator.RedGreen or North_Upstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 890p> -> <bdd 38n 1,072p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed and North_Upstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 38n 1,072p> -> <bdd 38n 1,117p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen and North_Upstream_EnteringTLs_East_SensorR2.On or (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and North_Upstream_EnteringTLs_East_SensorR2.On) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 38n 1,117p> -> <bdd 37n 837p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 37n 837p> -> <bdd 39n 816p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 39n 816p> -> <bdd 32n 426p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 32n 426p> -> <bdd 26n 228p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_g) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 228p> -> <bdd 32n 444p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.Green and North_Upstream_EnteringTLs_West_SensorR1.On) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 32n 444p> -> <bdd 41n 720p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_on) (guard: North_Upstream_EnteringTLs_West_SensorG.Off and (North_Upstream_EnteringTLs_West_Actuator.RedGreen or North_Upstream_EnteringTLs_West_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 41n 720p> -> <bdd 42n 729p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed and North_Upstream_EnteringTLs_West_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 42n 729p> -> <bdd 39n 674p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen and North_Upstream_EnteringTLs_West_SensorR2.On or (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and North_Upstream_EnteringTLs_West_SensorR2.On) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.Off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 39n 674p> -> <bdd 40n 615p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 40n 615p> -> <bdd 40n 719p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 40n 719p> -> <bdd 39n 709p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 39n 709p> -> <bdd 28n 828p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 828p> -> <bdd 24n 506p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 506p> -> <bdd 22n 253p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_g) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 253p> -> <bdd 24n 447p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.Green and North_Upstream_EnteringTLs_East_SensorR1.On) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 447p> -> <bdd 27n 745p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_on) (guard: North_Upstream_EnteringTLs_East_SensorG.Off and (North_Upstream_EnteringTLs_East_Actuator.RedGreen or North_Upstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 745p> -> <bdd 27n 731p> [forward reach with edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed and North_Upstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 731p> -> <bdd 26n 791p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 791p> -> <bdd 25n 521p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 25n 521p> -> <bdd 10n 17p> [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 10n 17p> -> true [forward reach with edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: North_Upstream_Gates_West_Actuator_c_open) (guard: North_Upstream_Gates_West_Actuator.Rest) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Opening): guard: North_Upstream_Gates_West_Actuator.Rest -> not North_Upstream_Gates_West_Actuator.Closing and not North_Upstream_Gates_West_Actuator.Opening.
Edge (event: North_Upstream_Gates_West_Actuator_c_close) (guard: North_Upstream_Gates_West_Actuator.Rest -> <bdd 20n 2p>) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Closing): guard: <bdd 20n 2p> -> <bdd 22n 4p>.
Edge (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest): guard: North_Upstream_Gates_West_Actuator.Opening -> North_Upstream_Gates_West_Actuator.Opening.
Edge (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Closing) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest): guard: North_Upstream_Gates_West_Actuator.Closing -> not North_Upstream_Gates_West_Actuator.Rest and not North_Upstream_Gates_West_Actuator.Opening.
Edge (event: North_Upstream_Gates_West_Actuator_c_endStopOpening) (guard: North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest): guard: North_Upstream_Gates_West_Actuator.Opening -> North_Upstream_Gates_West_Actuator.Opening.
Edge (event: North_Upstream_Gates_West_Actuator_c_endStopClosing) (guard: North_Upstream_Gates_West_Actuator.Closing) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest): guard: North_Upstream_Gates_West_Actuator.Closing -> not North_Upstream_Gates_West_Actuator.Rest and not North_Upstream_Gates_West_Actuator.Opening.
Edge (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red): guard: North_Upstream_EnteringTLs_East_Actuator.RedRed -> not North_Upstream_EnteringTLs_East_Actuator.RedGreen and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen).
Edge (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red): guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen -> not North_Upstream_EnteringTLs_East_Actuator.RedRed and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen).
Edge (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red): guard: North_Upstream_EnteringTLs_East_Actuator.Green -> (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Red.
Edge (event: North_Upstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedRed): guard: North_Upstream_EnteringTLs_East_Actuator.Red -> (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Green.
Edge (event: North_Upstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedGreen): guard: North_Upstream_EnteringTLs_East_Actuator.Red -> (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Green.
Edge (event: North_Upstream_EnteringTLs_East_Actuator_c_g) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Green): guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen -> not North_Upstream_EnteringTLs_East_Actuator.RedRed and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen).
Edge (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red): guard: North_Upstream_EnteringTLs_West_Actuator.RedRed -> not North_Upstream_EnteringTLs_West_Actuator.RedGreen and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen).
Edge (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red): guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen -> not North_Upstream_EnteringTLs_West_Actuator.RedRed and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen).
Edge (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red): guard: North_Upstream_EnteringTLs_West_Actuator.Green -> (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Red.
Edge (event: North_Upstream_EnteringTLs_West_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedRed): guard: North_Upstream_EnteringTLs_West_Actuator.Red -> (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Green.
Edge (event: North_Upstream_EnteringTLs_West_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedGreen): guard: North_Upstream_EnteringTLs_West_Actuator.Red -> (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Green.
Edge (event: North_Upstream_EnteringTLs_West_Actuator_c_g) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Green): guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen -> not North_Upstream_EnteringTLs_West_Actuator.RedRed and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen).

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_open) (guard: North_Upstream_Gates_West_Actuator.Rest -> not North_Upstream_Gates_West_Actuator.Closing and not North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Opening)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_close) (guard: North_Upstream_Gates_West_Actuator.Rest -> <bdd 22n 4p>) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Closing)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Opening -> North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Upstream_Gates_West_Actuator.Closing -> not North_Upstream_Gates_West_Actuator.Rest and not North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_endStopOpening) (guard: North_Upstream_Gates_West_Actuator.Opening -> North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Actuator_c_endStopClosing) (guard: North_Upstream_Gates_West_Actuator.Closing -> not North_Upstream_Gates_West_Actuator.Rest and not North_Upstream_Gates_West_Actuator.Opening) (assignments: North_Upstream_Gates_West_Actuator := North_Upstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_closed_off) (guard: North_Upstream_Gates_West_Actuator.Opening and North_Upstream_Gates_West_Sensor.Closed) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_closed_on) (guard: North_Upstream_Gates_West_Actuator.Closing and North_Upstream_Gates_West_Sensor.Intermediate) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Closed)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_open_on) (guard: North_Upstream_Gates_West_Actuator.Opening and North_Upstream_Gates_West_Sensor.Intermediate) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Open)
    Edge: (event: North_Upstream_Gates_West_Sensor_u_open_off) (guard: North_Upstream_Gates_West_Actuator.Closing and North_Upstream_Gates_West_Sensor.Open) (assignments: North_Upstream_Gates_West_Sensor := North_Upstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed -> not North_Upstream_EnteringTLs_East_Actuator.RedGreen and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen)) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen -> not North_Upstream_EnteringTLs_East_Actuator.RedRed and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen)) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_r) (guard: North_Upstream_EnteringTLs_East_Actuator.Green -> (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Red) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_East_Actuator.Red -> (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedRed)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_East_Actuator.Red -> (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Green) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.RedGreen)
    Edge: (event: North_Upstream_EnteringTLs_East_Actuator_c_g) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen -> not North_Upstream_EnteringTLs_East_Actuator.RedRed and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen)) (assignments: North_Upstream_EnteringTLs_East_Actuator := North_Upstream_EnteringTLs_East_Actuator.Green)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen) and North_Upstream_EnteringTLs_East_SensorR1.Off or North_Upstream_EnteringTLs_East_Actuator.Red and North_Upstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.On)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.Green and North_Upstream_EnteringTLs_East_SensorR1.On) (assignments: North_Upstream_EnteringTLs_East_SensorR1 := North_Upstream_EnteringTLs_East_SensorR1.Off)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_on) (guard: North_Upstream_EnteringTLs_East_SensorG.Off and (North_Upstream_EnteringTLs_East_Actuator.RedGreen or North_Upstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.On)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorG_u_off) (guard: North_Upstream_EnteringTLs_East_SensorG.On and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_East_SensorG := North_Upstream_EnteringTLs_East_SensorG.Off)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_East_Actuator.RedRed and North_Upstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.On)
    Edge: (event: North_Upstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_East_Actuator.RedGreen and North_Upstream_EnteringTLs_East_SensorR2.On or (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and North_Upstream_EnteringTLs_East_SensorR2.On) (assignments: North_Upstream_EnteringTLs_East_SensorR2 := North_Upstream_EnteringTLs_East_SensorR2.Off)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed -> not North_Upstream_EnteringTLs_West_Actuator.RedGreen and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen)) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen -> not North_Upstream_EnteringTLs_West_Actuator.RedRed and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen)) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_r) (guard: North_Upstream_EnteringTLs_West_Actuator.Green -> (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Red) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Red)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rr) (guard: North_Upstream_EnteringTLs_West_Actuator.Red -> (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedRed)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_rg) (guard: North_Upstream_EnteringTLs_West_Actuator.Red -> (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Green) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.RedGreen)
    Edge: (event: North_Upstream_EnteringTLs_West_Actuator_c_g) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen -> not North_Upstream_EnteringTLs_West_Actuator.RedRed and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen)) (assignments: North_Upstream_EnteringTLs_West_Actuator := North_Upstream_EnteringTLs_West_Actuator.Green)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_on) (guard: (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen) and North_Upstream_EnteringTLs_West_SensorR1.Off or North_Upstream_EnteringTLs_West_Actuator.Red and North_Upstream_EnteringTLs_West_SensorR1.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.On)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR1_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.Green and North_Upstream_EnteringTLs_West_SensorR1.On) (assignments: North_Upstream_EnteringTLs_West_SensorR1 := North_Upstream_EnteringTLs_West_SensorR1.Off)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_on) (guard: North_Upstream_EnteringTLs_West_SensorG.Off and (North_Upstream_EnteringTLs_West_Actuator.RedGreen or North_Upstream_EnteringTLs_West_Actuator.Green)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.On)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorG_u_off) (guard: North_Upstream_EnteringTLs_West_SensorG.On and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.Red)) (assignments: North_Upstream_EnteringTLs_West_SensorG := North_Upstream_EnteringTLs_West_SensorG.Off)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_on) (guard: North_Upstream_EnteringTLs_West_Actuator.RedRed and North_Upstream_EnteringTLs_West_SensorR2.Off) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.On)
    Edge: (event: North_Upstream_EnteringTLs_West_SensorR2_u_off) (guard: North_Upstream_EnteringTLs_West_Actuator.RedGreen and North_Upstream_EnteringTLs_West_SensorR2.On or (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and North_Upstream_EnteringTLs_West_SensorR2.On) (assignments: North_Upstream_EnteringTLs_West_SensorR2 := North_Upstream_EnteringTLs_West_SensorR2.Off)

Controlled system:                     exactly 9,216 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         <bdd 14n 1p>
Initial (controlled system):           <bdd 14n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event North_Upstream_Gates_West_Actuator_c_open: guard: not North_Upstream_Gates_West_Actuator.Closing and not North_Upstream_Gates_West_Actuator.Opening -> true [assume not North_Upstream_Gates_West_Actuator.Closing and not North_Upstream_Gates_West_Actuator.Opening].
  Event North_Upstream_Gates_West_Actuator_c_close: guard: <bdd 22n 4p> -> true [assume <bdd 22n 4p>].
  Event North_Upstream_Gates_West_Actuator_c_emergencyStop: guard: not North_Upstream_Gates_West_Actuator.Rest -> true [assume not North_Upstream_Gates_West_Actuator.Rest].
  Event North_Upstream_Gates_West_Actuator_c_endStopOpening: guard: North_Upstream_Gates_West_Actuator.Opening -> true [assume North_Upstream_Gates_West_Actuator.Opening].
  Event North_Upstream_Gates_West_Actuator_c_endStopClosing: guard: not North_Upstream_Gates_West_Actuator.Rest and not North_Upstream_Gates_West_Actuator.Opening -> true [assume not North_Upstream_Gates_West_Actuator.Rest and not North_Upstream_Gates_West_Actuator.Opening].
  Event North_Upstream_EnteringTLs_East_Actuator_c_r: guard: not North_Upstream_EnteringTLs_East_Actuator.Red -> true [assume not North_Upstream_EnteringTLs_East_Actuator.Red].
  Event North_Upstream_EnteringTLs_East_Actuator_c_rr: guard: (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Green -> true [assume (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Green].
  Event North_Upstream_EnteringTLs_East_Actuator_c_rg: guard: (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Green -> true [assume (North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.Green) and not North_Upstream_EnteringTLs_East_Actuator.Green].
  Event North_Upstream_EnteringTLs_East_Actuator_c_g: guard: not North_Upstream_EnteringTLs_East_Actuator.RedRed and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen) -> true [assume not North_Upstream_EnteringTLs_East_Actuator.RedRed and (North_Upstream_EnteringTLs_East_Actuator.RedRed or North_Upstream_EnteringTLs_East_Actuator.RedGreen)].
  Event North_Upstream_EnteringTLs_West_Actuator_c_r: guard: not North_Upstream_EnteringTLs_West_Actuator.Red -> true [assume not North_Upstream_EnteringTLs_West_Actuator.Red].
  Event North_Upstream_EnteringTLs_West_Actuator_c_rr: guard: (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Green -> true [assume (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Green].
  Event North_Upstream_EnteringTLs_West_Actuator_c_rg: guard: (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Green -> true [assume (North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.Green) and not North_Upstream_EnteringTLs_West_Actuator.Green].
  Event North_Upstream_EnteringTLs_West_Actuator_c_g: guard: not North_Upstream_EnteringTLs_West_Actuator.RedRed and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen) -> true [assume not North_Upstream_EnteringTLs_West_Actuator.RedRed and (North_Upstream_EnteringTLs_West_Actuator.RedRed or North_Upstream_EnteringTLs_West_Actuator.RedGreen)].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_smallreq/subplant_112_sup.cif".
