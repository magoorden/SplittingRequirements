Reading CIF file "generated_files_modular_smallreq/subplant_96.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                                        Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------------------------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   North_Downstream_EnteringTLs_East_Actuator  0      2 * 2     4 * 2       4 * 2       100%
  2      location pointer  n/a   North_Downstream_EnteringTLs_East_SensorG   1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   North_Downstream_EnteringTLs_East_SensorR1  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   North_Downstream_EnteringTLs_East_SensorR2  3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   North_Downstream_Gates_West_Actuator        4      2 * 2     3 * 2       4 * 2       75%
  6      location pointer  n/a   North_Downstream_Gates_West_Sensor          5      2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  ------------------------------------------  -----  --------  ----------  ----------  -----------
  Total                                                                      6      18        32          36          ~89%

Applying automatic variable ordering:
  Number of hyperedges: 20

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                   16 (total)                 0.80 (avg/edge) [before]
    Total span:                   12 (total)                 0.60 (avg/edge) [iteration 1]
    Total span:                   12 (total)                 0.60 (avg/edge) [iteration 2]
    Total span:                   12 (total)                 0.60 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   12 (total)                 0.60 (avg/edge) [before]
    Total span:                   12 (total)                 0.60 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name                                        Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------------------------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   North_Downstream_EnteringTLs_East_SensorG   0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   North_Downstream_EnteringTLs_East_Actuator  1      2 * 2     4 * 2       4 * 2       100%
  3      location pointer  n/a   North_Downstream_EnteringTLs_East_SensorR1  2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   North_Downstream_EnteringTLs_East_SensorR2  3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   North_Downstream_Gates_West_Actuator        4      2 * 2     3 * 2       4 * 2       75%
  6      location pointer  n/a   North_Downstream_Gates_West_Sensor          5      2 * 2     3 * 2       4 * 2       75%
  -----  ----------------  ----  ------------------------------------------  -----  --------  ----------  ----------  -----------
  Total                                                                      6      18        32          36          ~89%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     North_Downstream_Gates_West_Actuator.Rest
Initial   (aut/locs init predicate):     North_Downstream_Gates_West_Sensor.Closed
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     North_Downstream_EnteringTLs_East_Actuator.Red
Initial   (aut/locs init predicate):     North_Downstream_EnteringTLs_East_SensorR1.On
Initial   (aut/locs init predicate):     North_Downstream_EnteringTLs_East_SensorG.Off
Initial   (aut/locs init predicate):     North_Downstream_EnteringTLs_East_SensorR2.Off
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     true
Initial   (auts/locs init predicate):    North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed))
Initial   (uncontrolled system):         North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed))
Initial   (system, combined init/inv):   North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed))

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   North_Downstream_Gates_West_Actuator.Rest
Marked    (aut/locs marker predicate):   North_Downstream_Gates_West_Sensor.Closed
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red
Marked    (aut/locs marker predicate):   North_Downstream_EnteringTLs_East_SensorR1.On
Marked    (aut/locs marker predicate):   North_Downstream_EnteringTLs_East_SensorG.Off
Marked    (aut/locs marker predicate):   North_Downstream_EnteringTLs_East_SensorR2.Off
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   true
Marked    (auts/locs marker predicate):  North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed))
Marked    (uncontrolled system):         North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed))
Marked    (system, combined marked/inv): North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed))

State/event exclusion requirements:
  Event "North_Downstream_EnteringTLs_East_Actuator_c_g" needs:
    North_Downstream_Gates_West_Sensor.Open

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_open) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Opening)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_close) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Closing)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Closing) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_endStopOpening) (guard: North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_endStopClosing) (guard: North_Downstream_Gates_West_Actuator.Closing) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_closed_off) (guard: North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_closed_on) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Intermediate) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Closed)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_open_on) (guard: North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Open)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_open_off) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Open) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.Green) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedRed)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedGreen)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_g) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Green)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.Off or North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Downstream_EnteringTLs_East_SensorR1 := North_Downstream_EnteringTLs_East_SensorR1.On)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Downstream_EnteringTLs_East_Actuator.Green and North_Downstream_EnteringTLs_East_SensorR1.On) (assignments: North_Downstream_EnteringTLs_East_SensorR1 := North_Downstream_EnteringTLs_East_SensorR1.Off)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorG_u_on) (guard: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.RedGreen or North_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Downstream_EnteringTLs_East_SensorG := North_Downstream_EnteringTLs_East_SensorG.On)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorG_u_off) (guard: North_Downstream_EnteringTLs_East_SensorG.On and (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Downstream_EnteringTLs_East_SensorG := North_Downstream_EnteringTLs_East_SensorG.Off)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed and North_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Downstream_EnteringTLs_East_SensorR2 := North_Downstream_EnteringTLs_East_SensorR2.On)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_EnteringTLs_East_SensorR2.On or (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and North_Downstream_EnteringTLs_East_SensorR2.On) (assignments: North_Downstream_EnteringTLs_East_SensorR2 := North_Downstream_EnteringTLs_East_SensorR2.Off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "North_Downstream_Gates_West_Actuator" (group: 4, domain: 8+9, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> true [range: true, variable: location pointer for automaton "North_Downstream_Gates_West_Sensor" (group: 5, domain: 10+11, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: North_Downstream_EnteringTLs_East_Actuator_c_g) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Green): guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen -> North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_Gates_West_Sensor.Open [requirement: North_Downstream_Gates_West_Sensor.Open].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_open) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Opening)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_close) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Closing)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Closing) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_endStopOpening) (guard: North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_endStopClosing) (guard: North_Downstream_Gates_West_Actuator.Closing) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_closed_off) (guard: North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_closed_on) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Intermediate) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Closed)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_open_on) (guard: North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Open)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_open_off) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Open) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.Green) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedRed)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedGreen)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_g) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen -> North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_Gates_West_Sensor.Open) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Green)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.Off or North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Downstream_EnteringTLs_East_SensorR1 := North_Downstream_EnteringTLs_East_SensorR1.On)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Downstream_EnteringTLs_East_Actuator.Green and North_Downstream_EnteringTLs_East_SensorR1.On) (assignments: North_Downstream_EnteringTLs_East_SensorR1 := North_Downstream_EnteringTLs_East_SensorR1.Off)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorG_u_on) (guard: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.RedGreen or North_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Downstream_EnteringTLs_East_SensorG := North_Downstream_EnteringTLs_East_SensorG.On)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorG_u_off) (guard: North_Downstream_EnteringTLs_East_SensorG.On and (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Downstream_EnteringTLs_East_SensorG := North_Downstream_EnteringTLs_East_SensorG.Off)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed and North_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Downstream_EnteringTLs_East_SensorR2 := North_Downstream_EnteringTLs_East_SensorR2.On)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_EnteringTLs_East_SensorR2.On or (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and North_Downstream_EnteringTLs_East_SensorR2.On) (assignments: North_Downstream_EnteringTLs_East_SensorR2 := North_Downstream_EnteringTLs_East_SensorR2.Off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) -> North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Closed)) [backward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Closed)) -> North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) [backward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Closing) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) -> North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Sensor.Open)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed))) [backward reach with edge: (event: North_Downstream_Gates_West_Sensor_u_closed_on) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Intermediate) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Closed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Sensor.Open)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed))) -> North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Sensor.Intermediate)) or (North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed))) [backward reach with edge: (event: North_Downstream_Gates_West_Sensor_u_open_off) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Open) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Intermediate), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Sensor.Intermediate)) or (North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed))) -> <bdd 11n 8p> [backward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 8p> -> North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR1.On and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR1.On and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Sensor.Intermediate)) or (North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR1.On and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR1.On and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed))) [backward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.Green) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR1.On and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR1.On and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Sensor.Intermediate)) or (North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR1.On and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR1.On and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed))) -> <bdd 11n 12p> [backward reach with edge: (event: North_Downstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.Off or North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Downstream_EnteringTLs_East_SensorR1 := North_Downstream_EnteringTLs_East_SensorR1.On), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 12p> -> <bdd 12n 16p> [backward reach with edge: (event: North_Downstream_EnteringTLs_East_SensorG_u_off) (guard: North_Downstream_EnteringTLs_East_SensorG.On and (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Downstream_EnteringTLs_East_SensorG := North_Downstream_EnteringTLs_East_SensorG.Off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 16p> -> <bdd 15n 24p> [backward reach with edge: (event: North_Downstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_EnteringTLs_East_SensorR2.On or (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and North_Downstream_EnteringTLs_East_SensorR2.On) (assignments: North_Downstream_EnteringTLs_East_SensorR2 := North_Downstream_EnteringTLs_East_SensorR2.Off), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: <bdd 15n 24p> -> <bdd 14n 18p> [backward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_close) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 18p> -> <bdd 13n 24p> [backward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 24p> -> <bdd 9n 16p> [backward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 9n 16p> -> <bdd 10n 20p> [backward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 10n 20p> -> true [backward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.Green) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed)) -> North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Closed)) [forward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_open) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Closed)) -> North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) [forward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_close) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) -> North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Open)) [forward reach with edge: (event: North_Downstream_Gates_West_Sensor_u_closed_off) (guard: North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Intermediate), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Open)) -> North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate))) [forward reach with edge: (event: North_Downstream_Gates_West_Sensor_u_open_on) (guard: North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Open), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate))) -> North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate))) [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate))) -> North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate))) or (North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate)))) [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and ((North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate))) or (North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed)) or (North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and not North_Downstream_Gates_West_Sensor.Intermediate)) or North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate)))) -> <bdd 16n 7p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_g) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen -> North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_Gates_West_Sensor.Open) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 7p> -> <bdd 15n 7p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Downstream_EnteringTLs_East_Actuator.Green and North_Downstream_EnteringTLs_East_SensorR1.On) (assignments: North_Downstream_EnteringTLs_East_SensorR1 := North_Downstream_EnteringTLs_East_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 7p> -> <bdd 18n 11p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_SensorG_u_on) (guard: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.RedGreen or North_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Downstream_EnteringTLs_East_SensorG := North_Downstream_EnteringTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 11p> -> <bdd 20n 14p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed and North_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Downstream_EnteringTLs_East_SensorR2 := North_Downstream_EnteringTLs_East_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 20n 14p> -> <bdd 20n 22p> [forward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 22p> -> <bdd 20n 22p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 22p> -> <bdd 20n 27p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 27p> -> <bdd 22n 29p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.Green) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 29p> -> <bdd 21n 36p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 36p> -> <bdd 18n 26p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 26p> -> <bdd 19n 27p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_g) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen -> North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_Gates_West_Sensor.Open) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 27p> -> <bdd 18n 26p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Downstream_EnteringTLs_East_Actuator.Green and North_Downstream_EnteringTLs_East_SensorR1.On) (assignments: North_Downstream_EnteringTLs_East_SensorR1 := North_Downstream_EnteringTLs_East_SensorR1.Off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 26p> -> <bdd 19n 32p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_SensorG_u_on) (guard: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.RedGreen or North_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Downstream_EnteringTLs_East_SensorG := North_Downstream_EnteringTLs_East_SensorG.On), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 32p> -> <bdd 20n 38p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed and North_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Downstream_EnteringTLs_East_SensorR2 := North_Downstream_EnteringTLs_East_SensorR2.On), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 20n 38p> -> <bdd 19n 40p> [forward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_close) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 40p> -> <bdd 21n 56p> [forward reach with edge: (event: North_Downstream_Gates_West_Sensor_u_open_off) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Open) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Intermediate), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 56p> -> <bdd 16n 28p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 28p> -> <bdd 13n 20p> [forward reach with edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedGreen), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 13n 20p> -> <bdd 12n 17p> [forward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Closing) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 17p> -> <bdd 13n 23p> [forward reach with edge: (event: North_Downstream_Gates_West_Sensor_u_closed_on) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Intermediate) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Closed), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 13n 23p> -> <bdd 12n 26p> [forward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_open) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 26p> -> <bdd 11n 20p> [forward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Closing) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 6.
Forward controlled-behavior: <bdd 11n 20p> -> true [forward reach with edge: (event: North_Downstream_Gates_West_Actuator_c_open) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Opening), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 7.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: North_Downstream_Gates_West_Actuator_c_open) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Opening): guard: North_Downstream_Gates_West_Actuator.Rest -> not North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Actuator.Opening.
Edge (event: North_Downstream_Gates_West_Actuator_c_close) (guard: North_Downstream_Gates_West_Actuator.Rest) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Closing): guard: North_Downstream_Gates_West_Actuator.Rest -> not North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Actuator.Opening.
Edge (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest): guard: North_Downstream_Gates_West_Actuator.Opening -> North_Downstream_Gates_West_Actuator.Opening.
Edge (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Closing) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest): guard: North_Downstream_Gates_West_Actuator.Closing -> not North_Downstream_Gates_West_Actuator.Rest and not North_Downstream_Gates_West_Actuator.Opening.
Edge (event: North_Downstream_Gates_West_Actuator_c_endStopOpening) (guard: North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest): guard: North_Downstream_Gates_West_Actuator.Opening -> North_Downstream_Gates_West_Actuator.Opening.
Edge (event: North_Downstream_Gates_West_Actuator_c_endStopClosing) (guard: North_Downstream_Gates_West_Actuator.Closing) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest): guard: North_Downstream_Gates_West_Actuator.Closing -> not North_Downstream_Gates_West_Actuator.Rest and not North_Downstream_Gates_West_Actuator.Opening.
Edge (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red): guard: North_Downstream_EnteringTLs_East_Actuator.RedRed -> not North_Downstream_EnteringTLs_East_Actuator.RedGreen and (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen).
Edge (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red): guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen -> not North_Downstream_EnteringTLs_East_Actuator.RedRed and (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen).
Edge (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.Green) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red): guard: North_Downstream_EnteringTLs_East_Actuator.Green -> (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Red.
Edge (event: North_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedRed): guard: North_Downstream_EnteringTLs_East_Actuator.Red -> (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Green.
Edge (event: North_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedGreen): guard: North_Downstream_EnteringTLs_East_Actuator.Red -> (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Green.
Edge (event: North_Downstream_EnteringTLs_East_Actuator_c_g) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen -> North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_Gates_West_Sensor.Open) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Green): guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_Gates_West_Sensor.Open -> North_Downstream_EnteringTLs_East_Actuator.RedGreen and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Open) or North_Downstream_EnteringTLs_East_Actuator.RedGreen and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Open).

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_open) (guard: North_Downstream_Gates_West_Actuator.Rest -> not North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Opening)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_close) (guard: North_Downstream_Gates_West_Actuator.Rest -> not North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Closing)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Opening -> North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_emergencyStop) (guard: North_Downstream_Gates_West_Actuator.Closing -> not North_Downstream_Gates_West_Actuator.Rest and not North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_endStopOpening) (guard: North_Downstream_Gates_West_Actuator.Opening -> North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Actuator_c_endStopClosing) (guard: North_Downstream_Gates_West_Actuator.Closing -> not North_Downstream_Gates_West_Actuator.Rest and not North_Downstream_Gates_West_Actuator.Opening) (assignments: North_Downstream_Gates_West_Actuator := North_Downstream_Gates_West_Actuator.Rest)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_closed_off) (guard: North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Closed) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_closed_on) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Intermediate) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Closed)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_open_on) (guard: North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Intermediate) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Open)
    Edge: (event: North_Downstream_Gates_West_Sensor_u_open_off) (guard: North_Downstream_Gates_West_Actuator.Closing and North_Downstream_Gates_West_Sensor.Open) (assignments: North_Downstream_Gates_West_Sensor := North_Downstream_Gates_West_Sensor.Intermediate)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed -> not North_Downstream_EnteringTLs_East_Actuator.RedGreen and (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen)) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen -> not North_Downstream_EnteringTLs_East_Actuator.RedRed and (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen)) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_r) (guard: North_Downstream_EnteringTLs_East_Actuator.Green -> (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Red) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Red)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rr) (guard: North_Downstream_EnteringTLs_East_Actuator.Red -> (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Green) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedRed)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_rg) (guard: North_Downstream_EnteringTLs_East_Actuator.Red -> (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Green) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.RedGreen)
    Edge: (event: North_Downstream_EnteringTLs_East_Actuator_c_g) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen -> North_Downstream_EnteringTLs_East_Actuator.RedGreen and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Open) or North_Downstream_EnteringTLs_East_Actuator.RedGreen and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Open)) (assignments: North_Downstream_EnteringTLs_East_Actuator := North_Downstream_EnteringTLs_East_Actuator.Green)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR1_u_on) (guard: (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.RedGreen) and North_Downstream_EnteringTLs_East_SensorR1.Off or North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.Off) (assignments: North_Downstream_EnteringTLs_East_SensorR1 := North_Downstream_EnteringTLs_East_SensorR1.On)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR1_u_off) (guard: North_Downstream_EnteringTLs_East_Actuator.Green and North_Downstream_EnteringTLs_East_SensorR1.On) (assignments: North_Downstream_EnteringTLs_East_SensorR1 := North_Downstream_EnteringTLs_East_SensorR1.Off)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorG_u_on) (guard: North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.RedGreen or North_Downstream_EnteringTLs_East_Actuator.Green)) (assignments: North_Downstream_EnteringTLs_East_SensorG := North_Downstream_EnteringTLs_East_SensorG.On)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorG_u_off) (guard: North_Downstream_EnteringTLs_East_SensorG.On and (North_Downstream_EnteringTLs_East_Actuator.RedRed or North_Downstream_EnteringTLs_East_Actuator.Red)) (assignments: North_Downstream_EnteringTLs_East_SensorG := North_Downstream_EnteringTLs_East_SensorG.Off)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR2_u_on) (guard: North_Downstream_EnteringTLs_East_Actuator.RedRed and North_Downstream_EnteringTLs_East_SensorR2.Off) (assignments: North_Downstream_EnteringTLs_East_SensorR2 := North_Downstream_EnteringTLs_East_SensorR2.On)
    Edge: (event: North_Downstream_EnteringTLs_East_SensorR2_u_off) (guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_EnteringTLs_East_SensorR2.On or (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and North_Downstream_EnteringTLs_East_SensorR2.On) (assignments: North_Downstream_EnteringTLs_East_SensorR2 := North_Downstream_EnteringTLs_East_SensorR2.Off)

Controlled system:                     exactly 288 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed))
Initial (controlled system):           North_Downstream_EnteringTLs_East_SensorG.Off and (North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On) and (North_Downstream_EnteringTLs_East_SensorR2.Off and (North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed))
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event North_Downstream_Gates_West_Actuator_c_open: guard: not North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Actuator.Opening -> true [assume not North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Actuator.Opening].
  Event North_Downstream_Gates_West_Actuator_c_close: guard: not North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Actuator.Opening -> true [assume not North_Downstream_Gates_West_Actuator.Closing and not North_Downstream_Gates_West_Actuator.Opening].
  Event North_Downstream_Gates_West_Actuator_c_emergencyStop: guard: not North_Downstream_Gates_West_Actuator.Rest -> true [assume not North_Downstream_Gates_West_Actuator.Rest].
  Event North_Downstream_Gates_West_Actuator_c_endStopOpening: guard: North_Downstream_Gates_West_Actuator.Opening -> true [assume North_Downstream_Gates_West_Actuator.Opening].
  Event North_Downstream_Gates_West_Actuator_c_endStopClosing: guard: not North_Downstream_Gates_West_Actuator.Rest and not North_Downstream_Gates_West_Actuator.Opening -> true [assume not North_Downstream_Gates_West_Actuator.Rest and not North_Downstream_Gates_West_Actuator.Opening].
  Event North_Downstream_EnteringTLs_East_Actuator_c_r: guard: not North_Downstream_EnteringTLs_East_Actuator.Red -> true [assume not North_Downstream_EnteringTLs_East_Actuator.Red].
  Event North_Downstream_EnteringTLs_East_Actuator_c_rr: guard: (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Green -> true [assume (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Green].
  Event North_Downstream_EnteringTLs_East_Actuator_c_rg: guard: (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Green -> true [assume (North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.Green) and not North_Downstream_EnteringTLs_East_Actuator.Green].
  Event North_Downstream_EnteringTLs_East_Actuator_c_g: guard: North_Downstream_EnteringTLs_East_Actuator.RedGreen and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Open) or North_Downstream_EnteringTLs_East_Actuator.RedGreen and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Open) -> true [assume North_Downstream_EnteringTLs_East_Actuator.RedGreen and (not North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Open) or North_Downstream_EnteringTLs_East_Actuator.RedGreen and (North_Downstream_Gates_West_Actuator.Opening and North_Downstream_Gates_West_Sensor.Open)].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_smallreq/subplant_96_sup.cif".
