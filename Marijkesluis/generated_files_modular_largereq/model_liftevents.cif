alg bool North_Upstream_Gates_Open = North_Upstream_Gates_East_Open and North_Upstream_Gates_West_Open;
alg bool North_Upstream_Gates_Closed = North_Upstream_Gates_East_Closed and North_Upstream_Gates_West_Closed;
alg bool North_Upstream_Gates_East_Moving = not North_Upstream_Gates_East_Actuator.Rest;
alg bool North_Upstream_Gates_East_Closed = North_Upstream_Gates_East_Actuator.Rest and North_Upstream_Gates_East_Sensor.Closed;
alg bool North_Upstream_Gates_East_Open = North_Upstream_Gates_East_Actuator.Rest and North_Upstream_Gates_East_Sensor.Open;
alg bool North_Upstream_Gates_West_Moving = not North_Upstream_Gates_West_Actuator.Rest;
alg bool North_Upstream_Gates_West_Closed = North_Upstream_Gates_West_Actuator.Rest and North_Upstream_Gates_West_Sensor.Closed;
alg bool North_Upstream_Gates_West_Open = North_Upstream_Gates_West_Actuator.Rest and North_Upstream_Gates_West_Sensor.Open;
alg bool North_Upstream_Paddles_Open = North_Upstream_Paddles_East_Open and North_Upstream_Paddles_West_Open;
alg bool North_Upstream_Paddles_Closed = North_Upstream_Paddles_East_Closed and North_Upstream_Paddles_West_Closed;
alg bool North_Upstream_Paddles_East_Moving = not North_Upstream_Paddles_East_Actuator.Rest;
alg bool North_Upstream_Paddles_East_Closed = North_Upstream_Paddles_East_Actuator.Rest and North_Upstream_Paddles_East_Sensor.Closed;
alg bool North_Upstream_Paddles_East_Open = North_Upstream_Paddles_East_Actuator.Rest and North_Upstream_Paddles_East_Sensor.Open;
alg bool North_Upstream_Paddles_West_Moving = not North_Upstream_Paddles_West_Actuator.Rest;
alg bool North_Upstream_Paddles_West_Closed = North_Upstream_Paddles_West_Actuator.Rest and North_Upstream_Paddles_West_Sensor.Closed;
alg bool North_Upstream_Paddles_West_Open = North_Upstream_Paddles_West_Actuator.Rest and North_Upstream_Paddles_West_Sensor.Open;
alg bool North_Upstream_EnteringTLs_RedRed = North_Upstream_EnteringTLs_East_RedRed and North_Upstream_EnteringTLs_West_RedRed;
alg bool North_Upstream_EnteringTLs_Red = North_Upstream_EnteringTLs_East_Red and North_Upstream_EnteringTLs_West_Red;
alg bool North_Upstream_EnteringTLs_RedGreen = North_Upstream_EnteringTLs_East_RedGreen and North_Upstream_EnteringTLs_West_RedGreen;
alg bool North_Upstream_EnteringTLs_Green = North_Upstream_EnteringTLs_East_Green and North_Upstream_EnteringTLs_West_Green;
alg bool North_Upstream_EnteringTLs_RedOrRedRed = North_Upstream_EnteringTLs_Red or North_Upstream_EnteringTLs_RedRed;
alg bool North_Upstream_EnteringTLs_East_RedRed = North_Upstream_EnteringTLs_East_Actuator.RedRed and North_Upstream_EnteringTLs_East_SensorR1.On and North_Upstream_EnteringTLs_East_SensorG.Off and North_Upstream_EnteringTLs_East_SensorR2.On;
alg bool North_Upstream_EnteringTLs_East_Red = North_Upstream_EnteringTLs_East_Actuator.Red and North_Upstream_EnteringTLs_East_SensorR1.On and North_Upstream_EnteringTLs_East_SensorG.Off and North_Upstream_EnteringTLs_East_SensorR2.Off;
alg bool North_Upstream_EnteringTLs_East_RedGreen = North_Upstream_EnteringTLs_East_Actuator.RedGreen and North_Upstream_EnteringTLs_East_SensorR1.On and North_Upstream_EnteringTLs_East_SensorG.On and North_Upstream_EnteringTLs_East_SensorR2.Off;
alg bool North_Upstream_EnteringTLs_East_Green = North_Upstream_EnteringTLs_East_Actuator.Green and North_Upstream_EnteringTLs_East_SensorR1.Off and North_Upstream_EnteringTLs_East_SensorG.On and North_Upstream_EnteringTLs_East_SensorR2.Off;
alg bool North_Upstream_EnteringTLs_West_RedRed = North_Upstream_EnteringTLs_West_Actuator.RedRed and North_Upstream_EnteringTLs_West_SensorR1.On and North_Upstream_EnteringTLs_West_SensorG.Off and North_Upstream_EnteringTLs_West_SensorR2.On;
alg bool North_Upstream_EnteringTLs_West_Red = North_Upstream_EnteringTLs_West_Actuator.Red and North_Upstream_EnteringTLs_West_SensorR1.On and North_Upstream_EnteringTLs_West_SensorG.Off and North_Upstream_EnteringTLs_West_SensorR2.Off;
alg bool North_Upstream_EnteringTLs_West_RedGreen = North_Upstream_EnteringTLs_West_Actuator.RedGreen and North_Upstream_EnteringTLs_West_SensorR1.On and North_Upstream_EnteringTLs_West_SensorG.On and North_Upstream_EnteringTLs_West_SensorR2.Off;
alg bool North_Upstream_EnteringTLs_West_Green = North_Upstream_EnteringTLs_West_Actuator.Green and North_Upstream_EnteringTLs_West_SensorR1.Off and North_Upstream_EnteringTLs_West_SensorG.On and North_Upstream_EnteringTLs_West_SensorR2.Off;
alg bool North_Upstream_LeavingTLs_Red = North_Upstream_LeavingTLs_East_Red and North_Upstream_LeavingTLs_West_Red;
alg bool North_Upstream_LeavingTLs_Green = North_Upstream_LeavingTLs_East_Green and North_Upstream_LeavingTLs_West_Green;
alg bool North_Upstream_LeavingTLs_East_Red = North_Upstream_LeavingTLs_East_Actuator.Red and North_Upstream_LeavingTLs_East_SensorR.On and North_Upstream_LeavingTLs_East_SensorG.Off;
alg bool North_Upstream_LeavingTLs_East_Green = North_Upstream_LeavingTLs_East_Actuator.Green and North_Upstream_LeavingTLs_East_SensorR.Off and North_Upstream_LeavingTLs_East_SensorG.On;
alg bool North_Upstream_LeavingTLs_West_Red = North_Upstream_LeavingTLs_West_Actuator.Red and North_Upstream_LeavingTLs_West_SensorR.On and North_Upstream_LeavingTLs_West_SensorG.Off;
alg bool North_Upstream_LeavingTLs_West_Green = North_Upstream_LeavingTLs_West_Actuator.Green and North_Upstream_LeavingTLs_West_SensorR.Off and North_Upstream_LeavingTLs_West_SensorG.On;
alg bool North_Downstream_Gates_Open = North_Downstream_Gates_East_Open and North_Downstream_Gates_West_Open;
alg bool North_Downstream_Gates_Closed = North_Downstream_Gates_East_Closed and North_Downstream_Gates_West_Closed;
alg bool North_Downstream_Gates_East_Moving = not North_Downstream_Gates_East_Actuator.Rest;
alg bool North_Downstream_Gates_East_Closed = North_Downstream_Gates_East_Actuator.Rest and North_Downstream_Gates_East_Sensor.Closed;
alg bool North_Downstream_Gates_East_Open = North_Downstream_Gates_East_Actuator.Rest and North_Downstream_Gates_East_Sensor.Open;
alg bool North_Downstream_Gates_West_Moving = not North_Downstream_Gates_West_Actuator.Rest;
alg bool North_Downstream_Gates_West_Closed = North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Closed;
alg bool North_Downstream_Gates_West_Open = North_Downstream_Gates_West_Actuator.Rest and North_Downstream_Gates_West_Sensor.Open;
alg bool North_Downstream_Paddles_Open = North_Downstream_Paddles_East_Open and North_Downstream_Paddles_West_Open;
alg bool North_Downstream_Paddles_Closed = North_Downstream_Paddles_East_Closed and North_Downstream_Paddles_West_Closed;
alg bool North_Downstream_Paddles_East_Moving = not North_Downstream_Paddles_East_Actuator.Rest;
alg bool North_Downstream_Paddles_East_Closed = North_Downstream_Paddles_East_Actuator.Rest and North_Downstream_Paddles_East_Sensor.Closed;
alg bool North_Downstream_Paddles_East_Open = North_Downstream_Paddles_East_Actuator.Rest and North_Downstream_Paddles_East_Sensor.Open;
alg bool North_Downstream_Paddles_West_Moving = not North_Downstream_Paddles_West_Actuator.Rest;
alg bool North_Downstream_Paddles_West_Closed = North_Downstream_Paddles_West_Actuator.Rest and North_Downstream_Paddles_West_Sensor.Closed;
alg bool North_Downstream_Paddles_West_Open = North_Downstream_Paddles_West_Actuator.Rest and North_Downstream_Paddles_West_Sensor.Open;
alg bool North_Downstream_EnteringTLs_RedRed = North_Downstream_EnteringTLs_East_RedRed and North_Downstream_EnteringTLs_West_RedRed;
alg bool North_Downstream_EnteringTLs_Red = North_Downstream_EnteringTLs_East_Red and North_Downstream_EnteringTLs_West_Red;
alg bool North_Downstream_EnteringTLs_RedGreen = North_Downstream_EnteringTLs_East_RedGreen and North_Downstream_EnteringTLs_West_RedGreen;
alg bool North_Downstream_EnteringTLs_Green = North_Downstream_EnteringTLs_East_Green and North_Downstream_EnteringTLs_West_Green;
alg bool North_Downstream_EnteringTLs_RedOrRedRed = North_Downstream_EnteringTLs_Red or North_Downstream_EnteringTLs_RedRed;
alg bool North_Downstream_EnteringTLs_East_RedRed = North_Downstream_EnteringTLs_East_Actuator.RedRed and North_Downstream_EnteringTLs_East_SensorR1.On and North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR2.On;
alg bool North_Downstream_EnteringTLs_East_Red = North_Downstream_EnteringTLs_East_Actuator.Red and North_Downstream_EnteringTLs_East_SensorR1.On and North_Downstream_EnteringTLs_East_SensorG.Off and North_Downstream_EnteringTLs_East_SensorR2.Off;
alg bool North_Downstream_EnteringTLs_East_RedGreen = North_Downstream_EnteringTLs_East_Actuator.RedGreen and North_Downstream_EnteringTLs_East_SensorR1.On and North_Downstream_EnteringTLs_East_SensorG.On and North_Downstream_EnteringTLs_East_SensorR2.Off;
alg bool North_Downstream_EnteringTLs_East_Green = North_Downstream_EnteringTLs_East_Actuator.Green and North_Downstream_EnteringTLs_East_SensorR1.Off and North_Downstream_EnteringTLs_East_SensorG.On and North_Downstream_EnteringTLs_East_SensorR2.Off;
alg bool North_Downstream_EnteringTLs_West_RedRed = North_Downstream_EnteringTLs_West_Actuator.RedRed and North_Downstream_EnteringTLs_West_SensorR1.On and North_Downstream_EnteringTLs_West_SensorG.Off and North_Downstream_EnteringTLs_West_SensorR2.On;
alg bool North_Downstream_EnteringTLs_West_Red = North_Downstream_EnteringTLs_West_Actuator.Red and North_Downstream_EnteringTLs_West_SensorR1.On and North_Downstream_EnteringTLs_West_SensorG.Off and North_Downstream_EnteringTLs_West_SensorR2.Off;
alg bool North_Downstream_EnteringTLs_West_RedGreen = North_Downstream_EnteringTLs_West_Actuator.RedGreen and North_Downstream_EnteringTLs_West_SensorR1.On and North_Downstream_EnteringTLs_West_SensorG.On and North_Downstream_EnteringTLs_West_SensorR2.Off;
alg bool North_Downstream_EnteringTLs_West_Green = North_Downstream_EnteringTLs_West_Actuator.Green and North_Downstream_EnteringTLs_West_SensorR1.Off and North_Downstream_EnteringTLs_West_SensorG.On and North_Downstream_EnteringTLs_West_SensorR2.Off;
alg bool North_Downstream_LeavingTLs_Red = North_Downstream_LeavingTLs_East_Red and North_Downstream_LeavingTLs_West_Red;
alg bool North_Downstream_LeavingTLs_Green = North_Downstream_LeavingTLs_East_Green and North_Downstream_LeavingTLs_West_Green;
alg bool North_Downstream_LeavingTLs_East_Red = North_Downstream_LeavingTLs_East_Actuator.Red and North_Downstream_LeavingTLs_East_SensorR.On and North_Downstream_LeavingTLs_East_SensorG.Off;
alg bool North_Downstream_LeavingTLs_East_Green = North_Downstream_LeavingTLs_East_Actuator.Green and North_Downstream_LeavingTLs_East_SensorR.Off and North_Downstream_LeavingTLs_East_SensorG.On;
alg bool North_Downstream_LeavingTLs_West_Red = North_Downstream_LeavingTLs_West_Actuator.Red and North_Downstream_LeavingTLs_West_SensorR.On and North_Downstream_LeavingTLs_West_SensorG.Off;
alg bool North_Downstream_LeavingTLs_West_Green = North_Downstream_LeavingTLs_West_Actuator.Green and North_Downstream_LeavingTLs_West_SensorR.Off and North_Downstream_LeavingTLs_West_SensorG.On;
alg bool South_Upstream_Gates_Open = South_Upstream_Gates_East_Open and South_Upstream_Gates_West_Open;
alg bool South_Upstream_Gates_Closed = South_Upstream_Gates_East_Closed and South_Upstream_Gates_West_Closed;
alg bool South_Upstream_Gates_East_Moving = not South_Upstream_Gates_East_Actuator.Rest;
alg bool South_Upstream_Gates_East_Closed = South_Upstream_Gates_East_Actuator.Rest and South_Upstream_Gates_East_Sensor.Closed;
alg bool South_Upstream_Gates_East_Open = South_Upstream_Gates_East_Actuator.Rest and South_Upstream_Gates_East_Sensor.Open;
alg bool South_Upstream_Gates_West_Moving = not South_Upstream_Gates_West_Actuator.Rest;
alg bool South_Upstream_Gates_West_Closed = South_Upstream_Gates_West_Actuator.Rest and South_Upstream_Gates_West_Sensor.Closed;
alg bool South_Upstream_Gates_West_Open = South_Upstream_Gates_West_Actuator.Rest and South_Upstream_Gates_West_Sensor.Open;
alg bool South_Upstream_Paddles_Open = South_Upstream_Paddles_East_Open and South_Upstream_Paddles_West_Open;
alg bool South_Upstream_Paddles_Closed = South_Upstream_Paddles_East_Closed and South_Upstream_Paddles_West_Closed;
alg bool South_Upstream_Paddles_East_Moving = not South_Upstream_Paddles_East_Actuator.Rest;
alg bool South_Upstream_Paddles_East_Closed = South_Upstream_Paddles_East_Actuator.Rest and South_Upstream_Paddles_East_Sensor.Closed;
alg bool South_Upstream_Paddles_East_Open = South_Upstream_Paddles_East_Actuator.Rest and South_Upstream_Paddles_East_Sensor.Open;
alg bool South_Upstream_Paddles_West_Moving = not South_Upstream_Paddles_West_Actuator.Rest;
alg bool South_Upstream_Paddles_West_Closed = South_Upstream_Paddles_West_Actuator.Rest and South_Upstream_Paddles_West_Sensor.Closed;
alg bool South_Upstream_Paddles_West_Open = South_Upstream_Paddles_West_Actuator.Rest and South_Upstream_Paddles_West_Sensor.Open;
alg bool South_Upstream_EnteringTLs_RedRed = South_Upstream_EnteringTLs_East_RedRed and South_Upstream_EnteringTLs_West_RedRed;
alg bool South_Upstream_EnteringTLs_Red = South_Upstream_EnteringTLs_East_Red and South_Upstream_EnteringTLs_West_Red;
alg bool South_Upstream_EnteringTLs_RedGreen = South_Upstream_EnteringTLs_East_RedGreen and South_Upstream_EnteringTLs_West_RedGreen;
alg bool South_Upstream_EnteringTLs_Green = South_Upstream_EnteringTLs_East_Green and South_Upstream_EnteringTLs_West_Green;
alg bool South_Upstream_EnteringTLs_RedOrRedRed = South_Upstream_EnteringTLs_Red or South_Upstream_EnteringTLs_RedRed;
alg bool South_Upstream_EnteringTLs_East_RedRed = South_Upstream_EnteringTLs_East_Actuator.RedRed and South_Upstream_EnteringTLs_East_SensorR1.On and South_Upstream_EnteringTLs_East_SensorG.Off and South_Upstream_EnteringTLs_East_SensorR2.On;
alg bool South_Upstream_EnteringTLs_East_Red = South_Upstream_EnteringTLs_East_Actuator.Red and South_Upstream_EnteringTLs_East_SensorR1.On and South_Upstream_EnteringTLs_East_SensorG.Off and South_Upstream_EnteringTLs_East_SensorR2.Off;
alg bool South_Upstream_EnteringTLs_East_RedGreen = South_Upstream_EnteringTLs_East_Actuator.RedGreen and South_Upstream_EnteringTLs_East_SensorR1.On and South_Upstream_EnteringTLs_East_SensorG.On and South_Upstream_EnteringTLs_East_SensorR2.Off;
alg bool South_Upstream_EnteringTLs_East_Green = South_Upstream_EnteringTLs_East_Actuator.Green and South_Upstream_EnteringTLs_East_SensorR1.Off and South_Upstream_EnteringTLs_East_SensorG.On and South_Upstream_EnteringTLs_East_SensorR2.Off;
alg bool South_Upstream_EnteringTLs_West_RedRed = South_Upstream_EnteringTLs_West_Actuator.RedRed and South_Upstream_EnteringTLs_West_SensorR1.On and South_Upstream_EnteringTLs_West_SensorG.Off and South_Upstream_EnteringTLs_West_SensorR2.On;
alg bool South_Upstream_EnteringTLs_West_Red = South_Upstream_EnteringTLs_West_Actuator.Red and South_Upstream_EnteringTLs_West_SensorR1.On and South_Upstream_EnteringTLs_West_SensorG.Off and South_Upstream_EnteringTLs_West_SensorR2.Off;
alg bool South_Upstream_EnteringTLs_West_RedGreen = South_Upstream_EnteringTLs_West_Actuator.RedGreen and South_Upstream_EnteringTLs_West_SensorR1.On and South_Upstream_EnteringTLs_West_SensorG.On and South_Upstream_EnteringTLs_West_SensorR2.Off;
alg bool South_Upstream_EnteringTLs_West_Green = South_Upstream_EnteringTLs_West_Actuator.Green and South_Upstream_EnteringTLs_West_SensorR1.Off and South_Upstream_EnteringTLs_West_SensorG.On and South_Upstream_EnteringTLs_West_SensorR2.Off;
alg bool South_Upstream_LeavingTLs_Red = South_Upstream_LeavingTLs_East_Red and South_Upstream_LeavingTLs_West_Red;
alg bool South_Upstream_LeavingTLs_Green = South_Upstream_LeavingTLs_East_Green and South_Upstream_LeavingTLs_West_Green;
alg bool South_Upstream_LeavingTLs_East_Red = South_Upstream_LeavingTLs_East_Actuator.Red and South_Upstream_LeavingTLs_East_SensorR.On and South_Upstream_LeavingTLs_East_SensorG.Off;
alg bool South_Upstream_LeavingTLs_East_Green = South_Upstream_LeavingTLs_East_Actuator.Green and South_Upstream_LeavingTLs_East_SensorR.Off and South_Upstream_LeavingTLs_East_SensorG.On;
alg bool South_Upstream_LeavingTLs_West_Red = South_Upstream_LeavingTLs_West_Actuator.Red and South_Upstream_LeavingTLs_West_SensorR.On and South_Upstream_LeavingTLs_West_SensorG.Off;
alg bool South_Upstream_LeavingTLs_West_Green = South_Upstream_LeavingTLs_West_Actuator.Green and South_Upstream_LeavingTLs_West_SensorR.Off and South_Upstream_LeavingTLs_West_SensorG.On;
alg bool South_Downstream_Gates_Open = South_Downstream_Gates_East_Open and South_Downstream_Gates_West_Open;
alg bool South_Downstream_Gates_Closed = South_Downstream_Gates_East_Closed and South_Downstream_Gates_West_Closed;
alg bool South_Downstream_Gates_East_Moving = not South_Downstream_Gates_East_Actuator.Rest;
alg bool South_Downstream_Gates_East_Closed = South_Downstream_Gates_East_Actuator.Rest and South_Downstream_Gates_East_Sensor.Closed;
alg bool South_Downstream_Gates_East_Open = South_Downstream_Gates_East_Actuator.Rest and South_Downstream_Gates_East_Sensor.Open;
alg bool South_Downstream_Gates_West_Moving = not South_Downstream_Gates_West_Actuator.Rest;
alg bool South_Downstream_Gates_West_Closed = South_Downstream_Gates_West_Actuator.Rest and South_Downstream_Gates_West_Sensor.Closed;
alg bool South_Downstream_Gates_West_Open = South_Downstream_Gates_West_Actuator.Rest and South_Downstream_Gates_West_Sensor.Open;
alg bool South_Downstream_Paddles_Open = South_Downstream_Paddles_East_Open and South_Downstream_Paddles_West_Open;
alg bool South_Downstream_Paddles_Closed = South_Downstream_Paddles_East_Closed and South_Downstream_Paddles_West_Closed;
alg bool South_Downstream_Paddles_East_Moving = not South_Downstream_Paddles_East_Actuator.Rest;
alg bool South_Downstream_Paddles_East_Closed = South_Downstream_Paddles_East_Actuator.Rest and South_Downstream_Paddles_East_Sensor.Closed;
alg bool South_Downstream_Paddles_East_Open = South_Downstream_Paddles_East_Actuator.Rest and South_Downstream_Paddles_East_Sensor.Open;
alg bool South_Downstream_Paddles_West_Moving = not South_Downstream_Paddles_West_Actuator.Rest;
alg bool South_Downstream_Paddles_West_Closed = South_Downstream_Paddles_West_Actuator.Rest and South_Downstream_Paddles_West_Sensor.Closed;
alg bool South_Downstream_Paddles_West_Open = South_Downstream_Paddles_West_Actuator.Rest and South_Downstream_Paddles_West_Sensor.Open;
alg bool South_Downstream_EnteringTLs_RedRed = South_Downstream_EnteringTLs_East_RedRed and South_Downstream_EnteringTLs_West_RedRed;
alg bool South_Downstream_EnteringTLs_Red = South_Downstream_EnteringTLs_East_Red and South_Downstream_EnteringTLs_West_Red;
alg bool South_Downstream_EnteringTLs_RedGreen = South_Downstream_EnteringTLs_East_RedGreen and South_Downstream_EnteringTLs_West_RedGreen;
alg bool South_Downstream_EnteringTLs_Green = South_Downstream_EnteringTLs_East_Green and South_Downstream_EnteringTLs_West_Green;
alg bool South_Downstream_EnteringTLs_RedOrRedRed = South_Downstream_EnteringTLs_Red or South_Downstream_EnteringTLs_RedRed;
alg bool South_Downstream_EnteringTLs_East_RedRed = South_Downstream_EnteringTLs_East_Actuator.RedRed and South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_EnteringTLs_East_SensorG.Off and South_Downstream_EnteringTLs_East_SensorR2.On;
alg bool South_Downstream_EnteringTLs_East_Red = South_Downstream_EnteringTLs_East_Actuator.Red and South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_EnteringTLs_East_SensorG.Off and South_Downstream_EnteringTLs_East_SensorR2.Off;
alg bool South_Downstream_EnteringTLs_East_RedGreen = South_Downstream_EnteringTLs_East_Actuator.RedGreen and South_Downstream_EnteringTLs_East_SensorR1.On and South_Downstream_EnteringTLs_East_SensorG.On and South_Downstream_EnteringTLs_East_SensorR2.Off;
alg bool South_Downstream_EnteringTLs_East_Green = South_Downstream_EnteringTLs_East_Actuator.Green and South_Downstream_EnteringTLs_East_SensorR1.Off and South_Downstream_EnteringTLs_East_SensorG.On and South_Downstream_EnteringTLs_East_SensorR2.Off;
alg bool South_Downstream_EnteringTLs_West_RedRed = South_Downstream_EnteringTLs_West_Actuator.RedRed and South_Downstream_EnteringTLs_West_SensorR1.On and South_Downstream_EnteringTLs_West_SensorG.Off and South_Downstream_EnteringTLs_West_SensorR2.On;
alg bool South_Downstream_EnteringTLs_West_Red = South_Downstream_EnteringTLs_West_Actuator.Red and South_Downstream_EnteringTLs_West_SensorR1.On and South_Downstream_EnteringTLs_West_SensorG.Off and South_Downstream_EnteringTLs_West_SensorR2.Off;
alg bool South_Downstream_EnteringTLs_West_RedGreen = South_Downstream_EnteringTLs_West_Actuator.RedGreen and South_Downstream_EnteringTLs_West_SensorR1.On and South_Downstream_EnteringTLs_West_SensorG.On and South_Downstream_EnteringTLs_West_SensorR2.Off;
alg bool South_Downstream_EnteringTLs_West_Green = South_Downstream_EnteringTLs_West_Actuator.Green and South_Downstream_EnteringTLs_West_SensorR1.Off and South_Downstream_EnteringTLs_West_SensorG.On and South_Downstream_EnteringTLs_West_SensorR2.Off;
alg bool South_Downstream_LeavingTLs_Red = South_Downstream_LeavingTLs_East_Red and South_Downstream_LeavingTLs_West_Red;
alg bool South_Downstream_LeavingTLs_Green = South_Downstream_LeavingTLs_East_Green and South_Downstream_LeavingTLs_West_Green;
alg bool South_Downstream_LeavingTLs_East_Red = South_Downstream_LeavingTLs_East_Actuator.Red and South_Downstream_LeavingTLs_East_SensorR.On and South_Downstream_LeavingTLs_East_SensorG.Off;
alg bool South_Downstream_LeavingTLs_East_Green = South_Downstream_LeavingTLs_East_Actuator.Green and South_Downstream_LeavingTLs_East_SensorR.Off and South_Downstream_LeavingTLs_East_SensorG.On;
alg bool South_Downstream_LeavingTLs_West_Red = South_Downstream_LeavingTLs_West_Actuator.Red and South_Downstream_LeavingTLs_West_SensorR.On and South_Downstream_LeavingTLs_West_SensorG.Off;
alg bool South_Downstream_LeavingTLs_West_Green = South_Downstream_LeavingTLs_West_Actuator.Green and South_Downstream_LeavingTLs_West_SensorR.Off and South_Downstream_LeavingTLs_West_SensorG.On;
alg bool Barrier_Downstream_TLs_Red = Barrier_Downstream_TLs_East_Red and Barrier_Downstream_TLs_West_Red;
alg bool Barrier_Downstream_TLs_East_Red = Barrier_Downstream_TLs_East_Actuator.Red and Barrier_Downstream_TLs_East_SensorR.On and Barrier_Downstream_TLs_East_SensorG.Off;
alg bool Barrier_Downstream_TLs_East_Green = Barrier_Downstream_TLs_East_Actuator.Green and Barrier_Downstream_TLs_East_SensorR.Off and Barrier_Downstream_TLs_East_SensorG.On;
alg bool Barrier_Downstream_TLs_West_Red = Barrier_Downstream_TLs_West_Actuator.Red and Barrier_Downstream_TLs_West_SensorR.On and Barrier_Downstream_TLs_West_SensorG.Off;
alg bool Barrier_Downstream_TLs_West_Green = Barrier_Downstream_TLs_West_Actuator.Green and Barrier_Downstream_TLs_West_SensorR.Off and Barrier_Downstream_TLs_West_SensorG.On;
alg bool Barrier_Upstream_TLs_Red = Barrier_Upstream_TLs_East_Red and Barrier_Upstream_TLs_West_Red;
alg bool Barrier_Upstream_TLs_East_Red = Barrier_Upstream_TLs_East_Actuator.Red and Barrier_Upstream_TLs_East_SensorR.On and Barrier_Upstream_TLs_East_SensorG.Off;
alg bool Barrier_Upstream_TLs_East_Green = Barrier_Upstream_TLs_East_Actuator.Green and Barrier_Upstream_TLs_East_SensorR.Off and Barrier_Upstream_TLs_East_SensorG.On;
alg bool Barrier_Upstream_TLs_West_Red = Barrier_Upstream_TLs_West_Actuator.Red and Barrier_Upstream_TLs_West_SensorR.On and Barrier_Upstream_TLs_West_SensorG.Off;
alg bool Barrier_Upstream_TLs_West_Green = Barrier_Upstream_TLs_West_Actuator.Green and Barrier_Upstream_TLs_West_SensorR.Off and Barrier_Upstream_TLs_West_SensorG.On;
alg bool Barrier_Barrier_Moving = not Barrier_Barrier_Actuator.Rest;
alg bool Barrier_Barrier_Closed = Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed;
alg bool Barrier_Barrier_Open = Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Open;
controllable North_Upstream_Gates_East_Actuator_c_open;
controllable North_Upstream_Gates_East_Actuator_c_close;
controllable North_Upstream_Gates_East_Actuator_c_emergencyStop;
controllable North_Upstream_Gates_East_Actuator_c_endStopClosing;
controllable North_Upstream_Gates_East_Actuator_c_endStopOpening;
uncontrollable North_Upstream_Gates_East_Sensor_u_open_on;
uncontrollable North_Upstream_Gates_East_Sensor_u_open_off;
uncontrollable North_Upstream_Gates_East_Sensor_u_closed_on;
uncontrollable North_Upstream_Gates_East_Sensor_u_closed_off;
controllable North_Upstream_Gates_West_Actuator_c_open;
controllable North_Upstream_Gates_West_Actuator_c_close;
controllable North_Upstream_Gates_West_Actuator_c_emergencyStop;
controllable North_Upstream_Gates_West_Actuator_c_endStopClosing;
controllable North_Upstream_Gates_West_Actuator_c_endStopOpening;
uncontrollable North_Upstream_Gates_West_Sensor_u_open_on;
uncontrollable North_Upstream_Gates_West_Sensor_u_open_off;
uncontrollable North_Upstream_Gates_West_Sensor_u_closed_on;
uncontrollable North_Upstream_Gates_West_Sensor_u_closed_off;
controllable North_Upstream_Paddles_East_Actuator_c_open;
controllable North_Upstream_Paddles_East_Actuator_c_close;
controllable North_Upstream_Paddles_East_Actuator_c_emergencyStop;
controllable North_Upstream_Paddles_East_Actuator_c_endStopClosing;
controllable North_Upstream_Paddles_East_Actuator_c_endStopOpening;
uncontrollable North_Upstream_Paddles_East_Sensor_u_open_on;
uncontrollable North_Upstream_Paddles_East_Sensor_u_open_off;
uncontrollable North_Upstream_Paddles_East_Sensor_u_closed_on;
uncontrollable North_Upstream_Paddles_East_Sensor_u_closed_off;
controllable North_Upstream_Paddles_West_Actuator_c_open;
controllable North_Upstream_Paddles_West_Actuator_c_close;
controllable North_Upstream_Paddles_West_Actuator_c_emergencyStop;
controllable North_Upstream_Paddles_West_Actuator_c_endStopClosing;
controllable North_Upstream_Paddles_West_Actuator_c_endStopOpening;
uncontrollable North_Upstream_Paddles_West_Sensor_u_open_on;
uncontrollable North_Upstream_Paddles_West_Sensor_u_open_off;
uncontrollable North_Upstream_Paddles_West_Sensor_u_closed_on;
uncontrollable North_Upstream_Paddles_West_Sensor_u_closed_off;
controllable North_Upstream_EnteringTLs_East_Actuator_c_r;
controllable North_Upstream_EnteringTLs_East_Actuator_c_rr;
controllable North_Upstream_EnteringTLs_East_Actuator_c_rg;
controllable North_Upstream_EnteringTLs_East_Actuator_c_g;
uncontrollable North_Upstream_EnteringTLs_East_SensorR1_u_on;
uncontrollable North_Upstream_EnteringTLs_East_SensorR1_u_off;
uncontrollable North_Upstream_EnteringTLs_East_SensorG_u_on;
uncontrollable North_Upstream_EnteringTLs_East_SensorG_u_off;
uncontrollable North_Upstream_EnteringTLs_East_SensorR2_u_on;
uncontrollable North_Upstream_EnteringTLs_East_SensorR2_u_off;
controllable North_Upstream_EnteringTLs_West_Actuator_c_r;
controllable North_Upstream_EnteringTLs_West_Actuator_c_rr;
controllable North_Upstream_EnteringTLs_West_Actuator_c_rg;
controllable North_Upstream_EnteringTLs_West_Actuator_c_g;
uncontrollable North_Upstream_EnteringTLs_West_SensorR1_u_on;
uncontrollable North_Upstream_EnteringTLs_West_SensorR1_u_off;
uncontrollable North_Upstream_EnteringTLs_West_SensorG_u_on;
uncontrollable North_Upstream_EnteringTLs_West_SensorG_u_off;
uncontrollable North_Upstream_EnteringTLs_West_SensorR2_u_on;
uncontrollable North_Upstream_EnteringTLs_West_SensorR2_u_off;
controllable North_Upstream_LeavingTLs_East_Actuator_c_r;
controllable North_Upstream_LeavingTLs_East_Actuator_c_g;
uncontrollable North_Upstream_LeavingTLs_East_SensorR_u_on;
uncontrollable North_Upstream_LeavingTLs_East_SensorR_u_off;
uncontrollable North_Upstream_LeavingTLs_East_SensorG_u_on;
uncontrollable North_Upstream_LeavingTLs_East_SensorG_u_off;
controllable North_Upstream_LeavingTLs_West_Actuator_c_r;
controllable North_Upstream_LeavingTLs_West_Actuator_c_g;
uncontrollable North_Upstream_LeavingTLs_West_SensorR_u_on;
uncontrollable North_Upstream_LeavingTLs_West_SensorR_u_off;
uncontrollable North_Upstream_LeavingTLs_West_SensorG_u_on;
uncontrollable North_Upstream_LeavingTLs_West_SensorG_u_off;
uncontrollable North_Upstream_EqualWaterSensor_u_on;
uncontrollable North_Upstream_EqualWaterSensor_u_off;
controllable North_Downstream_Gates_East_Actuator_c_open;
controllable North_Downstream_Gates_East_Actuator_c_close;
controllable North_Downstream_Gates_East_Actuator_c_emergencyStop;
controllable North_Downstream_Gates_East_Actuator_c_endStopClosing;
controllable North_Downstream_Gates_East_Actuator_c_endStopOpening;
uncontrollable North_Downstream_Gates_East_Sensor_u_open_on;
uncontrollable North_Downstream_Gates_East_Sensor_u_open_off;
uncontrollable North_Downstream_Gates_East_Sensor_u_closed_on;
uncontrollable North_Downstream_Gates_East_Sensor_u_closed_off;
controllable North_Downstream_Gates_West_Actuator_c_open;
controllable North_Downstream_Gates_West_Actuator_c_close;
controllable North_Downstream_Gates_West_Actuator_c_emergencyStop;
controllable North_Downstream_Gates_West_Actuator_c_endStopClosing;
controllable North_Downstream_Gates_West_Actuator_c_endStopOpening;
uncontrollable North_Downstream_Gates_West_Sensor_u_open_on;
uncontrollable North_Downstream_Gates_West_Sensor_u_open_off;
uncontrollable North_Downstream_Gates_West_Sensor_u_closed_on;
uncontrollable North_Downstream_Gates_West_Sensor_u_closed_off;
controllable North_Downstream_Paddles_East_Actuator_c_open;
controllable North_Downstream_Paddles_East_Actuator_c_close;
controllable North_Downstream_Paddles_East_Actuator_c_emergencyStop;
controllable North_Downstream_Paddles_East_Actuator_c_endStopClosing;
controllable North_Downstream_Paddles_East_Actuator_c_endStopOpening;
uncontrollable North_Downstream_Paddles_East_Sensor_u_open_on;
uncontrollable North_Downstream_Paddles_East_Sensor_u_open_off;
uncontrollable North_Downstream_Paddles_East_Sensor_u_closed_on;
uncontrollable North_Downstream_Paddles_East_Sensor_u_closed_off;
controllable North_Downstream_Paddles_West_Actuator_c_open;
controllable North_Downstream_Paddles_West_Actuator_c_close;
controllable North_Downstream_Paddles_West_Actuator_c_emergencyStop;
controllable North_Downstream_Paddles_West_Actuator_c_endStopClosing;
controllable North_Downstream_Paddles_West_Actuator_c_endStopOpening;
uncontrollable North_Downstream_Paddles_West_Sensor_u_open_on;
uncontrollable North_Downstream_Paddles_West_Sensor_u_open_off;
uncontrollable North_Downstream_Paddles_West_Sensor_u_closed_on;
uncontrollable North_Downstream_Paddles_West_Sensor_u_closed_off;
controllable North_Downstream_EnteringTLs_East_Actuator_c_r;
controllable North_Downstream_EnteringTLs_East_Actuator_c_rr;
controllable North_Downstream_EnteringTLs_East_Actuator_c_rg;
controllable North_Downstream_EnteringTLs_East_Actuator_c_g;
uncontrollable North_Downstream_EnteringTLs_East_SensorR1_u_on;
uncontrollable North_Downstream_EnteringTLs_East_SensorR1_u_off;
uncontrollable North_Downstream_EnteringTLs_East_SensorG_u_on;
uncontrollable North_Downstream_EnteringTLs_East_SensorG_u_off;
uncontrollable North_Downstream_EnteringTLs_East_SensorR2_u_on;
uncontrollable North_Downstream_EnteringTLs_East_SensorR2_u_off;
controllable North_Downstream_EnteringTLs_West_Actuator_c_r;
controllable North_Downstream_EnteringTLs_West_Actuator_c_rr;
controllable North_Downstream_EnteringTLs_West_Actuator_c_rg;
controllable North_Downstream_EnteringTLs_West_Actuator_c_g;
uncontrollable North_Downstream_EnteringTLs_West_SensorR1_u_on;
uncontrollable North_Downstream_EnteringTLs_West_SensorR1_u_off;
uncontrollable North_Downstream_EnteringTLs_West_SensorG_u_on;
uncontrollable North_Downstream_EnteringTLs_West_SensorG_u_off;
uncontrollable North_Downstream_EnteringTLs_West_SensorR2_u_on;
uncontrollable North_Downstream_EnteringTLs_West_SensorR2_u_off;
controllable North_Downstream_LeavingTLs_East_Actuator_c_r;
controllable North_Downstream_LeavingTLs_East_Actuator_c_g;
uncontrollable North_Downstream_LeavingTLs_East_SensorR_u_on;
uncontrollable North_Downstream_LeavingTLs_East_SensorR_u_off;
uncontrollable North_Downstream_LeavingTLs_East_SensorG_u_on;
uncontrollable North_Downstream_LeavingTLs_East_SensorG_u_off;
controllable North_Downstream_LeavingTLs_West_Actuator_c_r;
controllable North_Downstream_LeavingTLs_West_Actuator_c_g;
uncontrollable North_Downstream_LeavingTLs_West_SensorR_u_on;
uncontrollable North_Downstream_LeavingTLs_West_SensorR_u_off;
uncontrollable North_Downstream_LeavingTLs_West_SensorG_u_on;
uncontrollable North_Downstream_LeavingTLs_West_SensorG_u_off;
uncontrollable North_Downstream_EqualWaterSensor_u_on;
uncontrollable North_Downstream_EqualWaterSensor_u_off;
uncontrollable North_EmergencyStop_u_activate;
uncontrollable North_EmergencyStop_u_deactivate;
uncontrollable North_Commands_Deactivate;
uncontrollable North_Commands_DownstreamGateOpen_act;
uncontrollable North_Commands_DownstreamGateClose_act;
uncontrollable North_Commands_DownstreamGateStop_act;
uncontrollable North_Commands_DownstreamPaddleOpen_act;
uncontrollable North_Commands_DownstreamPaddleClose_act;
uncontrollable North_Commands_DownstreamPaddleStop_act;
uncontrollable North_Commands_DownstreamEnteringTLRedRed_act;
uncontrollable North_Commands_DownstreamEnteringTLRed_act;
uncontrollable North_Commands_DownstreamEnteringTLRedGreen_act;
uncontrollable North_Commands_DownstreamEnteringTLGreen_act;
uncontrollable North_Commands_DownstreamLeavingTLRed_act;
uncontrollable North_Commands_DownstreamLeavingTLGreen_act;
uncontrollable North_Commands_UpstreamGateOpen_act;
uncontrollable North_Commands_UpstreamGateClose_act;
uncontrollable North_Commands_UpstreamGateStop_act;
uncontrollable North_Commands_UpstreamPaddleOpen_act;
uncontrollable North_Commands_UpstreamPaddleClose_act;
uncontrollable North_Commands_UpstreamPaddleStop_act;
uncontrollable North_Commands_UpstreamEnteringTLRedRed_act;
uncontrollable North_Commands_UpstreamEnteringTLRed_act;
uncontrollable North_Commands_UpstreamEnteringTLRedGreen_act;
uncontrollable North_Commands_UpstreamEnteringTLGreen_act;
uncontrollable North_Commands_UpstreamLeavingTLRed_act;
uncontrollable North_Commands_UpstreamLeavingTLGreen_act;
controllable South_Upstream_Gates_East_Actuator_c_open;
controllable South_Upstream_Gates_East_Actuator_c_close;
controllable South_Upstream_Gates_East_Actuator_c_emergencyStop;
controllable South_Upstream_Gates_East_Actuator_c_endStopClosing;
controllable South_Upstream_Gates_East_Actuator_c_endStopOpening;
uncontrollable South_Upstream_Gates_East_Sensor_u_open_on;
uncontrollable South_Upstream_Gates_East_Sensor_u_open_off;
uncontrollable South_Upstream_Gates_East_Sensor_u_closed_on;
uncontrollable South_Upstream_Gates_East_Sensor_u_closed_off;
controllable South_Upstream_Gates_West_Actuator_c_open;
controllable South_Upstream_Gates_West_Actuator_c_close;
controllable South_Upstream_Gates_West_Actuator_c_emergencyStop;
controllable South_Upstream_Gates_West_Actuator_c_endStopClosing;
controllable South_Upstream_Gates_West_Actuator_c_endStopOpening;
uncontrollable South_Upstream_Gates_West_Sensor_u_open_on;
uncontrollable South_Upstream_Gates_West_Sensor_u_open_off;
uncontrollable South_Upstream_Gates_West_Sensor_u_closed_on;
uncontrollable South_Upstream_Gates_West_Sensor_u_closed_off;
controllable South_Upstream_Paddles_East_Actuator_c_open;
controllable South_Upstream_Paddles_East_Actuator_c_close;
controllable South_Upstream_Paddles_East_Actuator_c_emergencyStop;
controllable South_Upstream_Paddles_East_Actuator_c_endStopClosing;
controllable South_Upstream_Paddles_East_Actuator_c_endStopOpening;
uncontrollable South_Upstream_Paddles_East_Sensor_u_open_on;
uncontrollable South_Upstream_Paddles_East_Sensor_u_open_off;
uncontrollable South_Upstream_Paddles_East_Sensor_u_closed_on;
uncontrollable South_Upstream_Paddles_East_Sensor_u_closed_off;
controllable South_Upstream_Paddles_West_Actuator_c_open;
controllable South_Upstream_Paddles_West_Actuator_c_close;
controllable South_Upstream_Paddles_West_Actuator_c_emergencyStop;
controllable South_Upstream_Paddles_West_Actuator_c_endStopClosing;
controllable South_Upstream_Paddles_West_Actuator_c_endStopOpening;
uncontrollable South_Upstream_Paddles_West_Sensor_u_open_on;
uncontrollable South_Upstream_Paddles_West_Sensor_u_open_off;
uncontrollable South_Upstream_Paddles_West_Sensor_u_closed_on;
uncontrollable South_Upstream_Paddles_West_Sensor_u_closed_off;
controllable South_Upstream_EnteringTLs_East_Actuator_c_r;
controllable South_Upstream_EnteringTLs_East_Actuator_c_rr;
controllable South_Upstream_EnteringTLs_East_Actuator_c_rg;
controllable South_Upstream_EnteringTLs_East_Actuator_c_g;
uncontrollable South_Upstream_EnteringTLs_East_SensorR1_u_on;
uncontrollable South_Upstream_EnteringTLs_East_SensorR1_u_off;
uncontrollable South_Upstream_EnteringTLs_East_SensorG_u_on;
uncontrollable South_Upstream_EnteringTLs_East_SensorG_u_off;
uncontrollable South_Upstream_EnteringTLs_East_SensorR2_u_on;
uncontrollable South_Upstream_EnteringTLs_East_SensorR2_u_off;
controllable South_Upstream_EnteringTLs_West_Actuator_c_r;
controllable South_Upstream_EnteringTLs_West_Actuator_c_rr;
controllable South_Upstream_EnteringTLs_West_Actuator_c_rg;
controllable South_Upstream_EnteringTLs_West_Actuator_c_g;
uncontrollable South_Upstream_EnteringTLs_West_SensorR1_u_on;
uncontrollable South_Upstream_EnteringTLs_West_SensorR1_u_off;
uncontrollable South_Upstream_EnteringTLs_West_SensorG_u_on;
uncontrollable South_Upstream_EnteringTLs_West_SensorG_u_off;
uncontrollable South_Upstream_EnteringTLs_West_SensorR2_u_on;
uncontrollable South_Upstream_EnteringTLs_West_SensorR2_u_off;
controllable South_Upstream_LeavingTLs_East_Actuator_c_r;
controllable South_Upstream_LeavingTLs_East_Actuator_c_g;
uncontrollable South_Upstream_LeavingTLs_East_SensorR_u_on;
uncontrollable South_Upstream_LeavingTLs_East_SensorR_u_off;
uncontrollable South_Upstream_LeavingTLs_East_SensorG_u_on;
uncontrollable South_Upstream_LeavingTLs_East_SensorG_u_off;
controllable South_Upstream_LeavingTLs_West_Actuator_c_r;
controllable South_Upstream_LeavingTLs_West_Actuator_c_g;
uncontrollable South_Upstream_LeavingTLs_West_SensorR_u_on;
uncontrollable South_Upstream_LeavingTLs_West_SensorR_u_off;
uncontrollable South_Upstream_LeavingTLs_West_SensorG_u_on;
uncontrollable South_Upstream_LeavingTLs_West_SensorG_u_off;
uncontrollable South_Upstream_EqualWaterSensor_u_on;
uncontrollable South_Upstream_EqualWaterSensor_u_off;
controllable South_Downstream_Gates_East_Actuator_c_open;
controllable South_Downstream_Gates_East_Actuator_c_close;
controllable South_Downstream_Gates_East_Actuator_c_emergencyStop;
controllable South_Downstream_Gates_East_Actuator_c_endStopClosing;
controllable South_Downstream_Gates_East_Actuator_c_endStopOpening;
uncontrollable South_Downstream_Gates_East_Sensor_u_open_on;
uncontrollable South_Downstream_Gates_East_Sensor_u_open_off;
uncontrollable South_Downstream_Gates_East_Sensor_u_closed_on;
uncontrollable South_Downstream_Gates_East_Sensor_u_closed_off;
controllable South_Downstream_Gates_West_Actuator_c_open;
controllable South_Downstream_Gates_West_Actuator_c_close;
controllable South_Downstream_Gates_West_Actuator_c_emergencyStop;
controllable South_Downstream_Gates_West_Actuator_c_endStopClosing;
controllable South_Downstream_Gates_West_Actuator_c_endStopOpening;
uncontrollable South_Downstream_Gates_West_Sensor_u_open_on;
uncontrollable South_Downstream_Gates_West_Sensor_u_open_off;
uncontrollable South_Downstream_Gates_West_Sensor_u_closed_on;
uncontrollable South_Downstream_Gates_West_Sensor_u_closed_off;
controllable South_Downstream_Paddles_East_Actuator_c_open;
controllable South_Downstream_Paddles_East_Actuator_c_close;
controllable South_Downstream_Paddles_East_Actuator_c_emergencyStop;
controllable South_Downstream_Paddles_East_Actuator_c_endStopClosing;
controllable South_Downstream_Paddles_East_Actuator_c_endStopOpening;
uncontrollable South_Downstream_Paddles_East_Sensor_u_open_on;
uncontrollable South_Downstream_Paddles_East_Sensor_u_open_off;
uncontrollable South_Downstream_Paddles_East_Sensor_u_closed_on;
uncontrollable South_Downstream_Paddles_East_Sensor_u_closed_off;
controllable South_Downstream_Paddles_West_Actuator_c_open;
controllable South_Downstream_Paddles_West_Actuator_c_close;
controllable South_Downstream_Paddles_West_Actuator_c_emergencyStop;
controllable South_Downstream_Paddles_West_Actuator_c_endStopClosing;
controllable South_Downstream_Paddles_West_Actuator_c_endStopOpening;
uncontrollable South_Downstream_Paddles_West_Sensor_u_open_on;
uncontrollable South_Downstream_Paddles_West_Sensor_u_open_off;
uncontrollable South_Downstream_Paddles_West_Sensor_u_closed_on;
uncontrollable South_Downstream_Paddles_West_Sensor_u_closed_off;
controllable South_Downstream_EnteringTLs_East_Actuator_c_r;
controllable South_Downstream_EnteringTLs_East_Actuator_c_rr;
controllable South_Downstream_EnteringTLs_East_Actuator_c_rg;
controllable South_Downstream_EnteringTLs_East_Actuator_c_g;
uncontrollable South_Downstream_EnteringTLs_East_SensorR1_u_on;
uncontrollable South_Downstream_EnteringTLs_East_SensorR1_u_off;
uncontrollable South_Downstream_EnteringTLs_East_SensorG_u_on;
uncontrollable South_Downstream_EnteringTLs_East_SensorG_u_off;
uncontrollable South_Downstream_EnteringTLs_East_SensorR2_u_on;
uncontrollable South_Downstream_EnteringTLs_East_SensorR2_u_off;
controllable South_Downstream_EnteringTLs_West_Actuator_c_r;
controllable South_Downstream_EnteringTLs_West_Actuator_c_rr;
controllable South_Downstream_EnteringTLs_West_Actuator_c_rg;
controllable South_Downstream_EnteringTLs_West_Actuator_c_g;
uncontrollable South_Downstream_EnteringTLs_West_SensorR1_u_on;
uncontrollable South_Downstream_EnteringTLs_West_SensorR1_u_off;
uncontrollable South_Downstream_EnteringTLs_West_SensorG_u_on;
uncontrollable South_Downstream_EnteringTLs_West_SensorG_u_off;
uncontrollable South_Downstream_EnteringTLs_West_SensorR2_u_on;
uncontrollable South_Downstream_EnteringTLs_West_SensorR2_u_off;
controllable South_Downstream_LeavingTLs_East_Actuator_c_r;
controllable South_Downstream_LeavingTLs_East_Actuator_c_g;
uncontrollable South_Downstream_LeavingTLs_East_SensorR_u_on;
uncontrollable South_Downstream_LeavingTLs_East_SensorR_u_off;
uncontrollable South_Downstream_LeavingTLs_East_SensorG_u_on;
uncontrollable South_Downstream_LeavingTLs_East_SensorG_u_off;
controllable South_Downstream_LeavingTLs_West_Actuator_c_r;
controllable South_Downstream_LeavingTLs_West_Actuator_c_g;
uncontrollable South_Downstream_LeavingTLs_West_SensorR_u_on;
uncontrollable South_Downstream_LeavingTLs_West_SensorR_u_off;
uncontrollable South_Downstream_LeavingTLs_West_SensorG_u_on;
uncontrollable South_Downstream_LeavingTLs_West_SensorG_u_off;
uncontrollable South_Downstream_EqualWaterSensor_u_on;
uncontrollable South_Downstream_EqualWaterSensor_u_off;
uncontrollable South_EmergencyStop_u_activate;
uncontrollable South_EmergencyStop_u_deactivate;
uncontrollable South_Commands_Deactivate;
uncontrollable South_Commands_DownstreamGateOpen_act;
uncontrollable South_Commands_DownstreamGateClose_act;
uncontrollable South_Commands_DownstreamGateStop_act;
uncontrollable South_Commands_DownstreamPaddleOpen_act;
uncontrollable South_Commands_DownstreamPaddleClose_act;
uncontrollable South_Commands_DownstreamPaddleStop_act;
uncontrollable South_Commands_DownstreamEnteringTLRedRed_act;
uncontrollable South_Commands_DownstreamEnteringTLRed_act;
uncontrollable South_Commands_DownstreamEnteringTLRedGreen_act;
uncontrollable South_Commands_DownstreamEnteringTLGreen_act;
uncontrollable South_Commands_DownstreamLeavingTLRed_act;
uncontrollable South_Commands_DownstreamLeavingTLGreen_act;
uncontrollable South_Commands_UpstreamGateOpen_act;
uncontrollable South_Commands_UpstreamGateClose_act;
uncontrollable South_Commands_UpstreamGateStop_act;
uncontrollable South_Commands_UpstreamPaddleOpen_act;
uncontrollable South_Commands_UpstreamPaddleClose_act;
uncontrollable South_Commands_UpstreamPaddleStop_act;
uncontrollable South_Commands_UpstreamEnteringTLRedRed_act;
uncontrollable South_Commands_UpstreamEnteringTLRed_act;
uncontrollable South_Commands_UpstreamEnteringTLRedGreen_act;
uncontrollable South_Commands_UpstreamEnteringTLGreen_act;
uncontrollable South_Commands_UpstreamLeavingTLRed_act;
uncontrollable South_Commands_UpstreamLeavingTLGreen_act;
controllable Barrier_Downstream_TLs_East_Actuator_c_r;
controllable Barrier_Downstream_TLs_East_Actuator_c_g;
uncontrollable Barrier_Downstream_TLs_East_SensorR_u_on;
uncontrollable Barrier_Downstream_TLs_East_SensorR_u_off;
uncontrollable Barrier_Downstream_TLs_East_SensorG_u_on;
uncontrollable Barrier_Downstream_TLs_East_SensorG_u_off;
controllable Barrier_Downstream_TLs_West_Actuator_c_r;
controllable Barrier_Downstream_TLs_West_Actuator_c_g;
uncontrollable Barrier_Downstream_TLs_West_SensorR_u_on;
uncontrollable Barrier_Downstream_TLs_West_SensorR_u_off;
uncontrollable Barrier_Downstream_TLs_West_SensorG_u_on;
uncontrollable Barrier_Downstream_TLs_West_SensorG_u_off;
controllable Barrier_Upstream_TLs_East_Actuator_c_r;
controllable Barrier_Upstream_TLs_East_Actuator_c_g;
uncontrollable Barrier_Upstream_TLs_East_SensorR_u_on;
uncontrollable Barrier_Upstream_TLs_East_SensorR_u_off;
uncontrollable Barrier_Upstream_TLs_East_SensorG_u_on;
uncontrollable Barrier_Upstream_TLs_East_SensorG_u_off;
controllable Barrier_Upstream_TLs_West_Actuator_c_r;
controllable Barrier_Upstream_TLs_West_Actuator_c_g;
uncontrollable Barrier_Upstream_TLs_West_SensorR_u_on;
uncontrollable Barrier_Upstream_TLs_West_SensorR_u_off;
uncontrollable Barrier_Upstream_TLs_West_SensorG_u_on;
uncontrollable Barrier_Upstream_TLs_West_SensorG_u_off;
controllable Barrier_Barrier_Actuator_c_open;
controllable Barrier_Barrier_Actuator_c_close;
controllable Barrier_Barrier_Actuator_c_emergencyStop;
controllable Barrier_Barrier_Actuator_c_endStopClosing;
controllable Barrier_Barrier_Actuator_c_endStopOpening;
uncontrollable Barrier_Barrier_Sensor_u_open_on;
uncontrollable Barrier_Barrier_Sensor_u_open_off;
uncontrollable Barrier_Barrier_Sensor_u_closed_on;
uncontrollable Barrier_Barrier_Sensor_u_closed_off;
uncontrollable Barrier_EmergencyStop_u_activate;
uncontrollable Barrier_EmergencyStop_u_deactivate;
uncontrollable Barrier_Commands_Deactivate;
uncontrollable Barrier_Commands_BarrierOpen_act;
uncontrollable Barrier_Commands_BarrierClose_act;
uncontrollable Barrier_Commands_BarrierStop_act;
uncontrollable Barrier_Commands_DownstreamTLRed_act;
uncontrollable Barrier_Commands_DownstreamTLGreen_act;
uncontrollable Barrier_Commands_UpstreamTLRed_act;
uncontrollable Barrier_Commands_UpstreamTLGreen_act;
plant automaton North_Upstream_Gates_East_Actuator:
  location Rest:
    initial;
    marked;
    edge North_Upstream_Gates_East_Actuator_c_open goto Opening;
    edge North_Upstream_Gates_East_Actuator_c_close goto Closing;
  location Opening:
    edge North_Upstream_Gates_East_Actuator_c_emergencyStop, North_Upstream_Gates_East_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge North_Upstream_Gates_East_Actuator_c_emergencyStop, North_Upstream_Gates_East_Actuator_c_endStopClosing goto Rest;
end
plant automaton North_Upstream_Gates_East_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge North_Upstream_Gates_East_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge North_Upstream_Gates_East_Sensor_u_closed_on goto Closed;
    edge North_Upstream_Gates_East_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge North_Upstream_Gates_East_Sensor_u_open_off goto Intermediate;
end
plant automaton North_Upstream_Gates_East_Dynamics:
  location:
    initial;
    marked;
    edge North_Upstream_Gates_East_Sensor_u_open_on, North_Upstream_Gates_East_Sensor_u_closed_off when North_Upstream_Gates_East_Actuator.Opening;
    edge North_Upstream_Gates_East_Sensor_u_closed_on, North_Upstream_Gates_East_Sensor_u_open_off when North_Upstream_Gates_East_Actuator.Closing;
end
plant automaton North_Upstream_Gates_West_Actuator:
  location Rest:
    initial;
    marked;
    edge North_Upstream_Gates_West_Actuator_c_open goto Opening;
    edge North_Upstream_Gates_West_Actuator_c_close goto Closing;
  location Opening:
    edge North_Upstream_Gates_West_Actuator_c_emergencyStop, North_Upstream_Gates_West_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge North_Upstream_Gates_West_Actuator_c_emergencyStop, North_Upstream_Gates_West_Actuator_c_endStopClosing goto Rest;
end
plant automaton North_Upstream_Gates_West_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge North_Upstream_Gates_West_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge North_Upstream_Gates_West_Sensor_u_closed_on goto Closed;
    edge North_Upstream_Gates_West_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge North_Upstream_Gates_West_Sensor_u_open_off goto Intermediate;
end
plant automaton North_Upstream_Gates_West_Dynamics:
  location:
    initial;
    marked;
    edge North_Upstream_Gates_West_Sensor_u_open_on, North_Upstream_Gates_West_Sensor_u_closed_off when North_Upstream_Gates_West_Actuator.Opening;
    edge North_Upstream_Gates_West_Sensor_u_closed_on, North_Upstream_Gates_West_Sensor_u_open_off when North_Upstream_Gates_West_Actuator.Closing;
end
plant automaton North_Upstream_Paddles_East_Actuator:
  location Rest:
    initial;
    marked;
    edge North_Upstream_Paddles_East_Actuator_c_open goto Opening;
    edge North_Upstream_Paddles_East_Actuator_c_close goto Closing;
  location Opening:
    edge North_Upstream_Paddles_East_Actuator_c_emergencyStop, North_Upstream_Paddles_East_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge North_Upstream_Paddles_East_Actuator_c_emergencyStop, North_Upstream_Paddles_East_Actuator_c_endStopClosing goto Rest;
end
plant automaton North_Upstream_Paddles_East_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge North_Upstream_Paddles_East_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge North_Upstream_Paddles_East_Sensor_u_closed_on goto Closed;
    edge North_Upstream_Paddles_East_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge North_Upstream_Paddles_East_Sensor_u_open_off goto Intermediate;
end
plant automaton North_Upstream_Paddles_East_Dynamics:
  location:
    initial;
    marked;
    edge North_Upstream_Paddles_East_Sensor_u_open_on, North_Upstream_Paddles_East_Sensor_u_closed_off when North_Upstream_Paddles_East_Actuator.Opening;
    edge North_Upstream_Paddles_East_Sensor_u_closed_on, North_Upstream_Paddles_East_Sensor_u_open_off when North_Upstream_Paddles_East_Actuator.Closing;
end
plant automaton North_Upstream_Paddles_West_Actuator:
  location Rest:
    initial;
    marked;
    edge North_Upstream_Paddles_West_Actuator_c_open goto Opening;
    edge North_Upstream_Paddles_West_Actuator_c_close goto Closing;
  location Opening:
    edge North_Upstream_Paddles_West_Actuator_c_emergencyStop, North_Upstream_Paddles_West_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge North_Upstream_Paddles_West_Actuator_c_emergencyStop, North_Upstream_Paddles_West_Actuator_c_endStopClosing goto Rest;
end
plant automaton North_Upstream_Paddles_West_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge North_Upstream_Paddles_West_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge North_Upstream_Paddles_West_Sensor_u_closed_on goto Closed;
    edge North_Upstream_Paddles_West_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge North_Upstream_Paddles_West_Sensor_u_open_off goto Intermediate;
end
plant automaton North_Upstream_Paddles_West_Dynamics:
  location:
    initial;
    marked;
    edge North_Upstream_Paddles_West_Sensor_u_open_on, North_Upstream_Paddles_West_Sensor_u_closed_off when North_Upstream_Paddles_West_Actuator.Opening;
    edge North_Upstream_Paddles_West_Sensor_u_closed_on, North_Upstream_Paddles_West_Sensor_u_open_off when North_Upstream_Paddles_West_Actuator.Closing;
end
plant automaton North_Upstream_EnteringTLs_East_Actuator:
  location RedRed:
    marked;
    edge North_Upstream_EnteringTLs_East_Actuator_c_r goto Red;
  location Red:
    initial;
    marked;
    edge North_Upstream_EnteringTLs_East_Actuator_c_rr goto RedRed;
    edge North_Upstream_EnteringTLs_East_Actuator_c_rg goto RedGreen;
  location RedGreen:
    edge North_Upstream_EnteringTLs_East_Actuator_c_r goto Red;
    edge North_Upstream_EnteringTLs_East_Actuator_c_g goto Green;
  location Green:
    edge North_Upstream_EnteringTLs_East_Actuator_c_r goto Red;
end
plant automaton North_Upstream_EnteringTLs_East_SensorR1:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_EnteringTLs_East_SensorR1_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_EnteringTLs_East_SensorR1_u_off goto Off;
end
plant automaton North_Upstream_EnteringTLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_EnteringTLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_EnteringTLs_East_SensorG_u_off goto Off;
end
plant automaton North_Upstream_EnteringTLs_East_SensorR2:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_EnteringTLs_East_SensorR2_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_EnteringTLs_East_SensorR2_u_off goto Off;
end
plant automaton North_Upstream_EnteringTLs_East_DynamicsR1:
  alg bool On = not North_Upstream_EnteringTLs_East_Actuator.Green;
  alg bool Off = North_Upstream_EnteringTLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge North_Upstream_EnteringTLs_East_SensorR1_u_on when On;
    edge North_Upstream_EnteringTLs_East_SensorR1_u_off when Off;
end
plant automaton North_Upstream_EnteringTLs_East_DynamicsG:
  alg bool On = North_Upstream_EnteringTLs_East_Actuator.Green or North_Upstream_EnteringTLs_East_Actuator.RedGreen;
  alg bool Off = North_Upstream_EnteringTLs_East_Actuator.Red or North_Upstream_EnteringTLs_East_Actuator.RedRed;
  location:
    initial;
    marked;
    edge North_Upstream_EnteringTLs_East_SensorG_u_on when On;
    edge North_Upstream_EnteringTLs_East_SensorG_u_off when Off;
end
plant automaton North_Upstream_EnteringTLs_East_DynamicsR2:
  alg bool On = North_Upstream_EnteringTLs_East_Actuator.RedRed;
  alg bool Off = not North_Upstream_EnteringTLs_East_Actuator.RedRed;
  location:
    initial;
    marked;
    edge North_Upstream_EnteringTLs_East_SensorR2_u_on when On;
    edge North_Upstream_EnteringTLs_East_SensorR2_u_off when Off;
end
plant automaton North_Upstream_EnteringTLs_West_Actuator:
  location RedRed:
    marked;
    edge North_Upstream_EnteringTLs_West_Actuator_c_r goto Red;
  location Red:
    initial;
    marked;
    edge North_Upstream_EnteringTLs_West_Actuator_c_rr goto RedRed;
    edge North_Upstream_EnteringTLs_West_Actuator_c_rg goto RedGreen;
  location RedGreen:
    edge North_Upstream_EnteringTLs_West_Actuator_c_r goto Red;
    edge North_Upstream_EnteringTLs_West_Actuator_c_g goto Green;
  location Green:
    edge North_Upstream_EnteringTLs_West_Actuator_c_r goto Red;
end
plant automaton North_Upstream_EnteringTLs_West_SensorR1:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_EnteringTLs_West_SensorR1_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_EnteringTLs_West_SensorR1_u_off goto Off;
end
plant automaton North_Upstream_EnteringTLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_EnteringTLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_EnteringTLs_West_SensorG_u_off goto Off;
end
plant automaton North_Upstream_EnteringTLs_West_SensorR2:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_EnteringTLs_West_SensorR2_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_EnteringTLs_West_SensorR2_u_off goto Off;
end
plant automaton North_Upstream_EnteringTLs_West_DynamicsR1:
  alg bool On = not North_Upstream_EnteringTLs_West_Actuator.Green;
  alg bool Off = North_Upstream_EnteringTLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge North_Upstream_EnteringTLs_West_SensorR1_u_on when On;
    edge North_Upstream_EnteringTLs_West_SensorR1_u_off when Off;
end
plant automaton North_Upstream_EnteringTLs_West_DynamicsG:
  alg bool On = North_Upstream_EnteringTLs_West_Actuator.Green or North_Upstream_EnteringTLs_West_Actuator.RedGreen;
  alg bool Off = North_Upstream_EnteringTLs_West_Actuator.Red or North_Upstream_EnteringTLs_West_Actuator.RedRed;
  location:
    initial;
    marked;
    edge North_Upstream_EnteringTLs_West_SensorG_u_on when On;
    edge North_Upstream_EnteringTLs_West_SensorG_u_off when Off;
end
plant automaton North_Upstream_EnteringTLs_West_DynamicsR2:
  alg bool On = North_Upstream_EnteringTLs_West_Actuator.RedRed;
  alg bool Off = not North_Upstream_EnteringTLs_West_Actuator.RedRed;
  location:
    initial;
    marked;
    edge North_Upstream_EnteringTLs_West_SensorR2_u_on when On;
    edge North_Upstream_EnteringTLs_West_SensorR2_u_off when Off;
end
plant automaton North_Upstream_LeavingTLs_East_Actuator:
  location Red:
    initial;
    marked;
    edge North_Upstream_LeavingTLs_East_Actuator_c_g goto Green;
  location Green:
    edge North_Upstream_LeavingTLs_East_Actuator_c_r goto Red;
end
plant automaton North_Upstream_LeavingTLs_East_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_LeavingTLs_East_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_LeavingTLs_East_SensorR_u_off goto Off;
end
plant automaton North_Upstream_LeavingTLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_LeavingTLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_LeavingTLs_East_SensorG_u_off goto Off;
end
plant automaton North_Upstream_LeavingTLs_East_DynamicsR:
  alg bool On = not North_Upstream_LeavingTLs_East_Actuator.Green;
  alg bool Off = North_Upstream_LeavingTLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge North_Upstream_LeavingTLs_East_SensorR_u_on when On;
    edge North_Upstream_LeavingTLs_East_SensorR_u_off when Off;
end
plant automaton North_Upstream_LeavingTLs_East_DynamicsG:
  alg bool On = not North_Upstream_LeavingTLs_East_Actuator.Red;
  alg bool Off = North_Upstream_LeavingTLs_East_Actuator.Red;
  location:
    initial;
    marked;
    edge North_Upstream_LeavingTLs_East_SensorG_u_on when On;
    edge North_Upstream_LeavingTLs_East_SensorG_u_off when Off;
end
plant automaton North_Upstream_LeavingTLs_West_Actuator:
  location Red:
    initial;
    marked;
    edge North_Upstream_LeavingTLs_West_Actuator_c_g goto Green;
  location Green:
    edge North_Upstream_LeavingTLs_West_Actuator_c_r goto Red;
end
plant automaton North_Upstream_LeavingTLs_West_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_LeavingTLs_West_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_LeavingTLs_West_SensorR_u_off goto Off;
end
plant automaton North_Upstream_LeavingTLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Upstream_LeavingTLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Upstream_LeavingTLs_West_SensorG_u_off goto Off;
end
plant automaton North_Upstream_LeavingTLs_West_DynamicsR:
  alg bool On = not North_Upstream_LeavingTLs_West_Actuator.Green;
  alg bool Off = North_Upstream_LeavingTLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge North_Upstream_LeavingTLs_West_SensorR_u_on when On;
    edge North_Upstream_LeavingTLs_West_SensorR_u_off when Off;
end
plant automaton North_Upstream_LeavingTLs_West_DynamicsG:
  alg bool On = not North_Upstream_LeavingTLs_West_Actuator.Red;
  alg bool Off = North_Upstream_LeavingTLs_West_Actuator.Red;
  location:
    initial;
    marked;
    edge North_Upstream_LeavingTLs_West_SensorG_u_on when On;
    edge North_Upstream_LeavingTLs_West_SensorG_u_off when Off;
end
plant automaton North_Upstream_EqualWaterSensor:
  alg bool InitialEqual = false;
  location Unequal:
    initial not InitialEqual;
    marked not InitialEqual;
    edge North_Upstream_EqualWaterSensor_u_on goto Equal;
  location Equal:
    initial InitialEqual;
    marked InitialEqual;
    edge North_Upstream_EqualWaterSensor_u_off goto Unequal;
end
plant automaton North_Downstream_Gates_East_Actuator:
  location Rest:
    initial;
    marked;
    edge North_Downstream_Gates_East_Actuator_c_open goto Opening;
    edge North_Downstream_Gates_East_Actuator_c_close goto Closing;
  location Opening:
    edge North_Downstream_Gates_East_Actuator_c_emergencyStop, North_Downstream_Gates_East_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge North_Downstream_Gates_East_Actuator_c_emergencyStop, North_Downstream_Gates_East_Actuator_c_endStopClosing goto Rest;
end
plant automaton North_Downstream_Gates_East_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge North_Downstream_Gates_East_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge North_Downstream_Gates_East_Sensor_u_closed_on goto Closed;
    edge North_Downstream_Gates_East_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge North_Downstream_Gates_East_Sensor_u_open_off goto Intermediate;
end
plant automaton North_Downstream_Gates_East_Dynamics:
  location:
    initial;
    marked;
    edge North_Downstream_Gates_East_Sensor_u_open_on, North_Downstream_Gates_East_Sensor_u_closed_off when North_Downstream_Gates_East_Actuator.Opening;
    edge North_Downstream_Gates_East_Sensor_u_closed_on, North_Downstream_Gates_East_Sensor_u_open_off when North_Downstream_Gates_East_Actuator.Closing;
end
plant automaton North_Downstream_Gates_West_Actuator:
  location Rest:
    initial;
    marked;
    edge North_Downstream_Gates_West_Actuator_c_open goto Opening;
    edge North_Downstream_Gates_West_Actuator_c_close goto Closing;
  location Opening:
    edge North_Downstream_Gates_West_Actuator_c_emergencyStop, North_Downstream_Gates_West_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge North_Downstream_Gates_West_Actuator_c_emergencyStop, North_Downstream_Gates_West_Actuator_c_endStopClosing goto Rest;
end
plant automaton North_Downstream_Gates_West_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge North_Downstream_Gates_West_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge North_Downstream_Gates_West_Sensor_u_closed_on goto Closed;
    edge North_Downstream_Gates_West_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge North_Downstream_Gates_West_Sensor_u_open_off goto Intermediate;
end
plant automaton North_Downstream_Gates_West_Dynamics:
  location:
    initial;
    marked;
    edge North_Downstream_Gates_West_Sensor_u_open_on, North_Downstream_Gates_West_Sensor_u_closed_off when North_Downstream_Gates_West_Actuator.Opening;
    edge North_Downstream_Gates_West_Sensor_u_closed_on, North_Downstream_Gates_West_Sensor_u_open_off when North_Downstream_Gates_West_Actuator.Closing;
end
plant automaton North_Downstream_Paddles_East_Actuator:
  location Rest:
    initial;
    marked;
    edge North_Downstream_Paddles_East_Actuator_c_open goto Opening;
    edge North_Downstream_Paddles_East_Actuator_c_close goto Closing;
  location Opening:
    edge North_Downstream_Paddles_East_Actuator_c_emergencyStop, North_Downstream_Paddles_East_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge North_Downstream_Paddles_East_Actuator_c_emergencyStop, North_Downstream_Paddles_East_Actuator_c_endStopClosing goto Rest;
end
plant automaton North_Downstream_Paddles_East_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge North_Downstream_Paddles_East_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge North_Downstream_Paddles_East_Sensor_u_closed_on goto Closed;
    edge North_Downstream_Paddles_East_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge North_Downstream_Paddles_East_Sensor_u_open_off goto Intermediate;
end
plant automaton North_Downstream_Paddles_East_Dynamics:
  location:
    initial;
    marked;
    edge North_Downstream_Paddles_East_Sensor_u_open_on, North_Downstream_Paddles_East_Sensor_u_closed_off when North_Downstream_Paddles_East_Actuator.Opening;
    edge North_Downstream_Paddles_East_Sensor_u_closed_on, North_Downstream_Paddles_East_Sensor_u_open_off when North_Downstream_Paddles_East_Actuator.Closing;
end
plant automaton North_Downstream_Paddles_West_Actuator:
  location Rest:
    initial;
    marked;
    edge North_Downstream_Paddles_West_Actuator_c_open goto Opening;
    edge North_Downstream_Paddles_West_Actuator_c_close goto Closing;
  location Opening:
    edge North_Downstream_Paddles_West_Actuator_c_emergencyStop, North_Downstream_Paddles_West_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge North_Downstream_Paddles_West_Actuator_c_emergencyStop, North_Downstream_Paddles_West_Actuator_c_endStopClosing goto Rest;
end
plant automaton North_Downstream_Paddles_West_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge North_Downstream_Paddles_West_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge North_Downstream_Paddles_West_Sensor_u_closed_on goto Closed;
    edge North_Downstream_Paddles_West_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge North_Downstream_Paddles_West_Sensor_u_open_off goto Intermediate;
end
plant automaton North_Downstream_Paddles_West_Dynamics:
  location:
    initial;
    marked;
    edge North_Downstream_Paddles_West_Sensor_u_open_on, North_Downstream_Paddles_West_Sensor_u_closed_off when North_Downstream_Paddles_West_Actuator.Opening;
    edge North_Downstream_Paddles_West_Sensor_u_closed_on, North_Downstream_Paddles_West_Sensor_u_open_off when North_Downstream_Paddles_West_Actuator.Closing;
end
plant automaton North_Downstream_EnteringTLs_East_Actuator:
  location RedRed:
    marked;
    edge North_Downstream_EnteringTLs_East_Actuator_c_r goto Red;
  location Red:
    initial;
    marked;
    edge North_Downstream_EnteringTLs_East_Actuator_c_rr goto RedRed;
    edge North_Downstream_EnteringTLs_East_Actuator_c_rg goto RedGreen;
  location RedGreen:
    edge North_Downstream_EnteringTLs_East_Actuator_c_r goto Red;
    edge North_Downstream_EnteringTLs_East_Actuator_c_g goto Green;
  location Green:
    edge North_Downstream_EnteringTLs_East_Actuator_c_r goto Red;
end
plant automaton North_Downstream_EnteringTLs_East_SensorR1:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_EnteringTLs_East_SensorR1_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_EnteringTLs_East_SensorR1_u_off goto Off;
end
plant automaton North_Downstream_EnteringTLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_EnteringTLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_EnteringTLs_East_SensorG_u_off goto Off;
end
plant automaton North_Downstream_EnteringTLs_East_SensorR2:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_EnteringTLs_East_SensorR2_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_EnteringTLs_East_SensorR2_u_off goto Off;
end
plant automaton North_Downstream_EnteringTLs_East_DynamicsR1:
  alg bool On = not North_Downstream_EnteringTLs_East_Actuator.Green;
  alg bool Off = North_Downstream_EnteringTLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge North_Downstream_EnteringTLs_East_SensorR1_u_on when On;
    edge North_Downstream_EnteringTLs_East_SensorR1_u_off when Off;
end
plant automaton North_Downstream_EnteringTLs_East_DynamicsG:
  alg bool On = North_Downstream_EnteringTLs_East_Actuator.Green or North_Downstream_EnteringTLs_East_Actuator.RedGreen;
  alg bool Off = North_Downstream_EnteringTLs_East_Actuator.Red or North_Downstream_EnteringTLs_East_Actuator.RedRed;
  location:
    initial;
    marked;
    edge North_Downstream_EnteringTLs_East_SensorG_u_on when On;
    edge North_Downstream_EnteringTLs_East_SensorG_u_off when Off;
end
plant automaton North_Downstream_EnteringTLs_East_DynamicsR2:
  alg bool On = North_Downstream_EnteringTLs_East_Actuator.RedRed;
  alg bool Off = not North_Downstream_EnteringTLs_East_Actuator.RedRed;
  location:
    initial;
    marked;
    edge North_Downstream_EnteringTLs_East_SensorR2_u_on when On;
    edge North_Downstream_EnteringTLs_East_SensorR2_u_off when Off;
end
plant automaton North_Downstream_EnteringTLs_West_Actuator:
  location RedRed:
    marked;
    edge North_Downstream_EnteringTLs_West_Actuator_c_r goto Red;
  location Red:
    initial;
    marked;
    edge North_Downstream_EnteringTLs_West_Actuator_c_rr goto RedRed;
    edge North_Downstream_EnteringTLs_West_Actuator_c_rg goto RedGreen;
  location RedGreen:
    edge North_Downstream_EnteringTLs_West_Actuator_c_r goto Red;
    edge North_Downstream_EnteringTLs_West_Actuator_c_g goto Green;
  location Green:
    edge North_Downstream_EnteringTLs_West_Actuator_c_r goto Red;
end
plant automaton North_Downstream_EnteringTLs_West_SensorR1:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_EnteringTLs_West_SensorR1_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_EnteringTLs_West_SensorR1_u_off goto Off;
end
plant automaton North_Downstream_EnteringTLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_EnteringTLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_EnteringTLs_West_SensorG_u_off goto Off;
end
plant automaton North_Downstream_EnteringTLs_West_SensorR2:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_EnteringTLs_West_SensorR2_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_EnteringTLs_West_SensorR2_u_off goto Off;
end
plant automaton North_Downstream_EnteringTLs_West_DynamicsR1:
  alg bool On = not North_Downstream_EnteringTLs_West_Actuator.Green;
  alg bool Off = North_Downstream_EnteringTLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge North_Downstream_EnteringTLs_West_SensorR1_u_on when On;
    edge North_Downstream_EnteringTLs_West_SensorR1_u_off when Off;
end
plant automaton North_Downstream_EnteringTLs_West_DynamicsG:
  alg bool On = North_Downstream_EnteringTLs_West_Actuator.Green or North_Downstream_EnteringTLs_West_Actuator.RedGreen;
  alg bool Off = North_Downstream_EnteringTLs_West_Actuator.Red or North_Downstream_EnteringTLs_West_Actuator.RedRed;
  location:
    initial;
    marked;
    edge North_Downstream_EnteringTLs_West_SensorG_u_on when On;
    edge North_Downstream_EnteringTLs_West_SensorG_u_off when Off;
end
plant automaton North_Downstream_EnteringTLs_West_DynamicsR2:
  alg bool On = North_Downstream_EnteringTLs_West_Actuator.RedRed;
  alg bool Off = not North_Downstream_EnteringTLs_West_Actuator.RedRed;
  location:
    initial;
    marked;
    edge North_Downstream_EnteringTLs_West_SensorR2_u_on when On;
    edge North_Downstream_EnteringTLs_West_SensorR2_u_off when Off;
end
plant automaton North_Downstream_LeavingTLs_East_Actuator:
  location Red:
    initial;
    marked;
    edge North_Downstream_LeavingTLs_East_Actuator_c_g goto Green;
  location Green:
    edge North_Downstream_LeavingTLs_East_Actuator_c_r goto Red;
end
plant automaton North_Downstream_LeavingTLs_East_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_LeavingTLs_East_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_LeavingTLs_East_SensorR_u_off goto Off;
end
plant automaton North_Downstream_LeavingTLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_LeavingTLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_LeavingTLs_East_SensorG_u_off goto Off;
end
plant automaton North_Downstream_LeavingTLs_East_DynamicsR:
  alg bool On = not North_Downstream_LeavingTLs_East_Actuator.Green;
  alg bool Off = North_Downstream_LeavingTLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge North_Downstream_LeavingTLs_East_SensorR_u_on when On;
    edge North_Downstream_LeavingTLs_East_SensorR_u_off when Off;
end
plant automaton North_Downstream_LeavingTLs_East_DynamicsG:
  alg bool On = not North_Downstream_LeavingTLs_East_Actuator.Red;
  alg bool Off = North_Downstream_LeavingTLs_East_Actuator.Red;
  location:
    initial;
    marked;
    edge North_Downstream_LeavingTLs_East_SensorG_u_on when On;
    edge North_Downstream_LeavingTLs_East_SensorG_u_off when Off;
end
plant automaton North_Downstream_LeavingTLs_West_Actuator:
  location Red:
    initial;
    marked;
    edge North_Downstream_LeavingTLs_West_Actuator_c_g goto Green;
  location Green:
    edge North_Downstream_LeavingTLs_West_Actuator_c_r goto Red;
end
plant automaton North_Downstream_LeavingTLs_West_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_LeavingTLs_West_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_LeavingTLs_West_SensorR_u_off goto Off;
end
plant automaton North_Downstream_LeavingTLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge North_Downstream_LeavingTLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge North_Downstream_LeavingTLs_West_SensorG_u_off goto Off;
end
plant automaton North_Downstream_LeavingTLs_West_DynamicsR:
  alg bool On = not North_Downstream_LeavingTLs_West_Actuator.Green;
  alg bool Off = North_Downstream_LeavingTLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge North_Downstream_LeavingTLs_West_SensorR_u_on when On;
    edge North_Downstream_LeavingTLs_West_SensorR_u_off when Off;
end
plant automaton North_Downstream_LeavingTLs_West_DynamicsG:
  alg bool On = not North_Downstream_LeavingTLs_West_Actuator.Red;
  alg bool Off = North_Downstream_LeavingTLs_West_Actuator.Red;
  location:
    initial;
    marked;
    edge North_Downstream_LeavingTLs_West_SensorG_u_on when On;
    edge North_Downstream_LeavingTLs_West_SensorG_u_off when Off;
end
plant automaton North_Downstream_EqualWaterSensor:
  alg bool InitialEqual = false;
  location Unequal:
    initial not InitialEqual;
    marked not InitialEqual;
    edge North_Downstream_EqualWaterSensor_u_on goto Equal;
  location Equal:
    initial InitialEqual;
    marked InitialEqual;
    edge North_Downstream_EqualWaterSensor_u_off goto Unequal;
end
plant automaton North_EmergencyStop:
  location Inactive:
    initial;
    marked;
    edge North_EmergencyStop_u_activate goto Active;
  location Active:
    edge North_EmergencyStop_u_deactivate goto Inactive;
end
plant automaton North_Commands:
  monitor;
  location NoCommand:
    initial;
    marked;
    edge North_Commands_DownstreamGateOpen_act goto DownstreamGateOpen;
    edge North_Commands_DownstreamGateClose_act goto DownstreamGateClose;
    edge North_Commands_DownstreamGateStop_act goto DownstreamGateStop;
    edge North_Commands_DownstreamPaddleOpen_act goto DownstreamPaddleOpen;
    edge North_Commands_DownstreamPaddleClose_act goto DownstreamPaddleClose;
    edge North_Commands_DownstreamPaddleStop_act goto DownstreamPaddleStop;
    edge North_Commands_DownstreamEnteringTLRedRed_act goto DownstreamEnteringTLRedRed;
    edge North_Commands_DownstreamEnteringTLRed_act goto DownstreamEnteringTLRed;
    edge North_Commands_DownstreamEnteringTLRedGreen_act goto DownstreamEnteringTLRedGreen;
    edge North_Commands_DownstreamEnteringTLGreen_act goto DownstreamEnteringTLGreen;
    edge North_Commands_DownstreamLeavingTLRed_act goto DownstreamLeavingTLRed;
    edge North_Commands_DownstreamLeavingTLGreen_act goto DownstreamLeavingTLGreen;
    edge North_Commands_UpstreamGateOpen_act goto UpstreamGateOpen;
    edge North_Commands_UpstreamGateClose_act goto UpstreamGateClose;
    edge North_Commands_UpstreamGateStop_act goto UpstreamGateStop;
    edge North_Commands_UpstreamPaddleOpen_act goto UpstreamPaddleOpen;
    edge North_Commands_UpstreamPaddleClose_act goto UpstreamPaddleClose;
    edge North_Commands_UpstreamPaddleStop_act goto UpstreamPaddleStop;
    edge North_Commands_UpstreamEnteringTLRedRed_act goto UpstreamEnteringTLRedRed;
    edge North_Commands_UpstreamEnteringTLRed_act goto UpstreamEnteringTLRed;
    edge North_Commands_UpstreamEnteringTLRedGreen_act goto UpstreamEnteringTLRedGreen;
    edge North_Commands_UpstreamEnteringTLGreen_act goto UpstreamEnteringTLGreen;
    edge North_Commands_UpstreamLeavingTLRed_act goto UpstreamLeavingTLRed;
    edge North_Commands_UpstreamLeavingTLGreen_act goto UpstreamLeavingTLGreen;
  location DownstreamGateOpen:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamGateClose:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamGateStop:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamPaddleOpen:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamPaddleClose:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamPaddleStop:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamEnteringTLRedRed:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamEnteringTLRed:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamEnteringTLRedGreen:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamEnteringTLGreen:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamLeavingTLRed:
    edge North_Commands_Deactivate goto NoCommand;
  location DownstreamLeavingTLGreen:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamGateOpen:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamGateClose:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamGateStop:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamPaddleOpen:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamPaddleClose:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamPaddleStop:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamEnteringTLRedRed:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamEnteringTLRed:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamEnteringTLRedGreen:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamEnteringTLGreen:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamLeavingTLRed:
    edge North_Commands_Deactivate goto NoCommand;
  location UpstreamLeavingTLGreen:
    edge North_Commands_Deactivate goto NoCommand;
end
plant automaton South_Upstream_Gates_East_Actuator:
  location Rest:
    initial;
    marked;
    edge South_Upstream_Gates_East_Actuator_c_open goto Opening;
    edge South_Upstream_Gates_East_Actuator_c_close goto Closing;
  location Opening:
    edge South_Upstream_Gates_East_Actuator_c_emergencyStop, South_Upstream_Gates_East_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge South_Upstream_Gates_East_Actuator_c_emergencyStop, South_Upstream_Gates_East_Actuator_c_endStopClosing goto Rest;
end
plant automaton South_Upstream_Gates_East_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge South_Upstream_Gates_East_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge South_Upstream_Gates_East_Sensor_u_closed_on goto Closed;
    edge South_Upstream_Gates_East_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge South_Upstream_Gates_East_Sensor_u_open_off goto Intermediate;
end
plant automaton South_Upstream_Gates_East_Dynamics:
  location:
    initial;
    marked;
    edge South_Upstream_Gates_East_Sensor_u_open_on, South_Upstream_Gates_East_Sensor_u_closed_off when South_Upstream_Gates_East_Actuator.Opening;
    edge South_Upstream_Gates_East_Sensor_u_closed_on, South_Upstream_Gates_East_Sensor_u_open_off when South_Upstream_Gates_East_Actuator.Closing;
end
plant automaton South_Upstream_Gates_West_Actuator:
  location Rest:
    initial;
    marked;
    edge South_Upstream_Gates_West_Actuator_c_open goto Opening;
    edge South_Upstream_Gates_West_Actuator_c_close goto Closing;
  location Opening:
    edge South_Upstream_Gates_West_Actuator_c_emergencyStop, South_Upstream_Gates_West_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge South_Upstream_Gates_West_Actuator_c_emergencyStop, South_Upstream_Gates_West_Actuator_c_endStopClosing goto Rest;
end
plant automaton South_Upstream_Gates_West_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge South_Upstream_Gates_West_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge South_Upstream_Gates_West_Sensor_u_closed_on goto Closed;
    edge South_Upstream_Gates_West_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge South_Upstream_Gates_West_Sensor_u_open_off goto Intermediate;
end
plant automaton South_Upstream_Gates_West_Dynamics:
  location:
    initial;
    marked;
    edge South_Upstream_Gates_West_Sensor_u_open_on, South_Upstream_Gates_West_Sensor_u_closed_off when South_Upstream_Gates_West_Actuator.Opening;
    edge South_Upstream_Gates_West_Sensor_u_closed_on, South_Upstream_Gates_West_Sensor_u_open_off when South_Upstream_Gates_West_Actuator.Closing;
end
plant automaton South_Upstream_Paddles_East_Actuator:
  location Rest:
    initial;
    marked;
    edge South_Upstream_Paddles_East_Actuator_c_open goto Opening;
    edge South_Upstream_Paddles_East_Actuator_c_close goto Closing;
  location Opening:
    edge South_Upstream_Paddles_East_Actuator_c_emergencyStop, South_Upstream_Paddles_East_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge South_Upstream_Paddles_East_Actuator_c_emergencyStop, South_Upstream_Paddles_East_Actuator_c_endStopClosing goto Rest;
end
plant automaton South_Upstream_Paddles_East_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge South_Upstream_Paddles_East_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge South_Upstream_Paddles_East_Sensor_u_closed_on goto Closed;
    edge South_Upstream_Paddles_East_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge South_Upstream_Paddles_East_Sensor_u_open_off goto Intermediate;
end
plant automaton South_Upstream_Paddles_East_Dynamics:
  location:
    initial;
    marked;
    edge South_Upstream_Paddles_East_Sensor_u_open_on, South_Upstream_Paddles_East_Sensor_u_closed_off when South_Upstream_Paddles_East_Actuator.Opening;
    edge South_Upstream_Paddles_East_Sensor_u_closed_on, South_Upstream_Paddles_East_Sensor_u_open_off when South_Upstream_Paddles_East_Actuator.Closing;
end
plant automaton South_Upstream_Paddles_West_Actuator:
  location Rest:
    initial;
    marked;
    edge South_Upstream_Paddles_West_Actuator_c_open goto Opening;
    edge South_Upstream_Paddles_West_Actuator_c_close goto Closing;
  location Opening:
    edge South_Upstream_Paddles_West_Actuator_c_emergencyStop, South_Upstream_Paddles_West_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge South_Upstream_Paddles_West_Actuator_c_emergencyStop, South_Upstream_Paddles_West_Actuator_c_endStopClosing goto Rest;
end
plant automaton South_Upstream_Paddles_West_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge South_Upstream_Paddles_West_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge South_Upstream_Paddles_West_Sensor_u_closed_on goto Closed;
    edge South_Upstream_Paddles_West_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge South_Upstream_Paddles_West_Sensor_u_open_off goto Intermediate;
end
plant automaton South_Upstream_Paddles_West_Dynamics:
  location:
    initial;
    marked;
    edge South_Upstream_Paddles_West_Sensor_u_open_on, South_Upstream_Paddles_West_Sensor_u_closed_off when South_Upstream_Paddles_West_Actuator.Opening;
    edge South_Upstream_Paddles_West_Sensor_u_closed_on, South_Upstream_Paddles_West_Sensor_u_open_off when South_Upstream_Paddles_West_Actuator.Closing;
end
plant automaton South_Upstream_EnteringTLs_East_Actuator:
  location RedRed:
    marked;
    edge South_Upstream_EnteringTLs_East_Actuator_c_r goto Red;
  location Red:
    initial;
    marked;
    edge South_Upstream_EnteringTLs_East_Actuator_c_rr goto RedRed;
    edge South_Upstream_EnteringTLs_East_Actuator_c_rg goto RedGreen;
  location RedGreen:
    edge South_Upstream_EnteringTLs_East_Actuator_c_r goto Red;
    edge South_Upstream_EnteringTLs_East_Actuator_c_g goto Green;
  location Green:
    edge South_Upstream_EnteringTLs_East_Actuator_c_r goto Red;
end
plant automaton South_Upstream_EnteringTLs_East_SensorR1:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_EnteringTLs_East_SensorR1_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_EnteringTLs_East_SensorR1_u_off goto Off;
end
plant automaton South_Upstream_EnteringTLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_EnteringTLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_EnteringTLs_East_SensorG_u_off goto Off;
end
plant automaton South_Upstream_EnteringTLs_East_SensorR2:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_EnteringTLs_East_SensorR2_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_EnteringTLs_East_SensorR2_u_off goto Off;
end
plant automaton South_Upstream_EnteringTLs_East_DynamicsR1:
  alg bool On = not South_Upstream_EnteringTLs_East_Actuator.Green;
  alg bool Off = South_Upstream_EnteringTLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge South_Upstream_EnteringTLs_East_SensorR1_u_on when On;
    edge South_Upstream_EnteringTLs_East_SensorR1_u_off when Off;
end
plant automaton South_Upstream_EnteringTLs_East_DynamicsG:
  alg bool On = South_Upstream_EnteringTLs_East_Actuator.Green or South_Upstream_EnteringTLs_East_Actuator.RedGreen;
  alg bool Off = South_Upstream_EnteringTLs_East_Actuator.Red or South_Upstream_EnteringTLs_East_Actuator.RedRed;
  location:
    initial;
    marked;
    edge South_Upstream_EnteringTLs_East_SensorG_u_on when On;
    edge South_Upstream_EnteringTLs_East_SensorG_u_off when Off;
end
plant automaton South_Upstream_EnteringTLs_East_DynamicsR2:
  alg bool On = South_Upstream_EnteringTLs_East_Actuator.RedRed;
  alg bool Off = not South_Upstream_EnteringTLs_East_Actuator.RedRed;
  location:
    initial;
    marked;
    edge South_Upstream_EnteringTLs_East_SensorR2_u_on when On;
    edge South_Upstream_EnteringTLs_East_SensorR2_u_off when Off;
end
plant automaton South_Upstream_EnteringTLs_West_Actuator:
  location RedRed:
    marked;
    edge South_Upstream_EnteringTLs_West_Actuator_c_r goto Red;
  location Red:
    initial;
    marked;
    edge South_Upstream_EnteringTLs_West_Actuator_c_rr goto RedRed;
    edge South_Upstream_EnteringTLs_West_Actuator_c_rg goto RedGreen;
  location RedGreen:
    edge South_Upstream_EnteringTLs_West_Actuator_c_r goto Red;
    edge South_Upstream_EnteringTLs_West_Actuator_c_g goto Green;
  location Green:
    edge South_Upstream_EnteringTLs_West_Actuator_c_r goto Red;
end
plant automaton South_Upstream_EnteringTLs_West_SensorR1:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_EnteringTLs_West_SensorR1_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_EnteringTLs_West_SensorR1_u_off goto Off;
end
plant automaton South_Upstream_EnteringTLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_EnteringTLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_EnteringTLs_West_SensorG_u_off goto Off;
end
plant automaton South_Upstream_EnteringTLs_West_SensorR2:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_EnteringTLs_West_SensorR2_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_EnteringTLs_West_SensorR2_u_off goto Off;
end
plant automaton South_Upstream_EnteringTLs_West_DynamicsR1:
  alg bool On = not South_Upstream_EnteringTLs_West_Actuator.Green;
  alg bool Off = South_Upstream_EnteringTLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge South_Upstream_EnteringTLs_West_SensorR1_u_on when On;
    edge South_Upstream_EnteringTLs_West_SensorR1_u_off when Off;
end
plant automaton South_Upstream_EnteringTLs_West_DynamicsG:
  alg bool On = South_Upstream_EnteringTLs_West_Actuator.Green or South_Upstream_EnteringTLs_West_Actuator.RedGreen;
  alg bool Off = South_Upstream_EnteringTLs_West_Actuator.Red or South_Upstream_EnteringTLs_West_Actuator.RedRed;
  location:
    initial;
    marked;
    edge South_Upstream_EnteringTLs_West_SensorG_u_on when On;
    edge South_Upstream_EnteringTLs_West_SensorG_u_off when Off;
end
plant automaton South_Upstream_EnteringTLs_West_DynamicsR2:
  alg bool On = South_Upstream_EnteringTLs_West_Actuator.RedRed;
  alg bool Off = not South_Upstream_EnteringTLs_West_Actuator.RedRed;
  location:
    initial;
    marked;
    edge South_Upstream_EnteringTLs_West_SensorR2_u_on when On;
    edge South_Upstream_EnteringTLs_West_SensorR2_u_off when Off;
end
plant automaton South_Upstream_LeavingTLs_East_Actuator:
  location Red:
    initial;
    marked;
    edge South_Upstream_LeavingTLs_East_Actuator_c_g goto Green;
  location Green:
    edge South_Upstream_LeavingTLs_East_Actuator_c_r goto Red;
end
plant automaton South_Upstream_LeavingTLs_East_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_LeavingTLs_East_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_LeavingTLs_East_SensorR_u_off goto Off;
end
plant automaton South_Upstream_LeavingTLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_LeavingTLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_LeavingTLs_East_SensorG_u_off goto Off;
end
plant automaton South_Upstream_LeavingTLs_East_DynamicsR:
  alg bool On = not South_Upstream_LeavingTLs_East_Actuator.Green;
  alg bool Off = South_Upstream_LeavingTLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge South_Upstream_LeavingTLs_East_SensorR_u_on when On;
    edge South_Upstream_LeavingTLs_East_SensorR_u_off when Off;
end
plant automaton South_Upstream_LeavingTLs_East_DynamicsG:
  alg bool On = not South_Upstream_LeavingTLs_East_Actuator.Red;
  alg bool Off = South_Upstream_LeavingTLs_East_Actuator.Red;
  location:
    initial;
    marked;
    edge South_Upstream_LeavingTLs_East_SensorG_u_on when On;
    edge South_Upstream_LeavingTLs_East_SensorG_u_off when Off;
end
plant automaton South_Upstream_LeavingTLs_West_Actuator:
  location Red:
    initial;
    marked;
    edge South_Upstream_LeavingTLs_West_Actuator_c_g goto Green;
  location Green:
    edge South_Upstream_LeavingTLs_West_Actuator_c_r goto Red;
end
plant automaton South_Upstream_LeavingTLs_West_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_LeavingTLs_West_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_LeavingTLs_West_SensorR_u_off goto Off;
end
plant automaton South_Upstream_LeavingTLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Upstream_LeavingTLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Upstream_LeavingTLs_West_SensorG_u_off goto Off;
end
plant automaton South_Upstream_LeavingTLs_West_DynamicsR:
  alg bool On = not South_Upstream_LeavingTLs_West_Actuator.Green;
  alg bool Off = South_Upstream_LeavingTLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge South_Upstream_LeavingTLs_West_SensorR_u_on when On;
    edge South_Upstream_LeavingTLs_West_SensorR_u_off when Off;
end
plant automaton South_Upstream_LeavingTLs_West_DynamicsG:
  alg bool On = not South_Upstream_LeavingTLs_West_Actuator.Red;
  alg bool Off = South_Upstream_LeavingTLs_West_Actuator.Red;
  location:
    initial;
    marked;
    edge South_Upstream_LeavingTLs_West_SensorG_u_on when On;
    edge South_Upstream_LeavingTLs_West_SensorG_u_off when Off;
end
plant automaton South_Upstream_EqualWaterSensor:
  alg bool InitialEqual = false;
  location Unequal:
    initial not InitialEqual;
    marked not InitialEqual;
    edge South_Upstream_EqualWaterSensor_u_on goto Equal;
  location Equal:
    initial InitialEqual;
    marked InitialEqual;
    edge South_Upstream_EqualWaterSensor_u_off goto Unequal;
end
plant automaton South_Downstream_Gates_East_Actuator:
  location Rest:
    initial;
    marked;
    edge South_Downstream_Gates_East_Actuator_c_open goto Opening;
    edge South_Downstream_Gates_East_Actuator_c_close goto Closing;
  location Opening:
    edge South_Downstream_Gates_East_Actuator_c_emergencyStop, South_Downstream_Gates_East_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge South_Downstream_Gates_East_Actuator_c_emergencyStop, South_Downstream_Gates_East_Actuator_c_endStopClosing goto Rest;
end
plant automaton South_Downstream_Gates_East_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge South_Downstream_Gates_East_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge South_Downstream_Gates_East_Sensor_u_closed_on goto Closed;
    edge South_Downstream_Gates_East_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge South_Downstream_Gates_East_Sensor_u_open_off goto Intermediate;
end
plant automaton South_Downstream_Gates_East_Dynamics:
  location:
    initial;
    marked;
    edge South_Downstream_Gates_East_Sensor_u_open_on, South_Downstream_Gates_East_Sensor_u_closed_off when South_Downstream_Gates_East_Actuator.Opening;
    edge South_Downstream_Gates_East_Sensor_u_closed_on, South_Downstream_Gates_East_Sensor_u_open_off when South_Downstream_Gates_East_Actuator.Closing;
end
plant automaton South_Downstream_Gates_West_Actuator:
  location Rest:
    initial;
    marked;
    edge South_Downstream_Gates_West_Actuator_c_open goto Opening;
    edge South_Downstream_Gates_West_Actuator_c_close goto Closing;
  location Opening:
    edge South_Downstream_Gates_West_Actuator_c_emergencyStop, South_Downstream_Gates_West_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge South_Downstream_Gates_West_Actuator_c_emergencyStop, South_Downstream_Gates_West_Actuator_c_endStopClosing goto Rest;
end
plant automaton South_Downstream_Gates_West_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge South_Downstream_Gates_West_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge South_Downstream_Gates_West_Sensor_u_closed_on goto Closed;
    edge South_Downstream_Gates_West_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge South_Downstream_Gates_West_Sensor_u_open_off goto Intermediate;
end
plant automaton South_Downstream_Gates_West_Dynamics:
  location:
    initial;
    marked;
    edge South_Downstream_Gates_West_Sensor_u_open_on, South_Downstream_Gates_West_Sensor_u_closed_off when South_Downstream_Gates_West_Actuator.Opening;
    edge South_Downstream_Gates_West_Sensor_u_closed_on, South_Downstream_Gates_West_Sensor_u_open_off when South_Downstream_Gates_West_Actuator.Closing;
end
plant automaton South_Downstream_Paddles_East_Actuator:
  location Rest:
    initial;
    marked;
    edge South_Downstream_Paddles_East_Actuator_c_open goto Opening;
    edge South_Downstream_Paddles_East_Actuator_c_close goto Closing;
  location Opening:
    edge South_Downstream_Paddles_East_Actuator_c_emergencyStop, South_Downstream_Paddles_East_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge South_Downstream_Paddles_East_Actuator_c_emergencyStop, South_Downstream_Paddles_East_Actuator_c_endStopClosing goto Rest;
end
plant automaton South_Downstream_Paddles_East_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge South_Downstream_Paddles_East_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge South_Downstream_Paddles_East_Sensor_u_closed_on goto Closed;
    edge South_Downstream_Paddles_East_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge South_Downstream_Paddles_East_Sensor_u_open_off goto Intermediate;
end
plant automaton South_Downstream_Paddles_East_Dynamics:
  location:
    initial;
    marked;
    edge South_Downstream_Paddles_East_Sensor_u_open_on, South_Downstream_Paddles_East_Sensor_u_closed_off when South_Downstream_Paddles_East_Actuator.Opening;
    edge South_Downstream_Paddles_East_Sensor_u_closed_on, South_Downstream_Paddles_East_Sensor_u_open_off when South_Downstream_Paddles_East_Actuator.Closing;
end
plant automaton South_Downstream_Paddles_West_Actuator:
  location Rest:
    initial;
    marked;
    edge South_Downstream_Paddles_West_Actuator_c_open goto Opening;
    edge South_Downstream_Paddles_West_Actuator_c_close goto Closing;
  location Opening:
    edge South_Downstream_Paddles_West_Actuator_c_emergencyStop, South_Downstream_Paddles_West_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge South_Downstream_Paddles_West_Actuator_c_emergencyStop, South_Downstream_Paddles_West_Actuator_c_endStopClosing goto Rest;
end
plant automaton South_Downstream_Paddles_West_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge South_Downstream_Paddles_West_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge South_Downstream_Paddles_West_Sensor_u_closed_on goto Closed;
    edge South_Downstream_Paddles_West_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge South_Downstream_Paddles_West_Sensor_u_open_off goto Intermediate;
end
plant automaton South_Downstream_Paddles_West_Dynamics:
  location:
    initial;
    marked;
    edge South_Downstream_Paddles_West_Sensor_u_open_on, South_Downstream_Paddles_West_Sensor_u_closed_off when South_Downstream_Paddles_West_Actuator.Opening;
    edge South_Downstream_Paddles_West_Sensor_u_closed_on, South_Downstream_Paddles_West_Sensor_u_open_off when South_Downstream_Paddles_West_Actuator.Closing;
end
plant automaton South_Downstream_EnteringTLs_East_Actuator:
  location RedRed:
    marked;
    edge South_Downstream_EnteringTLs_East_Actuator_c_r goto Red;
  location Red:
    initial;
    marked;
    edge South_Downstream_EnteringTLs_East_Actuator_c_rr goto RedRed;
    edge South_Downstream_EnteringTLs_East_Actuator_c_rg goto RedGreen;
  location RedGreen:
    edge South_Downstream_EnteringTLs_East_Actuator_c_r goto Red;
    edge South_Downstream_EnteringTLs_East_Actuator_c_g goto Green;
  location Green:
    edge South_Downstream_EnteringTLs_East_Actuator_c_r goto Red;
end
plant automaton South_Downstream_EnteringTLs_East_SensorR1:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_EnteringTLs_East_SensorR1_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_EnteringTLs_East_SensorR1_u_off goto Off;
end
plant automaton South_Downstream_EnteringTLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_EnteringTLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_EnteringTLs_East_SensorG_u_off goto Off;
end
plant automaton South_Downstream_EnteringTLs_East_SensorR2:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_EnteringTLs_East_SensorR2_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_EnteringTLs_East_SensorR2_u_off goto Off;
end
plant automaton South_Downstream_EnteringTLs_East_DynamicsR1:
  alg bool On = not South_Downstream_EnteringTLs_East_Actuator.Green;
  alg bool Off = South_Downstream_EnteringTLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge South_Downstream_EnteringTLs_East_SensorR1_u_on when On;
    edge South_Downstream_EnteringTLs_East_SensorR1_u_off when Off;
end
plant automaton South_Downstream_EnteringTLs_East_DynamicsG:
  alg bool On = South_Downstream_EnteringTLs_East_Actuator.Green or South_Downstream_EnteringTLs_East_Actuator.RedGreen;
  alg bool Off = South_Downstream_EnteringTLs_East_Actuator.Red or South_Downstream_EnteringTLs_East_Actuator.RedRed;
  location:
    initial;
    marked;
    edge South_Downstream_EnteringTLs_East_SensorG_u_on when On;
    edge South_Downstream_EnteringTLs_East_SensorG_u_off when Off;
end
plant automaton South_Downstream_EnteringTLs_East_DynamicsR2:
  alg bool On = South_Downstream_EnteringTLs_East_Actuator.RedRed;
  alg bool Off = not South_Downstream_EnteringTLs_East_Actuator.RedRed;
  location:
    initial;
    marked;
    edge South_Downstream_EnteringTLs_East_SensorR2_u_on when On;
    edge South_Downstream_EnteringTLs_East_SensorR2_u_off when Off;
end
plant automaton South_Downstream_EnteringTLs_West_Actuator:
  location RedRed:
    marked;
    edge South_Downstream_EnteringTLs_West_Actuator_c_r goto Red;
  location Red:
    initial;
    marked;
    edge South_Downstream_EnteringTLs_West_Actuator_c_rr goto RedRed;
    edge South_Downstream_EnteringTLs_West_Actuator_c_rg goto RedGreen;
  location RedGreen:
    edge South_Downstream_EnteringTLs_West_Actuator_c_r goto Red;
    edge South_Downstream_EnteringTLs_West_Actuator_c_g goto Green;
  location Green:
    edge South_Downstream_EnteringTLs_West_Actuator_c_r goto Red;
end
plant automaton South_Downstream_EnteringTLs_West_SensorR1:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_EnteringTLs_West_SensorR1_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_EnteringTLs_West_SensorR1_u_off goto Off;
end
plant automaton South_Downstream_EnteringTLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_EnteringTLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_EnteringTLs_West_SensorG_u_off goto Off;
end
plant automaton South_Downstream_EnteringTLs_West_SensorR2:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_EnteringTLs_West_SensorR2_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_EnteringTLs_West_SensorR2_u_off goto Off;
end
plant automaton South_Downstream_EnteringTLs_West_DynamicsR1:
  alg bool On = not South_Downstream_EnteringTLs_West_Actuator.Green;
  alg bool Off = South_Downstream_EnteringTLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge South_Downstream_EnteringTLs_West_SensorR1_u_on when On;
    edge South_Downstream_EnteringTLs_West_SensorR1_u_off when Off;
end
plant automaton South_Downstream_EnteringTLs_West_DynamicsG:
  alg bool On = South_Downstream_EnteringTLs_West_Actuator.Green or South_Downstream_EnteringTLs_West_Actuator.RedGreen;
  alg bool Off = South_Downstream_EnteringTLs_West_Actuator.Red or South_Downstream_EnteringTLs_West_Actuator.RedRed;
  location:
    initial;
    marked;
    edge South_Downstream_EnteringTLs_West_SensorG_u_on when On;
    edge South_Downstream_EnteringTLs_West_SensorG_u_off when Off;
end
plant automaton South_Downstream_EnteringTLs_West_DynamicsR2:
  alg bool On = South_Downstream_EnteringTLs_West_Actuator.RedRed;
  alg bool Off = not South_Downstream_EnteringTLs_West_Actuator.RedRed;
  location:
    initial;
    marked;
    edge South_Downstream_EnteringTLs_West_SensorR2_u_on when On;
    edge South_Downstream_EnteringTLs_West_SensorR2_u_off when Off;
end
plant automaton South_Downstream_LeavingTLs_East_Actuator:
  location Red:
    initial;
    marked;
    edge South_Downstream_LeavingTLs_East_Actuator_c_g goto Green;
  location Green:
    edge South_Downstream_LeavingTLs_East_Actuator_c_r goto Red;
end
plant automaton South_Downstream_LeavingTLs_East_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_LeavingTLs_East_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_LeavingTLs_East_SensorR_u_off goto Off;
end
plant automaton South_Downstream_LeavingTLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_LeavingTLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_LeavingTLs_East_SensorG_u_off goto Off;
end
plant automaton South_Downstream_LeavingTLs_East_DynamicsR:
  alg bool On = not South_Downstream_LeavingTLs_East_Actuator.Green;
  alg bool Off = South_Downstream_LeavingTLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge South_Downstream_LeavingTLs_East_SensorR_u_on when On;
    edge South_Downstream_LeavingTLs_East_SensorR_u_off when Off;
end
plant automaton South_Downstream_LeavingTLs_East_DynamicsG:
  alg bool On = not South_Downstream_LeavingTLs_East_Actuator.Red;
  alg bool Off = South_Downstream_LeavingTLs_East_Actuator.Red;
  location:
    initial;
    marked;
    edge South_Downstream_LeavingTLs_East_SensorG_u_on when On;
    edge South_Downstream_LeavingTLs_East_SensorG_u_off when Off;
end
plant automaton South_Downstream_LeavingTLs_West_Actuator:
  location Red:
    initial;
    marked;
    edge South_Downstream_LeavingTLs_West_Actuator_c_g goto Green;
  location Green:
    edge South_Downstream_LeavingTLs_West_Actuator_c_r goto Red;
end
plant automaton South_Downstream_LeavingTLs_West_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_LeavingTLs_West_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_LeavingTLs_West_SensorR_u_off goto Off;
end
plant automaton South_Downstream_LeavingTLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge South_Downstream_LeavingTLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge South_Downstream_LeavingTLs_West_SensorG_u_off goto Off;
end
plant automaton South_Downstream_LeavingTLs_West_DynamicsR:
  alg bool On = not South_Downstream_LeavingTLs_West_Actuator.Green;
  alg bool Off = South_Downstream_LeavingTLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge South_Downstream_LeavingTLs_West_SensorR_u_on when On;
    edge South_Downstream_LeavingTLs_West_SensorR_u_off when Off;
end
plant automaton South_Downstream_LeavingTLs_West_DynamicsG:
  alg bool On = not South_Downstream_LeavingTLs_West_Actuator.Red;
  alg bool Off = South_Downstream_LeavingTLs_West_Actuator.Red;
  location:
    initial;
    marked;
    edge South_Downstream_LeavingTLs_West_SensorG_u_on when On;
    edge South_Downstream_LeavingTLs_West_SensorG_u_off when Off;
end
plant automaton South_Downstream_EqualWaterSensor:
  alg bool InitialEqual = false;
  location Unequal:
    initial not InitialEqual;
    marked not InitialEqual;
    edge South_Downstream_EqualWaterSensor_u_on goto Equal;
  location Equal:
    initial InitialEqual;
    marked InitialEqual;
    edge South_Downstream_EqualWaterSensor_u_off goto Unequal;
end
plant automaton South_EmergencyStop:
  location Inactive:
    initial;
    marked;
    edge South_EmergencyStop_u_activate goto Active;
  location Active:
    edge South_EmergencyStop_u_deactivate goto Inactive;
end
plant automaton South_Commands:
  monitor;
  location NoCommand:
    initial;
    marked;
    edge South_Commands_DownstreamGateOpen_act goto DownstreamGateOpen;
    edge South_Commands_DownstreamGateClose_act goto DownstreamGateClose;
    edge South_Commands_DownstreamGateStop_act goto DownstreamGateStop;
    edge South_Commands_DownstreamPaddleOpen_act goto DownstreamPaddleOpen;
    edge South_Commands_DownstreamPaddleClose_act goto DownstreamPaddleClose;
    edge South_Commands_DownstreamPaddleStop_act goto DownstreamPaddleStop;
    edge South_Commands_DownstreamEnteringTLRedRed_act goto DownstreamEnteringTLRedRed;
    edge South_Commands_DownstreamEnteringTLRed_act goto DownstreamEnteringTLRed;
    edge South_Commands_DownstreamEnteringTLRedGreen_act goto DownstreamEnteringTLRedGreen;
    edge South_Commands_DownstreamEnteringTLGreen_act goto DownstreamEnteringTLGreen;
    edge South_Commands_DownstreamLeavingTLRed_act goto DownstreamLeavingTLRed;
    edge South_Commands_DownstreamLeavingTLGreen_act goto DownstreamLeavingTLGreen;
    edge South_Commands_UpstreamGateOpen_act goto UpstreamGateOpen;
    edge South_Commands_UpstreamGateClose_act goto UpstreamGateClose;
    edge South_Commands_UpstreamGateStop_act goto UpstreamGateStop;
    edge South_Commands_UpstreamPaddleOpen_act goto UpstreamPaddleOpen;
    edge South_Commands_UpstreamPaddleClose_act goto UpstreamPaddleClose;
    edge South_Commands_UpstreamPaddleStop_act goto UpstreamPaddleStop;
    edge South_Commands_UpstreamEnteringTLRedRed_act goto UpstreamEnteringTLRedRed;
    edge South_Commands_UpstreamEnteringTLRed_act goto UpstreamEnteringTLRed;
    edge South_Commands_UpstreamEnteringTLRedGreen_act goto UpstreamEnteringTLRedGreen;
    edge South_Commands_UpstreamEnteringTLGreen_act goto UpstreamEnteringTLGreen;
    edge South_Commands_UpstreamLeavingTLRed_act goto UpstreamLeavingTLRed;
    edge South_Commands_UpstreamLeavingTLGreen_act goto UpstreamLeavingTLGreen;
  location DownstreamGateOpen:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamGateClose:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamGateStop:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamPaddleOpen:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamPaddleClose:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamPaddleStop:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamEnteringTLRedRed:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamEnteringTLRed:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamEnteringTLRedGreen:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamEnteringTLGreen:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamLeavingTLRed:
    edge South_Commands_Deactivate goto NoCommand;
  location DownstreamLeavingTLGreen:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamGateOpen:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamGateClose:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamGateStop:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamPaddleOpen:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamPaddleClose:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamPaddleStop:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamEnteringTLRedRed:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamEnteringTLRed:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamEnteringTLRedGreen:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamEnteringTLGreen:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamLeavingTLRed:
    edge South_Commands_Deactivate goto NoCommand;
  location UpstreamLeavingTLGreen:
    edge South_Commands_Deactivate goto NoCommand;
end
plant automaton Barrier_Downstream_TLs_East_Actuator:
  location Red:
    initial;
    marked;
    edge Barrier_Downstream_TLs_East_Actuator_c_g goto Green;
  location Green:
    edge Barrier_Downstream_TLs_East_Actuator_c_r goto Red;
end
plant automaton Barrier_Downstream_TLs_East_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge Barrier_Downstream_TLs_East_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge Barrier_Downstream_TLs_East_SensorR_u_off goto Off;
end
plant automaton Barrier_Downstream_TLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge Barrier_Downstream_TLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge Barrier_Downstream_TLs_East_SensorG_u_off goto Off;
end
plant automaton Barrier_Downstream_TLs_East_DynamicsR:
  alg bool On = not Barrier_Downstream_TLs_East_Actuator.Green;
  alg bool Off = Barrier_Downstream_TLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge Barrier_Downstream_TLs_East_SensorR_u_on when On;
    edge Barrier_Downstream_TLs_East_SensorR_u_off when Off;
end
plant automaton Barrier_Downstream_TLs_East_DynamicsG:
  alg bool On = not Barrier_Downstream_TLs_East_Actuator.Red;
  alg bool Off = Barrier_Downstream_TLs_East_Actuator.Red;
  location:
    initial;
    marked;
    edge Barrier_Downstream_TLs_East_SensorG_u_on when On;
    edge Barrier_Downstream_TLs_East_SensorG_u_off when Off;
end
plant automaton Barrier_Downstream_TLs_West_Actuator:
  location Red:
    initial;
    marked;
    edge Barrier_Downstream_TLs_West_Actuator_c_g goto Green;
  location Green:
    edge Barrier_Downstream_TLs_West_Actuator_c_r goto Red;
end
plant automaton Barrier_Downstream_TLs_West_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge Barrier_Downstream_TLs_West_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge Barrier_Downstream_TLs_West_SensorR_u_off goto Off;
end
plant automaton Barrier_Downstream_TLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge Barrier_Downstream_TLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge Barrier_Downstream_TLs_West_SensorG_u_off goto Off;
end
plant automaton Barrier_Downstream_TLs_West_DynamicsR:
  alg bool On = not Barrier_Downstream_TLs_West_Actuator.Green;
  alg bool Off = Barrier_Downstream_TLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge Barrier_Downstream_TLs_West_SensorR_u_on when On;
    edge Barrier_Downstream_TLs_West_SensorR_u_off when Off;
end
plant automaton Barrier_Downstream_TLs_West_DynamicsG:
  alg bool On = not Barrier_Downstream_TLs_West_Actuator.Red;
  alg bool Off = Barrier_Downstream_TLs_West_Actuator.Red;
  location:
    initial;
    marked;
    edge Barrier_Downstream_TLs_West_SensorG_u_on when On;
    edge Barrier_Downstream_TLs_West_SensorG_u_off when Off;
end
plant automaton Barrier_Upstream_TLs_East_Actuator:
  location Red:
    initial;
    marked;
    edge Barrier_Upstream_TLs_East_Actuator_c_g goto Green;
  location Green:
    edge Barrier_Upstream_TLs_East_Actuator_c_r goto Red;
end
plant automaton Barrier_Upstream_TLs_East_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge Barrier_Upstream_TLs_East_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge Barrier_Upstream_TLs_East_SensorR_u_off goto Off;
end
plant automaton Barrier_Upstream_TLs_East_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge Barrier_Upstream_TLs_East_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge Barrier_Upstream_TLs_East_SensorG_u_off goto Off;
end
plant automaton Barrier_Upstream_TLs_East_DynamicsR:
  alg bool On = not Barrier_Upstream_TLs_East_Actuator.Green;
  alg bool Off = Barrier_Upstream_TLs_East_Actuator.Green;
  location:
    initial;
    marked;
    edge Barrier_Upstream_TLs_East_SensorR_u_on when On;
    edge Barrier_Upstream_TLs_East_SensorR_u_off when Off;
end
plant automaton Barrier_Upstream_TLs_East_DynamicsG:
  alg bool On = not Barrier_Upstream_TLs_East_Actuator.Red;
  alg bool Off = Barrier_Upstream_TLs_East_Actuator.Red;
  location:
    initial;
    marked;
    edge Barrier_Upstream_TLs_East_SensorG_u_on when On;
    edge Barrier_Upstream_TLs_East_SensorG_u_off when Off;
end
plant automaton Barrier_Upstream_TLs_West_Actuator:
  location Red:
    initial;
    marked;
    edge Barrier_Upstream_TLs_West_Actuator_c_g goto Green;
  location Green:
    edge Barrier_Upstream_TLs_West_Actuator_c_r goto Red;
end
plant automaton Barrier_Upstream_TLs_West_SensorR:
  alg bool InitialOn = true;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge Barrier_Upstream_TLs_West_SensorR_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge Barrier_Upstream_TLs_West_SensorR_u_off goto Off;
end
plant automaton Barrier_Upstream_TLs_West_SensorG:
  alg bool InitialOn = false;
  location Off:
    initial not InitialOn;
    marked not InitialOn;
    edge Barrier_Upstream_TLs_West_SensorG_u_on goto On;
  location On:
    initial InitialOn;
    marked InitialOn;
    edge Barrier_Upstream_TLs_West_SensorG_u_off goto Off;
end
plant automaton Barrier_Upstream_TLs_West_DynamicsR:
  alg bool On = not Barrier_Upstream_TLs_West_Actuator.Green;
  alg bool Off = Barrier_Upstream_TLs_West_Actuator.Green;
  location:
    initial;
    marked;
    edge Barrier_Upstream_TLs_West_SensorR_u_on when On;
    edge Barrier_Upstream_TLs_West_SensorR_u_off when Off;
end
plant automaton Barrier_Upstream_TLs_West_DynamicsG:
  alg bool On = not Barrier_Upstream_TLs_West_Actuator.Red;
  alg bool Off = Barrier_Upstream_TLs_West_Actuator.Red;
  location:
    initial;
    marked;
    edge Barrier_Upstream_TLs_West_SensorG_u_on when On;
    edge Barrier_Upstream_TLs_West_SensorG_u_off when Off;
end
plant automaton Barrier_Barrier_Actuator:
  location Rest:
    initial;
    marked;
    edge Barrier_Barrier_Actuator_c_open goto Opening;
    edge Barrier_Barrier_Actuator_c_close goto Closing;
  location Opening:
    edge Barrier_Barrier_Actuator_c_emergencyStop, Barrier_Barrier_Actuator_c_endStopOpening goto Rest;
  location Closing:
    edge Barrier_Barrier_Actuator_c_emergencyStop, Barrier_Barrier_Actuator_c_endStopClosing goto Rest;
end
plant automaton Barrier_Barrier_Sensor:
  alg bool InitialLocationClosed = true;
  location Closed:
    initial InitialLocationClosed;
    marked InitialLocationClosed;
    edge Barrier_Barrier_Sensor_u_closed_off goto Intermediate;
  location Intermediate:
    edge Barrier_Barrier_Sensor_u_closed_on goto Closed;
    edge Barrier_Barrier_Sensor_u_open_on goto Open;
  location Open:
    initial not InitialLocationClosed;
    marked not InitialLocationClosed;
    edge Barrier_Barrier_Sensor_u_open_off goto Intermediate;
end
plant automaton Barrier_Barrier_Dynamics:
  location:
    initial;
    marked;
    edge Barrier_Barrier_Sensor_u_open_on, Barrier_Barrier_Sensor_u_closed_off when Barrier_Barrier_Actuator.Opening;
    edge Barrier_Barrier_Sensor_u_closed_on, Barrier_Barrier_Sensor_u_open_off when Barrier_Barrier_Actuator.Closing;
end
plant automaton Barrier_EmergencyStop:
  location Inactive:
    initial;
    marked;
    edge Barrier_EmergencyStop_u_activate goto Active;
  location Active:
    edge Barrier_EmergencyStop_u_deactivate goto Inactive;
end
plant automaton Barrier_Commands:
  monitor;
  location NoCommand:
    initial;
    marked;
    edge Barrier_Commands_BarrierOpen_act goto BarrierOpen;
    edge Barrier_Commands_BarrierClose_act goto BarrierClose;
    edge Barrier_Commands_BarrierStop_act goto BarrierStop;
    edge Barrier_Commands_DownstreamTLRed_act goto DownstreamTLRed;
    edge Barrier_Commands_DownstreamTLGreen_act goto DownstreamTLGreen;
    edge Barrier_Commands_UpstreamTLRed_act goto UpstreamTLRed;
    edge Barrier_Commands_UpstreamTLGreen_act goto UpstreamTLGreen;
  location BarrierOpen:
    edge Barrier_Commands_Deactivate goto NoCommand;
  location BarrierClose:
    edge Barrier_Commands_Deactivate goto NoCommand;
  location BarrierStop:
    edge Barrier_Commands_Deactivate goto NoCommand;
  location DownstreamTLRed:
    edge Barrier_Commands_Deactivate goto NoCommand;
  location DownstreamTLGreen:
    edge Barrier_Commands_Deactivate goto NoCommand;
  location UpstreamTLRed:
    edge Barrier_Commands_Deactivate goto NoCommand;
  location UpstreamTLGreen:
    edge Barrier_Commands_Deactivate goto NoCommand;
end
requirement invariant not North_Downstream_Paddles_Closed or not North_Downstream_Gates_Closed disables North_Upstream_Paddles_East_Actuator_c_open;
requirement invariant not North_Downstream_Paddles_Closed or not North_Downstream_Gates_Closed disables North_Upstream_Paddles_West_Actuator_c_open;
requirement invariant not North_Upstream_Paddles_Closed or not North_Upstream_Gates_Closed disables North_Downstream_Paddles_East_Actuator_c_open;
requirement invariant not North_Upstream_Paddles_Closed or not North_Upstream_Gates_Closed disables North_Downstream_Paddles_West_Actuator_c_open;
requirement invariant North_Downstream_EqualWaterSensor.Unequal or not North_Upstream_Paddles_Closed or not North_Upstream_Gates_Closed disables North_Downstream_Gates_East_Actuator_c_open;
requirement invariant North_Downstream_EqualWaterSensor.Unequal or not North_Upstream_Paddles_Closed or not North_Upstream_Gates_Closed disables North_Downstream_Gates_West_Actuator_c_open;
requirement invariant North_Upstream_EqualWaterSensor.Unequal or not North_Downstream_Paddles_Closed or not North_Downstream_Gates_Closed disables North_Upstream_Gates_East_Actuator_c_open;
requirement invariant North_Upstream_EqualWaterSensor.Unequal or not North_Downstream_Paddles_Closed or not North_Downstream_Gates_Closed disables North_Upstream_Gates_West_Actuator_c_open;
requirement invariant not North_Downstream_LeavingTLs_Red or not North_Downstream_Gates_Open disables North_Downstream_EnteringTLs_East_Actuator_c_g;
requirement invariant not North_Downstream_LeavingTLs_Red or not North_Downstream_Gates_Open disables North_Downstream_EnteringTLs_West_Actuator_c_g;
requirement invariant not North_Upstream_LeavingTLs_Red or not North_Upstream_Gates_Open disables North_Upstream_EnteringTLs_East_Actuator_c_g;
requirement invariant not North_Upstream_LeavingTLs_Red or not North_Upstream_Gates_Open disables North_Upstream_EnteringTLs_West_Actuator_c_g;
requirement invariant not North_Downstream_EnteringTLs_RedOrRedRed or not North_Downstream_LeavingTLs_Red disables North_Downstream_Gates_East_Actuator_c_close;
requirement invariant not North_Downstream_EnteringTLs_RedOrRedRed or not North_Downstream_LeavingTLs_Red disables North_Downstream_Gates_West_Actuator_c_close;
requirement invariant not North_Upstream_EnteringTLs_RedOrRedRed or not North_Upstream_LeavingTLs_Red disables North_Upstream_Gates_East_Actuator_c_close;
requirement invariant not North_Upstream_EnteringTLs_RedOrRedRed or not North_Upstream_LeavingTLs_Red disables North_Upstream_Gates_West_Actuator_c_close;
requirement invariant North_EmergencyStop.Active disables North_Downstream_Gates_East_Actuator_c_open;
requirement invariant North_EmergencyStop.Active disables North_Downstream_Gates_East_Actuator_c_close;
requirement invariant North_EmergencyStop.Active disables North_Downstream_Gates_West_Actuator_c_open;
requirement invariant North_EmergencyStop.Active disables North_Downstream_Gates_West_Actuator_c_close;
requirement invariant North_EmergencyStop.Active disables North_Upstream_Gates_East_Actuator_c_open;
requirement invariant North_EmergencyStop.Active disables North_Upstream_Gates_East_Actuator_c_close;
requirement invariant North_EmergencyStop.Active disables North_Upstream_Gates_West_Actuator_c_open;
requirement invariant North_EmergencyStop.Active disables North_Upstream_Gates_West_Actuator_c_close;
requirement invariant North_EmergencyStop.Active disables North_Downstream_Paddles_East_Actuator_c_open;
requirement invariant North_EmergencyStop.Active disables North_Downstream_Paddles_East_Actuator_c_close;
requirement invariant North_EmergencyStop.Active disables North_Downstream_Paddles_West_Actuator_c_open;
requirement invariant North_EmergencyStop.Active disables North_Downstream_Paddles_West_Actuator_c_close;
requirement invariant North_EmergencyStop.Active disables North_Upstream_Paddles_East_Actuator_c_open;
requirement invariant North_EmergencyStop.Active disables North_Upstream_Paddles_East_Actuator_c_close;
requirement invariant North_EmergencyStop.Active disables North_Upstream_Paddles_West_Actuator_c_open;
requirement invariant North_EmergencyStop.Active disables North_Upstream_Paddles_West_Actuator_c_close;
requirement invariant North_Downstream_Gates_East_Actuator_c_emergencyStop needs North_EmergencyStop.Active or North_Commands.DownstreamGateStop;
requirement invariant North_Downstream_Gates_West_Actuator_c_emergencyStop needs North_EmergencyStop.Active or North_Commands.DownstreamGateStop;
requirement invariant North_Upstream_Gates_East_Actuator_c_emergencyStop needs North_EmergencyStop.Active or North_Commands.UpstreamGateStop;
requirement invariant North_Upstream_Gates_West_Actuator_c_emergencyStop needs North_EmergencyStop.Active or North_Commands.UpstreamGateStop;
requirement invariant North_Downstream_Paddles_East_Actuator_c_emergencyStop needs North_EmergencyStop.Active or North_Commands.DownstreamPaddleStop;
requirement invariant North_Downstream_Paddles_West_Actuator_c_emergencyStop needs North_EmergencyStop.Active or North_Commands.DownstreamPaddleStop;
requirement invariant North_Upstream_Paddles_East_Actuator_c_emergencyStop needs North_EmergencyStop.Active or North_Commands.UpstreamPaddleStop;
requirement invariant North_Upstream_Paddles_West_Actuator_c_emergencyStop needs North_EmergencyStop.Active or North_Commands.UpstreamPaddleStop;
requirement invariant not North_Downstream_EnteringTLs_RedOrRedRed or not North_Downstream_Gates_Open disables North_Downstream_LeavingTLs_East_Actuator_c_g;
requirement invariant not North_Downstream_EnteringTLs_RedOrRedRed or not North_Downstream_Gates_Open disables North_Downstream_LeavingTLs_West_Actuator_c_g;
requirement invariant not North_Upstream_EnteringTLs_RedOrRedRed or not North_Upstream_Gates_Open disables North_Upstream_LeavingTLs_East_Actuator_c_g;
requirement invariant not North_Upstream_EnteringTLs_RedOrRedRed or not North_Upstream_Gates_Open disables North_Upstream_LeavingTLs_West_Actuator_c_g;
requirement invariant North_Downstream_Gates_East_Actuator_c_open needs North_Commands.DownstreamGateOpen;
requirement invariant North_Downstream_Gates_West_Actuator_c_open needs North_Commands.DownstreamGateOpen;
requirement invariant North_Upstream_Gates_East_Actuator_c_open needs North_Commands.UpstreamGateOpen;
requirement invariant North_Upstream_Gates_West_Actuator_c_open needs North_Commands.UpstreamGateOpen;
requirement invariant North_Downstream_Gates_East_Actuator_c_close needs North_Commands.DownstreamGateClose;
requirement invariant North_Downstream_Gates_West_Actuator_c_close needs North_Commands.DownstreamGateClose;
requirement invariant North_Upstream_Gates_East_Actuator_c_close needs North_Commands.UpstreamGateClose;
requirement invariant North_Upstream_Gates_West_Actuator_c_close needs North_Commands.UpstreamGateClose;
requirement invariant North_Downstream_Paddles_East_Actuator_c_open needs North_Commands.DownstreamPaddleOpen;
requirement invariant North_Downstream_Paddles_West_Actuator_c_open needs North_Commands.DownstreamPaddleOpen;
requirement invariant North_Upstream_Paddles_East_Actuator_c_open needs North_Commands.UpstreamPaddleOpen;
requirement invariant North_Upstream_Paddles_West_Actuator_c_open needs North_Commands.UpstreamPaddleOpen;
requirement invariant North_Downstream_Paddles_East_Actuator_c_close needs North_Commands.DownstreamPaddleClose;
requirement invariant North_Downstream_Paddles_West_Actuator_c_close needs North_Commands.DownstreamPaddleClose;
requirement invariant North_Upstream_Paddles_East_Actuator_c_close needs North_Commands.UpstreamPaddleClose;
requirement invariant North_Upstream_Paddles_West_Actuator_c_close needs North_Commands.UpstreamPaddleClose;
requirement invariant North_Downstream_EnteringTLs_East_Actuator_c_rr needs North_Commands.DownstreamEnteringTLRedRed;
requirement invariant North_Downstream_EnteringTLs_West_Actuator_c_rr needs North_Commands.DownstreamEnteringTLRedRed;
requirement invariant North_Upstream_EnteringTLs_East_Actuator_c_rr needs North_Commands.UpstreamEnteringTLRedRed;
requirement invariant North_Upstream_EnteringTLs_West_Actuator_c_rr needs North_Commands.UpstreamEnteringTLRedRed;
requirement invariant North_Downstream_EnteringTLs_East_Actuator_c_r needs North_Commands.DownstreamEnteringTLRed;
requirement invariant North_Downstream_EnteringTLs_West_Actuator_c_r needs North_Commands.DownstreamEnteringTLRed;
requirement invariant North_Upstream_EnteringTLs_East_Actuator_c_r needs North_Commands.UpstreamEnteringTLRed;
requirement invariant North_Upstream_EnteringTLs_West_Actuator_c_r needs North_Commands.UpstreamEnteringTLRed;
requirement invariant North_Downstream_EnteringTLs_East_Actuator_c_rg needs North_Commands.DownstreamEnteringTLRedGreen;
requirement invariant North_Downstream_EnteringTLs_West_Actuator_c_rg needs North_Commands.DownstreamEnteringTLRedGreen;
requirement invariant North_Upstream_EnteringTLs_East_Actuator_c_rg needs North_Commands.UpstreamEnteringTLRedGreen;
requirement invariant North_Upstream_EnteringTLs_West_Actuator_c_rg needs North_Commands.UpstreamEnteringTLRedGreen;
requirement invariant North_Downstream_EnteringTLs_East_Actuator_c_g needs North_Commands.DownstreamEnteringTLGreen;
requirement invariant North_Downstream_EnteringTLs_West_Actuator_c_g needs North_Commands.DownstreamEnteringTLGreen;
requirement invariant North_Upstream_EnteringTLs_East_Actuator_c_g needs North_Commands.UpstreamEnteringTLGreen;
requirement invariant North_Upstream_EnteringTLs_West_Actuator_c_g needs North_Commands.UpstreamEnteringTLGreen;
requirement invariant North_Downstream_LeavingTLs_East_Actuator_c_r needs North_Commands.DownstreamLeavingTLRed;
requirement invariant North_Downstream_LeavingTLs_West_Actuator_c_r needs North_Commands.DownstreamLeavingTLRed;
requirement invariant North_Upstream_LeavingTLs_East_Actuator_c_r needs North_Commands.UpstreamLeavingTLRed;
requirement invariant North_Upstream_LeavingTLs_West_Actuator_c_r needs North_Commands.UpstreamLeavingTLRed;
requirement invariant North_Downstream_LeavingTLs_East_Actuator_c_g needs North_Commands.DownstreamLeavingTLGreen;
requirement invariant North_Downstream_LeavingTLs_West_Actuator_c_g needs North_Commands.DownstreamLeavingTLGreen;
requirement invariant North_Upstream_LeavingTLs_East_Actuator_c_g needs North_Commands.UpstreamLeavingTLGreen;
requirement invariant North_Upstream_LeavingTLs_West_Actuator_c_g needs North_Commands.UpstreamLeavingTLGreen;
requirement invariant North_Upstream_Gates_East_Actuator_c_endStopOpening needs North_Upstream_Gates_East_Sensor.Open;
requirement invariant North_Upstream_Gates_East_Actuator_c_endStopClosing needs North_Upstream_Gates_East_Sensor.Closed;
requirement invariant North_Upstream_Gates_East_Actuator_c_open needs not North_Upstream_Gates_East_Sensor.Open;
requirement invariant North_Upstream_Gates_East_Actuator_c_close needs not North_Upstream_Gates_East_Sensor.Closed;
requirement invariant North_Upstream_Gates_West_Actuator_c_endStopOpening needs North_Upstream_Gates_West_Sensor.Open;
requirement invariant North_Upstream_Gates_West_Actuator_c_endStopClosing needs North_Upstream_Gates_West_Sensor.Closed;
requirement invariant North_Upstream_Gates_West_Actuator_c_open needs not North_Upstream_Gates_West_Sensor.Open;
requirement invariant North_Upstream_Gates_West_Actuator_c_close needs not North_Upstream_Gates_West_Sensor.Closed;
requirement invariant North_Upstream_Paddles_East_Actuator_c_endStopOpening needs North_Upstream_Paddles_East_Sensor.Open;
requirement invariant North_Upstream_Paddles_East_Actuator_c_endStopClosing needs North_Upstream_Paddles_East_Sensor.Closed;
requirement invariant North_Upstream_Paddles_East_Actuator_c_open needs not North_Upstream_Paddles_East_Sensor.Open;
requirement invariant North_Upstream_Paddles_East_Actuator_c_close needs not North_Upstream_Paddles_East_Sensor.Closed;
requirement invariant North_Upstream_Paddles_West_Actuator_c_endStopOpening needs North_Upstream_Paddles_West_Sensor.Open;
requirement invariant North_Upstream_Paddles_West_Actuator_c_endStopClosing needs North_Upstream_Paddles_West_Sensor.Closed;
requirement invariant North_Upstream_Paddles_West_Actuator_c_open needs not North_Upstream_Paddles_West_Sensor.Open;
requirement invariant North_Upstream_Paddles_West_Actuator_c_close needs not North_Upstream_Paddles_West_Sensor.Closed;
requirement invariant North_Downstream_Gates_East_Actuator_c_endStopOpening needs North_Downstream_Gates_East_Sensor.Open;
requirement invariant North_Downstream_Gates_East_Actuator_c_endStopClosing needs North_Downstream_Gates_East_Sensor.Closed;
requirement invariant North_Downstream_Gates_East_Actuator_c_open needs not North_Downstream_Gates_East_Sensor.Open;
requirement invariant North_Downstream_Gates_East_Actuator_c_close needs not North_Downstream_Gates_East_Sensor.Closed;
requirement invariant North_Downstream_Gates_West_Actuator_c_endStopOpening needs North_Downstream_Gates_West_Sensor.Open;
requirement invariant North_Downstream_Gates_West_Actuator_c_endStopClosing needs North_Downstream_Gates_West_Sensor.Closed;
requirement invariant North_Downstream_Gates_West_Actuator_c_open needs not North_Downstream_Gates_West_Sensor.Open;
requirement invariant North_Downstream_Gates_West_Actuator_c_close needs not North_Downstream_Gates_West_Sensor.Closed;
requirement invariant North_Downstream_Paddles_East_Actuator_c_endStopOpening needs North_Downstream_Paddles_East_Sensor.Open;
requirement invariant North_Downstream_Paddles_East_Actuator_c_endStopClosing needs North_Downstream_Paddles_East_Sensor.Closed;
requirement invariant North_Downstream_Paddles_East_Actuator_c_open needs not North_Downstream_Paddles_East_Sensor.Open;
requirement invariant North_Downstream_Paddles_East_Actuator_c_close needs not North_Downstream_Paddles_East_Sensor.Closed;
requirement invariant North_Downstream_Paddles_West_Actuator_c_endStopOpening needs North_Downstream_Paddles_West_Sensor.Open;
requirement invariant North_Downstream_Paddles_West_Actuator_c_endStopClosing needs North_Downstream_Paddles_West_Sensor.Closed;
requirement invariant North_Downstream_Paddles_West_Actuator_c_open needs not North_Downstream_Paddles_West_Sensor.Open;
requirement invariant North_Downstream_Paddles_West_Actuator_c_close needs not North_Downstream_Paddles_West_Sensor.Closed;
requirement invariant not South_Downstream_Paddles_Closed or not South_Downstream_Gates_Closed disables South_Upstream_Paddles_East_Actuator_c_open;
requirement invariant not South_Downstream_Paddles_Closed or not South_Downstream_Gates_Closed disables South_Upstream_Paddles_West_Actuator_c_open;
requirement invariant not South_Upstream_Paddles_Closed or not South_Upstream_Gates_Closed disables South_Downstream_Paddles_East_Actuator_c_open;
requirement invariant not South_Upstream_Paddles_Closed or not South_Upstream_Gates_Closed disables South_Downstream_Paddles_West_Actuator_c_open;
requirement invariant South_Downstream_EqualWaterSensor.Unequal or not South_Upstream_Paddles_Closed or not South_Upstream_Gates_Closed disables South_Downstream_Gates_East_Actuator_c_open;
requirement invariant South_Downstream_EqualWaterSensor.Unequal or not South_Upstream_Paddles_Closed or not South_Upstream_Gates_Closed disables South_Downstream_Gates_West_Actuator_c_open;
requirement invariant South_Upstream_EqualWaterSensor.Unequal or not South_Downstream_Paddles_Closed or not South_Downstream_Gates_Closed disables South_Upstream_Gates_East_Actuator_c_open;
requirement invariant South_Upstream_EqualWaterSensor.Unequal or not South_Downstream_Paddles_Closed or not South_Downstream_Gates_Closed disables South_Upstream_Gates_West_Actuator_c_open;
requirement invariant not South_Downstream_LeavingTLs_Red or not South_Downstream_Gates_Open disables South_Downstream_EnteringTLs_East_Actuator_c_g;
requirement invariant not South_Downstream_LeavingTLs_Red or not South_Downstream_Gates_Open disables South_Downstream_EnteringTLs_West_Actuator_c_g;
requirement invariant not South_Upstream_LeavingTLs_Red or not South_Upstream_Gates_Open disables South_Upstream_EnteringTLs_East_Actuator_c_g;
requirement invariant not South_Upstream_LeavingTLs_Red or not South_Upstream_Gates_Open disables South_Upstream_EnteringTLs_West_Actuator_c_g;
requirement invariant not South_Downstream_EnteringTLs_RedOrRedRed or not South_Downstream_LeavingTLs_Red disables South_Downstream_Gates_East_Actuator_c_close;
requirement invariant not South_Downstream_EnteringTLs_RedOrRedRed or not South_Downstream_LeavingTLs_Red disables South_Downstream_Gates_West_Actuator_c_close;
requirement invariant not South_Upstream_EnteringTLs_RedOrRedRed or not South_Upstream_LeavingTLs_Red disables South_Upstream_Gates_East_Actuator_c_close;
requirement invariant not South_Upstream_EnteringTLs_RedOrRedRed or not South_Upstream_LeavingTLs_Red disables South_Upstream_Gates_West_Actuator_c_close;
requirement invariant South_EmergencyStop.Active disables South_Downstream_Gates_East_Actuator_c_open;
requirement invariant South_EmergencyStop.Active disables South_Downstream_Gates_East_Actuator_c_close;
requirement invariant South_EmergencyStop.Active disables South_Downstream_Gates_West_Actuator_c_open;
requirement invariant South_EmergencyStop.Active disables South_Downstream_Gates_West_Actuator_c_close;
requirement invariant South_EmergencyStop.Active disables South_Upstream_Gates_East_Actuator_c_open;
requirement invariant South_EmergencyStop.Active disables South_Upstream_Gates_East_Actuator_c_close;
requirement invariant South_EmergencyStop.Active disables South_Upstream_Gates_West_Actuator_c_open;
requirement invariant South_EmergencyStop.Active disables South_Upstream_Gates_West_Actuator_c_close;
requirement invariant South_EmergencyStop.Active disables South_Downstream_Paddles_East_Actuator_c_open;
requirement invariant South_EmergencyStop.Active disables South_Downstream_Paddles_East_Actuator_c_close;
requirement invariant South_EmergencyStop.Active disables South_Downstream_Paddles_West_Actuator_c_open;
requirement invariant South_EmergencyStop.Active disables South_Downstream_Paddles_West_Actuator_c_close;
requirement invariant South_EmergencyStop.Active disables South_Upstream_Paddles_East_Actuator_c_open;
requirement invariant South_EmergencyStop.Active disables South_Upstream_Paddles_East_Actuator_c_close;
requirement invariant South_EmergencyStop.Active disables South_Upstream_Paddles_West_Actuator_c_open;
requirement invariant South_EmergencyStop.Active disables South_Upstream_Paddles_West_Actuator_c_close;
requirement invariant South_Downstream_Gates_East_Actuator_c_emergencyStop needs South_EmergencyStop.Active or South_Commands.DownstreamGateStop;
requirement invariant South_Downstream_Gates_West_Actuator_c_emergencyStop needs South_EmergencyStop.Active or South_Commands.DownstreamGateStop;
requirement invariant South_Upstream_Gates_East_Actuator_c_emergencyStop needs South_EmergencyStop.Active or South_Commands.UpstreamGateStop;
requirement invariant South_Upstream_Gates_West_Actuator_c_emergencyStop needs South_EmergencyStop.Active or South_Commands.UpstreamGateStop;
requirement invariant South_Downstream_Paddles_East_Actuator_c_emergencyStop needs South_EmergencyStop.Active or South_Commands.DownstreamPaddleStop;
requirement invariant South_Downstream_Paddles_West_Actuator_c_emergencyStop needs South_EmergencyStop.Active or South_Commands.DownstreamPaddleStop;
requirement invariant South_Upstream_Paddles_East_Actuator_c_emergencyStop needs South_EmergencyStop.Active or South_Commands.UpstreamPaddleStop;
requirement invariant South_Upstream_Paddles_West_Actuator_c_emergencyStop needs South_EmergencyStop.Active or South_Commands.UpstreamPaddleStop;
requirement invariant not South_Downstream_EnteringTLs_RedOrRedRed or not South_Downstream_Gates_Open disables South_Downstream_LeavingTLs_East_Actuator_c_g;
requirement invariant not South_Downstream_EnteringTLs_RedOrRedRed or not South_Downstream_Gates_Open disables South_Downstream_LeavingTLs_West_Actuator_c_g;
requirement invariant not South_Upstream_EnteringTLs_RedOrRedRed or not South_Upstream_Gates_Open disables South_Upstream_LeavingTLs_East_Actuator_c_g;
requirement invariant not South_Upstream_EnteringTLs_RedOrRedRed or not South_Upstream_Gates_Open disables South_Upstream_LeavingTLs_West_Actuator_c_g;
requirement invariant South_Downstream_Gates_East_Actuator_c_open needs South_Commands.DownstreamGateOpen;
requirement invariant South_Downstream_Gates_West_Actuator_c_open needs South_Commands.DownstreamGateOpen;
requirement invariant South_Upstream_Gates_East_Actuator_c_open needs South_Commands.UpstreamGateOpen;
requirement invariant South_Upstream_Gates_West_Actuator_c_open needs South_Commands.UpstreamGateOpen;
requirement invariant South_Downstream_Gates_East_Actuator_c_close needs South_Commands.DownstreamGateClose;
requirement invariant South_Downstream_Gates_West_Actuator_c_close needs South_Commands.DownstreamGateClose;
requirement invariant South_Upstream_Gates_East_Actuator_c_close needs South_Commands.UpstreamGateClose;
requirement invariant South_Upstream_Gates_West_Actuator_c_close needs South_Commands.UpstreamGateClose;
requirement invariant South_Downstream_Paddles_East_Actuator_c_open needs South_Commands.DownstreamPaddleOpen;
requirement invariant South_Downstream_Paddles_West_Actuator_c_open needs South_Commands.DownstreamPaddleOpen;
requirement invariant South_Upstream_Paddles_East_Actuator_c_open needs South_Commands.UpstreamPaddleOpen;
requirement invariant South_Upstream_Paddles_West_Actuator_c_open needs South_Commands.UpstreamPaddleOpen;
requirement invariant South_Downstream_Paddles_East_Actuator_c_close needs South_Commands.DownstreamPaddleClose;
requirement invariant South_Downstream_Paddles_West_Actuator_c_close needs South_Commands.DownstreamPaddleClose;
requirement invariant South_Upstream_Paddles_East_Actuator_c_close needs South_Commands.UpstreamPaddleClose;
requirement invariant South_Upstream_Paddles_West_Actuator_c_close needs South_Commands.UpstreamPaddleClose;
requirement invariant South_Downstream_EnteringTLs_East_Actuator_c_rr needs South_Commands.DownstreamEnteringTLRedRed;
requirement invariant South_Downstream_EnteringTLs_West_Actuator_c_rr needs South_Commands.DownstreamEnteringTLRedRed;
requirement invariant South_Upstream_EnteringTLs_East_Actuator_c_rr needs South_Commands.UpstreamEnteringTLRedRed;
requirement invariant South_Upstream_EnteringTLs_West_Actuator_c_rr needs South_Commands.UpstreamEnteringTLRedRed;
requirement invariant South_Downstream_EnteringTLs_East_Actuator_c_r needs South_Commands.DownstreamEnteringTLRed;
requirement invariant South_Downstream_EnteringTLs_West_Actuator_c_r needs South_Commands.DownstreamEnteringTLRed;
requirement invariant South_Upstream_EnteringTLs_East_Actuator_c_r needs South_Commands.UpstreamEnteringTLRed;
requirement invariant South_Upstream_EnteringTLs_West_Actuator_c_r needs South_Commands.UpstreamEnteringTLRed;
requirement invariant South_Downstream_EnteringTLs_East_Actuator_c_rg needs South_Commands.DownstreamEnteringTLRedGreen;
requirement invariant South_Downstream_EnteringTLs_West_Actuator_c_rg needs South_Commands.DownstreamEnteringTLRedGreen;
requirement invariant South_Upstream_EnteringTLs_East_Actuator_c_rg needs South_Commands.UpstreamEnteringTLRedGreen;
requirement invariant South_Upstream_EnteringTLs_West_Actuator_c_rg needs South_Commands.UpstreamEnteringTLRedGreen;
requirement invariant South_Downstream_EnteringTLs_East_Actuator_c_g needs South_Commands.DownstreamEnteringTLGreen;
requirement invariant South_Downstream_EnteringTLs_West_Actuator_c_g needs South_Commands.DownstreamEnteringTLGreen;
requirement invariant South_Upstream_EnteringTLs_East_Actuator_c_g needs South_Commands.UpstreamEnteringTLGreen;
requirement invariant South_Upstream_EnteringTLs_West_Actuator_c_g needs South_Commands.UpstreamEnteringTLGreen;
requirement invariant South_Downstream_LeavingTLs_East_Actuator_c_r needs South_Commands.DownstreamLeavingTLRed;
requirement invariant South_Downstream_LeavingTLs_West_Actuator_c_r needs South_Commands.DownstreamLeavingTLRed;
requirement invariant South_Upstream_LeavingTLs_East_Actuator_c_r needs South_Commands.UpstreamLeavingTLRed;
requirement invariant South_Upstream_LeavingTLs_West_Actuator_c_r needs South_Commands.UpstreamLeavingTLRed;
requirement invariant South_Downstream_LeavingTLs_East_Actuator_c_g needs South_Commands.DownstreamLeavingTLGreen;
requirement invariant South_Downstream_LeavingTLs_West_Actuator_c_g needs South_Commands.DownstreamLeavingTLGreen;
requirement invariant South_Upstream_LeavingTLs_East_Actuator_c_g needs South_Commands.UpstreamLeavingTLGreen;
requirement invariant South_Upstream_LeavingTLs_West_Actuator_c_g needs South_Commands.UpstreamLeavingTLGreen;
requirement invariant South_Upstream_Gates_East_Actuator_c_endStopOpening needs South_Upstream_Gates_East_Sensor.Open;
requirement invariant South_Upstream_Gates_East_Actuator_c_endStopClosing needs South_Upstream_Gates_East_Sensor.Closed;
requirement invariant South_Upstream_Gates_East_Actuator_c_open needs not South_Upstream_Gates_East_Sensor.Open;
requirement invariant South_Upstream_Gates_East_Actuator_c_close needs not South_Upstream_Gates_East_Sensor.Closed;
requirement invariant South_Upstream_Gates_West_Actuator_c_endStopOpening needs South_Upstream_Gates_West_Sensor.Open;
requirement invariant South_Upstream_Gates_West_Actuator_c_endStopClosing needs South_Upstream_Gates_West_Sensor.Closed;
requirement invariant South_Upstream_Gates_West_Actuator_c_open needs not South_Upstream_Gates_West_Sensor.Open;
requirement invariant South_Upstream_Gates_West_Actuator_c_close needs not South_Upstream_Gates_West_Sensor.Closed;
requirement invariant South_Upstream_Paddles_East_Actuator_c_endStopOpening needs South_Upstream_Paddles_East_Sensor.Open;
requirement invariant South_Upstream_Paddles_East_Actuator_c_endStopClosing needs South_Upstream_Paddles_East_Sensor.Closed;
requirement invariant South_Upstream_Paddles_East_Actuator_c_open needs not South_Upstream_Paddles_East_Sensor.Open;
requirement invariant South_Upstream_Paddles_East_Actuator_c_close needs not South_Upstream_Paddles_East_Sensor.Closed;
requirement invariant South_Upstream_Paddles_West_Actuator_c_endStopOpening needs South_Upstream_Paddles_West_Sensor.Open;
requirement invariant South_Upstream_Paddles_West_Actuator_c_endStopClosing needs South_Upstream_Paddles_West_Sensor.Closed;
requirement invariant South_Upstream_Paddles_West_Actuator_c_open needs not South_Upstream_Paddles_West_Sensor.Open;
requirement invariant South_Upstream_Paddles_West_Actuator_c_close needs not South_Upstream_Paddles_West_Sensor.Closed;
requirement invariant South_Downstream_Gates_East_Actuator_c_endStopOpening needs South_Downstream_Gates_East_Sensor.Open;
requirement invariant South_Downstream_Gates_East_Actuator_c_endStopClosing needs South_Downstream_Gates_East_Sensor.Closed;
requirement invariant South_Downstream_Gates_East_Actuator_c_open needs not South_Downstream_Gates_East_Sensor.Open;
requirement invariant South_Downstream_Gates_East_Actuator_c_close needs not South_Downstream_Gates_East_Sensor.Closed;
requirement invariant South_Downstream_Gates_West_Actuator_c_endStopOpening needs South_Downstream_Gates_West_Sensor.Open;
requirement invariant South_Downstream_Gates_West_Actuator_c_endStopClosing needs South_Downstream_Gates_West_Sensor.Closed;
requirement invariant South_Downstream_Gates_West_Actuator_c_open needs not South_Downstream_Gates_West_Sensor.Open;
requirement invariant South_Downstream_Gates_West_Actuator_c_close needs not South_Downstream_Gates_West_Sensor.Closed;
requirement invariant South_Downstream_Paddles_East_Actuator_c_endStopOpening needs South_Downstream_Paddles_East_Sensor.Open;
requirement invariant South_Downstream_Paddles_East_Actuator_c_endStopClosing needs South_Downstream_Paddles_East_Sensor.Closed;
requirement invariant South_Downstream_Paddles_East_Actuator_c_open needs not South_Downstream_Paddles_East_Sensor.Open;
requirement invariant South_Downstream_Paddles_East_Actuator_c_close needs not South_Downstream_Paddles_East_Sensor.Closed;
requirement invariant South_Downstream_Paddles_West_Actuator_c_endStopOpening needs South_Downstream_Paddles_West_Sensor.Open;
requirement invariant South_Downstream_Paddles_West_Actuator_c_endStopClosing needs South_Downstream_Paddles_West_Sensor.Closed;
requirement invariant South_Downstream_Paddles_West_Actuator_c_open needs not South_Downstream_Paddles_West_Sensor.Open;
requirement invariant South_Downstream_Paddles_West_Actuator_c_close needs not South_Downstream_Paddles_West_Sensor.Closed;
requirement invariant Barrier_Barrier_Actuator_c_close needs Barrier_Downstream_TLs_Red and Barrier_Upstream_TLs_Red;
requirement invariant Barrier_Downstream_TLs_East_Actuator_c_g needs Barrier_Barrier_Open and Barrier_Commands.DownstreamTLGreen;
requirement invariant Barrier_Downstream_TLs_West_Actuator_c_g needs Barrier_Barrier_Open and Barrier_Commands.DownstreamTLGreen;
requirement invariant Barrier_Upstream_TLs_East_Actuator_c_g needs Barrier_Barrier_Open and Barrier_Commands.UpstreamTLGreen;
requirement invariant Barrier_Upstream_TLs_West_Actuator_c_g needs Barrier_Barrier_Open and Barrier_Commands.UpstreamTLGreen;
requirement invariant Barrier_Downstream_TLs_East_Actuator_c_r needs Barrier_Commands.DownstreamTLRed;
requirement invariant Barrier_Downstream_TLs_West_Actuator_c_r needs Barrier_Commands.DownstreamTLRed;
requirement invariant Barrier_Upstream_TLs_East_Actuator_c_r needs Barrier_Commands.UpstreamTLRed;
requirement invariant Barrier_Upstream_TLs_West_Actuator_c_r needs Barrier_Commands.UpstreamTLRed;
requirement invariant Barrier_Barrier_Actuator_c_open needs Barrier_Commands.BarrierOpen;
requirement invariant Barrier_Barrier_Actuator_c_close needs Barrier_Commands.BarrierClose;
requirement invariant Barrier_Barrier_Actuator_c_emergencyStop needs Barrier_EmergencyStop.Active or Barrier_Commands.BarrierStop;
requirement invariant Barrier_Barrier_Actuator_c_endStopOpening needs Barrier_Barrier_Sensor.Open;
requirement invariant Barrier_Barrier_Actuator_c_endStopClosing needs Barrier_Barrier_Sensor.Closed;
requirement invariant Barrier_Barrier_Actuator_c_open needs not Barrier_Barrier_Sensor.Open;
requirement invariant Barrier_Barrier_Actuator_c_close needs not Barrier_Barrier_Sensor.Closed;
