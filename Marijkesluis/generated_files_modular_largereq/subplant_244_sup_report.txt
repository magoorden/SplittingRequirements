Reading CIF file "generated_files_modular_largereq/subplant_244.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name                      Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   Barrier_Barrier_Actuator  0      2 * 2     3 * 2       4 * 2       75%
  2      location pointer  n/a   Barrier_Barrier_Sensor    1      2 * 2     3 * 2       4 * 2       75%
  3      location pointer  n/a   Barrier_Commands          2      3 * 2     8 * 2       8 * 2       100%
  4      location pointer  n/a   Barrier_EmergencyStop     3      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  ------------------------  -----  --------  ----------  ----------  -----------
  Total                                                    4      16        32          36          ~89%

Applying automatic variable ordering:
  Number of hyperedges: 20

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    5 (total)                 0.25 (avg/edge) [before]
    Total span:                    5 (total)                 0.25 (avg/edge) [iteration 1]
    Total span:                    5 (total)                 0.25 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    5 (total)                 0.25 (avg/edge) [before]
    Total span:                    5 (total)                 0.25 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     Barrier_Barrier_Actuator.Rest
Initial   (aut/locs init predicate):     Barrier_Barrier_Sensor.Closed
Initial   (aut/locs init predicate):     true
Initial   (aut/locs init predicate):     Barrier_EmergencyStop.Inactive
Initial   (aut/locs init predicate):     Barrier_Commands.NoCommand
Initial   (auts/locs init predicate):    Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)
Initial   (uncontrolled system):         Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)
Initial   (system, combined init/inv):   Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   Barrier_Barrier_Actuator.Rest
Marked    (aut/locs marker predicate):   Barrier_Barrier_Sensor.Closed
Marked    (aut/locs marker predicate):   true
Marked    (aut/locs marker predicate):   Barrier_EmergencyStop.Inactive
Marked    (aut/locs marker predicate):   Barrier_Commands.NoCommand
Marked    (auts/locs marker predicate):  Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)
Marked    (uncontrolled system):         Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)
Marked    (system, combined marked/inv): Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)

State/event exclusion requirements:
  Event "Barrier_Barrier_Actuator_c_emergencyStop" needs:
    (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active or (Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active or (Barrier_Commands.BarrierStop or Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: Barrier_Barrier_Actuator_c_open) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Opening)
    Edge: (event: Barrier_Barrier_Actuator_c_close) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Closing)
    Edge: (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Closing) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Actuator_c_endStopOpening) (guard: Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Actuator_c_endStopClosing) (guard: Barrier_Barrier_Actuator.Closing) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Sensor_u_closed_off) (guard: Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Intermediate)
    Edge: (event: Barrier_Barrier_Sensor_u_closed_on) (guard: Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Closed)
    Edge: (event: Barrier_Barrier_Sensor_u_open_on) (guard: Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Open)
    Edge: (event: Barrier_Barrier_Sensor_u_open_off) (guard: Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Open) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Intermediate)
    Edge: (event: Barrier_EmergencyStop_u_activate) (guard: Barrier_EmergencyStop.Inactive) (assignments: Barrier_EmergencyStop := Barrier_EmergencyStop.Active)
    Edge: (event: Barrier_EmergencyStop_u_deactivate) (guard: Barrier_EmergencyStop.Active) (assignments: Barrier_EmergencyStop := Barrier_EmergencyStop.Inactive)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierOpen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierClose) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierStop) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.DownstreamTLRed) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.DownstreamTLGreen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.UpstreamTLRed) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.UpstreamTLGreen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "Barrier_Barrier_Actuator" (group: 0, domain: 0+1, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> true [range: true, variable: location pointer for automaton "Barrier_Barrier_Sensor" (group: 1, domain: 2+3, BDD variables: 2, CIF/BDD values: 3/4)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest): guard: Barrier_Barrier_Actuator.Opening -> Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Opening and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)) [requirement: (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active or (Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active or (Barrier_Commands.BarrierStop or Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)].
Edge (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Closing) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest): guard: Barrier_Barrier_Actuator.Closing -> Barrier_Barrier_Actuator.Closing and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Closing and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Closing and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Closing and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)) [requirement: (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active or (Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active or (Barrier_Commands.BarrierStop or Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: Barrier_Barrier_Actuator_c_open) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Opening)
    Edge: (event: Barrier_Barrier_Actuator_c_close) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Closing)
    Edge: (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Opening -> Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Opening and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active))) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Closing -> Barrier_Barrier_Actuator.Closing and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Closing and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Closing and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Closing and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active))) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Actuator_c_endStopOpening) (guard: Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Actuator_c_endStopClosing) (guard: Barrier_Barrier_Actuator.Closing) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Sensor_u_closed_off) (guard: Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Intermediate)
    Edge: (event: Barrier_Barrier_Sensor_u_closed_on) (guard: Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Closed)
    Edge: (event: Barrier_Barrier_Sensor_u_open_on) (guard: Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Open)
    Edge: (event: Barrier_Barrier_Sensor_u_open_off) (guard: Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Open) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Intermediate)
    Edge: (event: Barrier_EmergencyStop_u_activate) (guard: Barrier_EmergencyStop.Inactive) (assignments: Barrier_EmergencyStop := Barrier_EmergencyStop.Active)
    Edge: (event: Barrier_EmergencyStop_u_deactivate) (guard: Barrier_EmergencyStop.Active) (assignments: Barrier_EmergencyStop := Barrier_EmergencyStop.Inactive)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierOpen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierClose) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierStop) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.DownstreamTLRed) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.DownstreamTLGreen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.UpstreamTLRed) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.UpstreamTLGreen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) -> not Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) [backward reach with edge: (event: Barrier_Barrier_Actuator_c_endStopOpening) (guard: Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) -> not Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) [backward reach with edge: (event: Barrier_Barrier_Actuator_c_endStopClosing) (guard: Barrier_Barrier_Actuator.Closing) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) -> Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or (Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Open and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)) [backward reach with edge: (event: Barrier_Barrier_Sensor_u_closed_on) (guard: Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Closed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or (Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Open and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)) -> Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or (Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)) [backward reach with edge: (event: Barrier_Barrier_Sensor_u_open_off) (guard: Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Open) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Intermediate), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or (Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)) -> Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.NoCommand) or Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.NoCommand) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.NoCommand) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.NoCommand)) [backward reach with edge: (event: Barrier_EmergencyStop_u_deactivate) (guard: Barrier_EmergencyStop.Active) (assignments: Barrier_EmergencyStop := Barrier_EmergencyStop.Inactive), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.NoCommand) or Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.NoCommand) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.NoCommand) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.NoCommand)) -> Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen))) [backward reach with edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierOpen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen))) -> Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.BarrierOpen) or (Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierOpen)) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierOpen) or (Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.BarrierOpen))) [backward reach with edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierClose) (assignments: Barrier_Commands := Barrier_Commands.NoCommand), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.BarrierOpen) or (Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierOpen)) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierOpen) or (Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.BarrierOpen))) -> Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop)))) [backward reach with edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierStop) (assignments: Barrier_Commands := Barrier_Commands.NoCommand), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: Barrier_Barrier_Actuator.Rest and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop)))) -> <bdd 9n 12p> [backward reach with edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.DownstreamTLRed) (assignments: Barrier_Commands := Barrier_Commands.NoCommand), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 9n 12p> -> (not Barrier_Barrier_Actuator.Rest or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and (not Barrier_Barrier_Actuator.Rest or not Barrier_Barrier_Sensor.Open) and ((not Barrier_Barrier_Actuator.Rest or not Barrier_Barrier_Sensor.Intermediate) and (not Barrier_Barrier_Actuator.Closing or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen))) and ((not Barrier_Barrier_Actuator.Closing or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and (not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and ((not Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and (not Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate))) [backward reach with edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.DownstreamTLGreen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (not Barrier_Barrier_Actuator.Rest or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and (not Barrier_Barrier_Actuator.Rest or not Barrier_Barrier_Sensor.Open) and ((not Barrier_Barrier_Actuator.Rest or not Barrier_Barrier_Sensor.Intermediate) and (not Barrier_Barrier_Actuator.Closing or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen))) and ((not Barrier_Barrier_Actuator.Closing or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and (not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and ((not Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and (not Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate))) -> <bdd 9n 12p> [backward reach with edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.UpstreamTLRed) (assignments: Barrier_Commands := Barrier_Commands.NoCommand), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 9n 12p> -> Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed or Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate or (Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed) [backward reach with edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.UpstreamTLGreen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed or Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate or (Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed) -> (not Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and (not Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate) [backward reach with edge: (event: Barrier_Barrier_Actuator_c_close) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (not Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and (not Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate) -> <bdd 11n 11p> [backward reach with edge: (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Opening -> Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Opening and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active))) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 11p> -> true [backward reach with edge: (event: Barrier_Barrier_Actuator_c_endStopOpening) (guard: Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) -> not Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) [forward reach with edge: (event: Barrier_Barrier_Actuator_c_open) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) -> not Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) [forward reach with edge: (event: Barrier_Barrier_Actuator_c_close) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) -> not Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Open and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) [forward reach with edge: (event: Barrier_Barrier_Sensor_u_closed_off) (guard: Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Intermediate), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Open and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) -> not Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or (Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)) [forward reach with edge: (event: Barrier_Barrier_Sensor_u_open_on) (guard: Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Open), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or (Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)) -> not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.NoCommand) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.NoCommand) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.NoCommand)) [forward reach with edge: (event: Barrier_EmergencyStop_u_activate) (guard: Barrier_EmergencyStop.Inactive) (assignments: Barrier_EmergencyStop := Barrier_EmergencyStop.Active), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.NoCommand) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.NoCommand) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.NoCommand)) -> not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen))) [forward reach with edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierOpen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen)) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen))) -> not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or (not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.BarrierOpen) or Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose))) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierOpen) or (Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierOpen))) [forward reach with edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierClose), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or (not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and Barrier_Commands.BarrierOpen) or Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose))) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierOpen) or (Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose)) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierOpen))) -> not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop)))) [forward reach with edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierStop), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop))) or Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.NoCommand or Barrier_Commands.BarrierOpen or (Barrier_Commands.BarrierClose or Barrier_Commands.BarrierStop)))) -> (Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLRed)) and (Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.DownstreamTLGreen and not Barrier_Commands.UpstreamTLGreen)) and ((Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate)) and ((not Barrier_Barrier_Actuator.Opening or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed)) and (not Barrier_Barrier_Actuator.Opening or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.DownstreamTLGreen and not Barrier_Commands.UpstreamTLGreen)) and ((not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed)) and (not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.DownstreamTLGreen and not Barrier_Commands.UpstreamTLGreen)))) [forward reach with edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.DownstreamTLRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLRed)) and (Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.DownstreamTLGreen and not Barrier_Commands.UpstreamTLGreen)) and ((Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate)) and ((not Barrier_Barrier_Actuator.Opening or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed)) and (not Barrier_Barrier_Actuator.Opening or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.DownstreamTLGreen and not Barrier_Commands.UpstreamTLGreen)) and ((not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed)) and (not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.DownstreamTLGreen and not Barrier_Commands.UpstreamTLGreen)))) -> (Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and ((Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate) and ((not Barrier_Barrier_Actuator.Opening or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and (not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)))) [forward reach with edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.DownstreamTLGreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and ((Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate) and ((not Barrier_Barrier_Actuator.Opening or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)) and (not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLRed and not Barrier_Commands.UpstreamTLGreen)))) -> (Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLGreen)) and (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and ((Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate) and ((not Barrier_Barrier_Actuator.Opening or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLGreen)) and (not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLGreen)))) [forward reach with edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.UpstreamTLRed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Closed or not Barrier_Commands.UpstreamTLGreen)) and (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and ((Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate) and ((not Barrier_Barrier_Actuator.Opening or (Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLGreen)) and (not Barrier_Barrier_Actuator.Opening or (not Barrier_Barrier_Sensor.Intermediate or not Barrier_Commands.UpstreamTLGreen)))) -> (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate) [forward reach with edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.UpstreamTLGreen), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Open) and (Barrier_Barrier_Actuator.Opening or not Barrier_Barrier_Sensor.Intermediate) -> <bdd 13n 12p> [forward reach with edge: (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Opening -> Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Opening and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active))) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 12p> -> (not Barrier_Barrier_Actuator.Closing or not Barrier_Barrier_Sensor.Open) and (not Barrier_Barrier_Actuator.Closing or not Barrier_Barrier_Sensor.Intermediate) [forward reach with edge: (event: Barrier_Barrier_Actuator_c_endStopOpening) (guard: Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: (not Barrier_Barrier_Actuator.Closing or not Barrier_Barrier_Sensor.Open) and (not Barrier_Barrier_Actuator.Closing or not Barrier_Barrier_Sensor.Intermediate) -> true [forward reach with edge: (event: Barrier_Barrier_Actuator_c_close) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Closing), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: Barrier_Barrier_Actuator_c_open) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Opening): guard: Barrier_Barrier_Actuator.Rest -> not Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Actuator.Opening.
Edge (event: Barrier_Barrier_Actuator_c_close) (guard: Barrier_Barrier_Actuator.Rest) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Closing): guard: Barrier_Barrier_Actuator.Rest -> not Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Actuator.Opening.
Edge (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Opening -> Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Opening and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active))) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest): guard: Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Opening and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)) -> Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierStop) or Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)) or (Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierStop) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active))).
Edge (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Closing -> Barrier_Barrier_Actuator.Closing and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Closing and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Closing and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Closing and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active))) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest): guard: Barrier_Barrier_Actuator.Closing and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Closing and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Closing and Barrier_Commands.BarrierStop or Barrier_Barrier_Actuator.Closing and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)) -> Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierStop) or Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)) or (Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierStop) or Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active))).
Edge (event: Barrier_Barrier_Actuator_c_endStopOpening) (guard: Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest): guard: Barrier_Barrier_Actuator.Opening -> Barrier_Barrier_Actuator.Opening.
Edge (event: Barrier_Barrier_Actuator_c_endStopClosing) (guard: Barrier_Barrier_Actuator.Closing) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest): guard: Barrier_Barrier_Actuator.Closing -> not Barrier_Barrier_Actuator.Rest and not Barrier_Barrier_Actuator.Opening.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: Barrier_Barrier_Actuator_c_open) (guard: Barrier_Barrier_Actuator.Rest -> not Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Opening)
    Edge: (event: Barrier_Barrier_Actuator_c_close) (guard: Barrier_Barrier_Actuator.Rest -> not Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Closing)
    Edge: (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Opening -> Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierStop) or Barrier_Barrier_Actuator.Opening and not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)) or (Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Opening and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierStop) or Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)))) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Actuator_c_emergencyStop) (guard: Barrier_Barrier_Actuator.Closing -> Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Closing and (not Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierStop) or Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)) or (Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.NoCommand or Barrier_Commands.BarrierClose or (Barrier_Commands.DownstreamTLRed or Barrier_Commands.UpstreamTLRed)) and Barrier_EmergencyStop.Active) or Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate and ((Barrier_Commands.BarrierOpen or Barrier_Commands.DownstreamTLGreen) and Barrier_EmergencyStop.Active) or (Barrier_Barrier_Actuator.Closing and (Barrier_Barrier_Sensor.Intermediate and Barrier_Commands.BarrierStop) or Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate and (Barrier_Commands.UpstreamTLGreen and Barrier_EmergencyStop.Active)))) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Actuator_c_endStopOpening) (guard: Barrier_Barrier_Actuator.Opening -> Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Actuator_c_endStopClosing) (guard: Barrier_Barrier_Actuator.Closing -> not Barrier_Barrier_Actuator.Rest and not Barrier_Barrier_Actuator.Opening) (assignments: Barrier_Barrier_Actuator := Barrier_Barrier_Actuator.Rest)
    Edge: (event: Barrier_Barrier_Sensor_u_closed_off) (guard: Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Closed) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Intermediate)
    Edge: (event: Barrier_Barrier_Sensor_u_closed_on) (guard: Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Intermediate) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Closed)
    Edge: (event: Barrier_Barrier_Sensor_u_open_on) (guard: Barrier_Barrier_Actuator.Opening and Barrier_Barrier_Sensor.Intermediate) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Open)
    Edge: (event: Barrier_Barrier_Sensor_u_open_off) (guard: Barrier_Barrier_Actuator.Closing and Barrier_Barrier_Sensor.Open) (assignments: Barrier_Barrier_Sensor := Barrier_Barrier_Sensor.Intermediate)
    Edge: (event: Barrier_EmergencyStop_u_activate) (guard: Barrier_EmergencyStop.Inactive) (assignments: Barrier_EmergencyStop := Barrier_EmergencyStop.Active)
    Edge: (event: Barrier_EmergencyStop_u_deactivate) (guard: Barrier_EmergencyStop.Active) (assignments: Barrier_EmergencyStop := Barrier_EmergencyStop.Inactive)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierOpen_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierClose_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_BarrierStop_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_DownstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLRed_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.NoCommand) (assignments: Barrier_Commands := Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.BarrierOpen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.BarrierClose)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.BarrierStop)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.DownstreamTLGreen)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLRed)
    Edge: (event: Barrier_Commands_UpstreamTLGreen_act) (guard: Barrier_Commands.UpstreamTLGreen)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierOpen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierClose) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.BarrierStop) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.DownstreamTLRed) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.DownstreamTLGreen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.UpstreamTLRed) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)
    Edge: (event: Barrier_Commands_Deactivate) (guard: Barrier_Commands.UpstreamTLGreen) (assignments: Barrier_Commands := Barrier_Commands.NoCommand)

Controlled system:                     exactly 144 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)
Initial (controlled system):           Barrier_Barrier_Actuator.Rest and Barrier_Barrier_Sensor.Closed and (Barrier_Commands.NoCommand and Barrier_EmergencyStop.Inactive)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event Barrier_Barrier_Actuator_c_open: guard: not Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Actuator.Opening -> true [assume not Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Actuator.Opening].
  Event Barrier_Barrier_Actuator_c_close: guard: not Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Actuator.Opening -> true [assume not Barrier_Barrier_Actuator.Closing and not Barrier_Barrier_Actuator.Opening].
  Event Barrier_Barrier_Actuator_c_emergencyStop: guard: <bdd 9n 16p> -> true [assume <bdd 9n 16p>].
  Event Barrier_Barrier_Actuator_c_endStopOpening: guard: Barrier_Barrier_Actuator.Opening -> true [assume Barrier_Barrier_Actuator.Opening].
  Event Barrier_Barrier_Actuator_c_endStopClosing: guard: not Barrier_Barrier_Actuator.Rest and not Barrier_Barrier_Actuator.Opening -> true [assume not Barrier_Barrier_Actuator.Rest and not Barrier_Barrier_Actuator.Opening].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_largereq/subplant_244_sup.cif".
