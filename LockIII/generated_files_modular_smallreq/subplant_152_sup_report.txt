Reading CIF file "generated_files_modular_smallreq/subplant_152.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name          Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   gate_U_N_Dir  0      2 * 2     3 * 2       4 * 2       75%
  2      location pointer  n/a   gate_U_N_S    1      3 * 2     7 * 2       8 * 2       ~88%
  3      location pointer  n/a   in_U_S_A      2      2 * 2     4 * 2       4 * 2       100%
  4      location pointer  n/a   in_U_S_S      3      3 * 2     8 * 2       8 * 2       100%
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  Total                                        4      20        44          48          ~92%

Applying automatic variable ordering:
  Number of hyperedges: 26

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                   18 (total)                 0.69 (avg/edge) [before]
    Total span:                   18 (total)                 0.69 (avg/edge) [iteration 1]
    Total span:                   18 (total)                 0.69 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   18 (total)                 0.69 (avg/edge) [before]
    Total span:                   18 (total)                 0.69 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     gate_U_N_S.closed
Initial   (aut/locs init predicate):     gate_U_N_Dir.off
Initial   (aut/locs init predicate):     in_U_S_S.red
Initial   (aut/locs init predicate):     in_U_S_A.red
Initial   (auts/locs init predicate):    gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)
Initial   (uncontrolled system):         gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)
Initial   (system, combined init/inv):   gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   gate_U_N_S.closed
Marked    (aut/locs marker predicate):   gate_U_N_Dir.off
Marked    (aut/locs marker predicate):   in_U_S_S.red
Marked    (aut/locs marker predicate):   in_U_S_A.red
Marked    (auts/locs marker predicate):  gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)
Marked    (uncontrolled system):         gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)
Marked    (system, combined marked/inv): gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)

State/event exclusion requirements:
  Event "in_U_S_c_green" needs:
    gate_U_N_S.open

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: gate_U_N_u_s1_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.closed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed)
    Edge: (event: gate_U_N_u_s2_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s3_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s4_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s5_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s6_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.open)
    Edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "gate_U_N_Dir" (group: 0, domain: 0+1, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> true [range: true, variable: location pointer for automaton "gate_U_N_S" (group: 1, domain: 2+3, BDD variables: 3, CIF/BDD values: 7/8)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: in_U_S_c_green) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green): guard: in_U_S_A.redgreen -> gate_U_N_S.open and in_U_S_A.redgreen [requirement: gate_U_N_S.open].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: gate_U_N_u_s1_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.closed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed)
    Edge: (event: gate_U_N_u_s2_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s3_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s4_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s5_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s6_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.open)
    Edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> gate_U_N_S.open and in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) -> not gate_U_N_Dir.closing and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) [backward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.closing and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) -> not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) [backward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) -> not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red)) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red)) [backward reach with edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red)) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red)) -> not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green)) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green)) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)) [backward reach with edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green)) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green)) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)) -> <bdd 11n 6p> [backward reach with edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 6p> -> not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen)) or (not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.green) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.lowred))) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen)) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.green) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.lowred)))) [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen)) or (not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.green) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.lowred))) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen)) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.green) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.lowred)))) -> not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red or (in_U_S_S.redgreen or in_U_S_S.redred))) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.green or in_U_S_S.lowred)) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red or (in_U_S_S.redgreen or in_U_S_S.redred))) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.green or in_U_S_S.lowred))) [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red or (in_U_S_S.redgreen or in_U_S_S.redred))) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.green or in_U_S_S.lowred)) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red or (in_U_S_S.redgreen or in_U_S_S.redred))) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.green or in_U_S_S.lowred))) -> not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green or (in_U_S_S.redgreen or in_U_S_S.greenred))) or (not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred)) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.lowred)) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green or (in_U_S_S.redgreen or in_U_S_S.greenred))) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred)) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.lowred))) [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green or (in_U_S_S.redgreen or in_U_S_S.greenred))) or (not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred)) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.lowred)) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green or (in_U_S_S.redgreen or in_U_S_S.greenred))) or (gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred)) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.lowred))) -> not gate_U_N_Dir.opening and (gate_U_N_S.closed and in_U_S_A.red) or gate_U_N_Dir.opening and (gate_U_N_S.closed and in_U_S_A.red) [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.opening and (gate_U_N_S.closed and in_U_S_A.red) or gate_U_N_Dir.opening and (gate_U_N_S.closed and in_U_S_A.red) -> not gate_U_N_Dir.opening and (gate_U_N_S.closed and (in_U_S_A.red or in_U_S_A.green)) or gate_U_N_Dir.opening and (gate_U_N_S.closed and (in_U_S_A.red or in_U_S_A.green)) [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.opening and (gate_U_N_S.closed and (in_U_S_A.red or in_U_S_A.green)) or gate_U_N_Dir.opening and (gate_U_N_S.closed and (in_U_S_A.red or in_U_S_A.green)) -> not gate_U_N_Dir.opening and (gate_U_N_S.closed and (in_U_S_A.red or in_U_S_A.redred)) or not gate_U_N_Dir.opening and (gate_U_N_S.closed and in_U_S_A.green) or (gate_U_N_Dir.opening and (gate_U_N_S.closed and (in_U_S_A.red or in_U_S_A.redred)) or gate_U_N_Dir.opening and (gate_U_N_S.closed and in_U_S_A.green)) [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_U_N_Dir.opening and (gate_U_N_S.closed and (in_U_S_A.red or in_U_S_A.redred)) or not gate_U_N_Dir.opening and (gate_U_N_S.closed and in_U_S_A.green) or (gate_U_N_Dir.opening and (gate_U_N_S.closed and (in_U_S_A.red or in_U_S_A.redred)) or gate_U_N_Dir.opening and (gate_U_N_S.closed and in_U_S_A.green)) -> not gate_U_N_Dir.opening and gate_U_N_S.closed or gate_U_N_Dir.opening and gate_U_N_S.closed [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed or gate_U_N_Dir.opening and gate_U_N_S.closed -> gate_U_N_Dir.off and gate_U_N_S.closed or (gate_U_N_Dir.closing and (gate_U_N_S.closed or gate_U_N_S.bclosed) or gate_U_N_Dir.opening and gate_U_N_S.closed) [backward reach with edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed or (gate_U_N_Dir.closing and (gate_U_N_S.closed or gate_U_N_S.bclosed) or gate_U_N_Dir.opening and gate_U_N_S.closed) -> gate_U_N_Dir.off and gate_U_N_S.closed or gate_U_N_Dir.closing and (gate_U_N_S.closed or gate_U_N_S.fclosed) or (gate_U_N_Dir.closing and gate_U_N_S.bclosed or gate_U_N_Dir.opening and gate_U_N_S.closed) [backward reach with edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed or gate_U_N_Dir.closing and (gate_U_N_S.closed or gate_U_N_S.fclosed) or (gate_U_N_Dir.closing and gate_U_N_S.bclosed or gate_U_N_Dir.opening and gate_U_N_S.closed) -> gate_U_N_Dir.off and gate_U_N_S.closed or (gate_U_N_Dir.closing and not gate_U_N_S.fopen and (not gate_U_N_S.bopen and not gate_U_N_S.open) or gate_U_N_Dir.opening and gate_U_N_S.closed) [backward reach with edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed or (gate_U_N_Dir.closing and not gate_U_N_S.fopen and (not gate_U_N_S.bopen and not gate_U_N_S.open) or gate_U_N_Dir.opening and gate_U_N_S.closed) -> gate_U_N_Dir.off and gate_U_N_S.closed or gate_U_N_Dir.closing and (gate_U_N_S.closed or gate_U_N_S.fopen) or (gate_U_N_Dir.closing and gate_U_N_S.fclosed or (gate_U_N_Dir.closing and (gate_U_N_S.bclosed or gate_U_N_S.middle) or gate_U_N_Dir.opening and gate_U_N_S.closed)) [backward reach with edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed or gate_U_N_Dir.closing and (gate_U_N_S.closed or gate_U_N_S.fopen) or (gate_U_N_Dir.closing and gate_U_N_S.fclosed or (gate_U_N_Dir.closing and (gate_U_N_S.bclosed or gate_U_N_S.middle) or gate_U_N_Dir.opening and gate_U_N_S.closed)) -> gate_U_N_Dir.off and gate_U_N_S.closed or gate_U_N_Dir.closing and not gate_U_N_S.fclosed and (not gate_U_N_S.middle and not gate_U_N_S.open) or (gate_U_N_Dir.closing and (gate_U_N_S.fclosed or gate_U_N_S.middle) or gate_U_N_Dir.opening and gate_U_N_S.closed) [backward reach with edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed or gate_U_N_Dir.closing and not gate_U_N_S.fclosed and (not gate_U_N_S.middle and not gate_U_N_S.open) or (gate_U_N_Dir.closing and (gate_U_N_S.fclosed or gate_U_N_S.middle) or gate_U_N_Dir.opening and gate_U_N_S.closed) -> gate_U_N_Dir.off and gate_U_N_S.closed or gate_U_N_Dir.closing and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and not gate_U_N_S.bopen) or (gate_U_N_Dir.closing and (gate_U_N_S.bclosed or gate_U_N_S.bopen) or (gate_U_N_Dir.closing and gate_U_N_S.middle or gate_U_N_Dir.opening and gate_U_N_S.closed)) [backward reach with edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed or gate_U_N_Dir.closing and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and not gate_U_N_S.bopen) or (gate_U_N_Dir.closing and (gate_U_N_S.bclosed or gate_U_N_S.bopen) or (gate_U_N_Dir.closing and gate_U_N_S.middle or gate_U_N_Dir.opening and gate_U_N_S.closed)) -> (not gate_U_N_Dir.opening or not gate_U_N_S.fopen) and ((not gate_U_N_Dir.opening or not gate_U_N_S.fclosed and not gate_U_N_S.open) and (not gate_U_N_Dir.opening or not gate_U_N_S.bclosed and (not gate_U_N_S.middle and not gate_U_N_S.bopen))) [backward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (not gate_U_N_Dir.opening or not gate_U_N_S.fopen) and ((not gate_U_N_Dir.opening or not gate_U_N_S.fclosed and not gate_U_N_S.open) and (not gate_U_N_Dir.opening or not gate_U_N_S.bclosed and (not gate_U_N_S.middle and not gate_U_N_S.bopen))) -> true [backward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) -> not gate_U_N_Dir.closing and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) [forward reach with edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not gate_U_N_Dir.closing and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) -> not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) [forward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red) -> <bdd 11n 4p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 4p> -> not gate_U_N_Dir.opening and gate_U_N_S.closed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.redgreen and in_U_S_S.red) or (gate_U_N_Dir.opening and gate_U_N_S.closed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.redgreen and in_U_S_S.red)) [forward reach with edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.redgreen and in_U_S_S.red) or (gate_U_N_Dir.opening and gate_U_N_S.closed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.redgreen and in_U_S_S.red)) -> not gate_U_N_Dir.opening and gate_U_N_S.closed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.redgreen and in_U_S_S.red) or (gate_U_N_Dir.opening and (gate_U_N_S.closed or gate_U_N_S.bclosed) and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or gate_U_N_Dir.opening and (gate_U_N_S.closed or gate_U_N_S.bclosed) and (in_U_S_A.redgreen and in_U_S_S.red)) [forward reach with edge: (event: gate_U_N_u_s1_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.closed) (assignments: gate_U_N_S := gate_U_N_S.bclosed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.redgreen and in_U_S_S.red) or (gate_U_N_Dir.opening and (gate_U_N_S.closed or gate_U_N_S.bclosed) and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or gate_U_N_Dir.opening and (gate_U_N_S.closed or gate_U_N_S.bclosed) and (in_U_S_A.redgreen and in_U_S_S.red)) -> <bdd 11n 6p> [forward reach with edge: (event: gate_U_N_u_s2_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.fclosed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 6p> -> not gate_U_N_Dir.opening and gate_U_N_S.closed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.redgreen and in_U_S_S.red) or (gate_U_N_Dir.opening and (not gate_U_N_S.fopen and not gate_U_N_S.bopen) and (not gate_U_N_S.open and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red)) or gate_U_N_Dir.opening and (not gate_U_N_S.fopen and not gate_U_N_S.bopen) and (not gate_U_N_S.open and (in_U_S_A.redgreen and in_U_S_S.red))) [forward reach with edge: (event: gate_U_N_u_s3_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.middle), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not gate_U_N_Dir.opening and gate_U_N_S.closed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red) or not gate_U_N_Dir.opening and gate_U_N_S.closed and (in_U_S_A.redgreen and in_U_S_S.red) or (gate_U_N_Dir.opening and (not gate_U_N_S.fopen and not gate_U_N_S.bopen) and (not gate_U_N_S.open and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red)) or gate_U_N_Dir.opening and (not gate_U_N_S.fopen and not gate_U_N_S.bopen) and (not gate_U_N_S.open and (in_U_S_A.redgreen and in_U_S_S.red))) -> <bdd 12n 8p> [forward reach with edge: (event: gate_U_N_u_s4_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fopen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 8p> -> <bdd 11n 6p> [forward reach with edge: (event: gate_U_N_u_s5_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.bopen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 6p> -> <bdd 12n 8p> [forward reach with edge: (event: gate_U_N_u_s6_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.open), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 8p> -> <bdd 13n 14p> [forward reach with edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 14p> -> <bdd 10n 12p> [forward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 10n 12p> -> <bdd 13n 18p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 18p> -> <bdd 16n 24p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 24p> -> <bdd 14n 18p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 18p> -> <bdd 16n 30p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 30p> -> <bdd 19n 50p> [forward reach with edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> gate_U_N_S.open and in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 19n 50p> -> <bdd 22n 80p> [forward reach with edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 80p> -> <bdd 22n 85p> [forward reach with edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 85p> -> <bdd 19n 60p> [forward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 60p> -> <bdd 21n 68p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 68p> -> <bdd 22n 72p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 72p> -> <bdd 21n 72p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 72p> -> <bdd 22n 76p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 76p> -> <bdd 20n 64p> [forward reach with edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 64p> -> <bdd 21n 76p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 76p> -> <bdd 23n 70p> [forward reach with edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> gate_U_N_S.open and in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 23n 70p> -> <bdd 26n 116p> [forward reach with edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 116p> -> <bdd 27n 113p> [forward reach with edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 113p> -> <bdd 27n 121p> [forward reach with edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 121p> -> <bdd 23n 86p> [forward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 86p> -> <bdd 26n 102p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 102p> -> <bdd 26n 100p> [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 100p> -> <bdd 27n 130p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 130p> -> <bdd 29n 142p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 142p> -> <bdd 28n 134p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 134p> -> <bdd 27n 118p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 118p> -> <bdd 27n 124p> [forward reach with edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 124p> -> <bdd 28n 116p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 116p> -> <bdd 23n 94p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 23n 94p> -> <bdd 27n 146p> [forward reach with edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 146p> -> <bdd 27n 129p> [forward reach with edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 129p> -> <bdd 27n 117p> [forward reach with edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 27n 117p> -> <bdd 21n 70p> [forward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 70p> -> <bdd 23n 72p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 72p> -> <bdd 20n 52p> [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 52p> -> <bdd 19n 44p> [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 6.
Forward controlled-behavior: <bdd 19n 44p> -> <bdd 23n 75p> [forward reach with edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 75p> -> <bdd 25n 68p> [forward reach with edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 25n 68p> -> <bdd 25n 70p> [forward reach with edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 25n 70p> -> <bdd 21n 48p> [forward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 48p> -> <bdd 20n 42p> [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 7.
Forward controlled-behavior: <bdd 20n 42p> -> <bdd 23n 62p> [forward reach with edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 62p> -> <bdd 24n 57p> [forward reach with edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 57p> -> <bdd 24n 51p> [forward reach with edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 51p> -> <bdd 20n 30p> [forward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 8.
Forward controlled-behavior: <bdd 20n 30p> -> <bdd 23n 44p> [forward reach with edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 23n 44p> -> <bdd 24n 39p> [forward reach with edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 39p> -> <bdd 24n 33p> [forward reach with edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 33p> -> <bdd 13n 18p> [forward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 9.
Forward controlled-behavior: <bdd 13n 18p> -> <bdd 15n 21p> [forward reach with edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 21p> -> <bdd 15n 15p> [forward reach with edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 15p> -> true [forward reach with edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 10.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening): guard: gate_U_N_Dir.off -> not gate_U_N_Dir.closing and not gate_U_N_Dir.opening.
Edge (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening): guard: gate_U_N_Dir.closing -> not gate_U_N_Dir.off and not gate_U_N_Dir.opening.
Edge (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing): guard: gate_U_N_Dir.off -> not gate_U_N_Dir.closing and not gate_U_N_Dir.opening.
Edge (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing): guard: gate_U_N_Dir.opening -> gate_U_N_Dir.opening.
Edge (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off): guard: gate_U_N_Dir.opening -> gate_U_N_Dir.opening.
Edge (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing) (assignments: gate_U_N_Dir := gate_U_N_Dir.off): guard: gate_U_N_Dir.closing -> not gate_U_N_Dir.off and not gate_U_N_Dir.opening.
Edge (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen): guard: in_U_S_A.red -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red))).
Edge (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen): guard: in_U_S_A.green -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.green)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.green) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.green)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.green)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.green) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.green))).
Edge (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred): guard: in_U_S_A.red -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red))).
Edge (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red): guard: in_U_S_A.green -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.green)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.green) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.green)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.green)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.green) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.green))).
Edge (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red): guard: in_U_S_A.redred -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.redred)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.redred) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.redred)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.redred)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.redred) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.redred))).
Edge (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red): guard: in_U_S_A.redgreen -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.redgreen)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.redgreen) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.redgreen)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.redgreen)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.redgreen) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.redgreen))).
Edge (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> gate_U_N_S.open and in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green): guard: gate_U_N_S.open and in_U_S_A.redgreen -> not gate_U_N_Dir.opening and (gate_U_N_S.open and in_U_S_A.redgreen) or gate_U_N_Dir.opening and (gate_U_N_S.open and in_U_S_A.redgreen).

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: gate_U_N_u_s1_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.closed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s1_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.closed)
    Edge: (event: gate_U_N_u_s2_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.bclosed) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s2_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.bclosed)
    Edge: (event: gate_U_N_u_s3_on) (guard: gate_U_N_Dir.opening and gate_U_N_S.fclosed) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s3_off) (guard: gate_U_N_Dir.closing and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fclosed)
    Edge: (event: gate_U_N_u_s4_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.middle) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s4_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.middle)
    Edge: (event: gate_U_N_u_s5_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.fopen) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_u_s5_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.fopen)
    Edge: (event: gate_U_N_u_s6_off) (guard: gate_U_N_Dir.opening and gate_U_N_S.bopen) (assignments: gate_U_N_S := gate_U_N_S.open)
    Edge: (event: gate_U_N_u_s6_on) (guard: gate_U_N_Dir.closing and gate_U_N_S.open) (assignments: gate_U_N_S := gate_U_N_S.bopen)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.off -> not gate_U_N_Dir.closing and not gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_open) (guard: gate_U_N_Dir.closing -> not gate_U_N_Dir.off and not gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.opening)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.off -> not gate_U_N_Dir.closing and not gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_close) (guard: gate_U_N_Dir.opening -> gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.closing)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.opening -> gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: gate_U_N_c_stop) (guard: gate_U_N_Dir.closing -> not gate_U_N_Dir.off and not gate_U_N_Dir.opening) (assignments: gate_U_N_Dir := gate_U_N_Dir.off)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red)))) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.green)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.green) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.green)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.green)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.green) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.green)))) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red)))) (assignments: in_U_S_A := in_U_S_A.redred)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.green -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.green)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.green) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.green)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.green)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.green) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.green)))) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.redred)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.redred) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.redred)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.redred)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.redred) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.redred)))) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen -> not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.redgreen)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.redgreen) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.redgreen)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.redgreen)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.redgreen) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.redgreen)))) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen -> not gate_U_N_Dir.opening and (gate_U_N_S.open and in_U_S_A.redgreen) or gate_U_N_Dir.opening and (gate_U_N_S.open and in_U_S_A.redgreen)) (assignments: in_U_S_A := in_U_S_A.green)

Controlled system:                     exactly 672 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)
Initial (controlled system):           gate_U_N_Dir.off and gate_U_N_S.closed and (in_U_S_A.red and in_U_S_S.red)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event gate_U_N_c_open: guard: not gate_U_N_Dir.opening -> true [assume not gate_U_N_Dir.opening].
  Event gate_U_N_c_close: guard: not gate_U_N_Dir.closing -> true [assume not gate_U_N_Dir.closing].
  Event gate_U_N_c_stop: guard: not gate_U_N_Dir.off -> true [assume not gate_U_N_Dir.off].
  Event in_U_S_c_redgreen: guard: (gate_U_N_Dir.opening or (gate_U_N_S.bclosed or gate_U_N_S.middle) or (gate_U_N_S.bopen or (in_U_S_A.red or in_U_S_A.green))) and ((gate_U_N_Dir.opening or not gate_U_N_S.bclosed and not gate_U_N_S.bopen or (in_U_S_A.red or in_U_S_A.green)) and (gate_U_N_Dir.opening or not gate_U_N_S.middle or (in_U_S_A.red or in_U_S_A.green))) and ((not gate_U_N_Dir.opening or (gate_U_N_S.bclosed or gate_U_N_S.middle) or (gate_U_N_S.bopen or (in_U_S_A.red or in_U_S_A.green))) and ((not gate_U_N_Dir.opening or not gate_U_N_S.bclosed and not gate_U_N_S.bopen or (in_U_S_A.red or in_U_S_A.green)) and (not gate_U_N_Dir.opening or not gate_U_N_S.middle or (in_U_S_A.red or in_U_S_A.green)))) -> true [assume (gate_U_N_Dir.opening or (gate_U_N_S.bclosed or gate_U_N_S.middle) or (gate_U_N_S.bopen or (in_U_S_A.red or in_U_S_A.green))) and ((gate_U_N_Dir.opening or not gate_U_N_S.bclosed and not gate_U_N_S.bopen or (in_U_S_A.red or in_U_S_A.green)) and (gate_U_N_Dir.opening or not gate_U_N_S.middle or (in_U_S_A.red or in_U_S_A.green))) and ((not gate_U_N_Dir.opening or (gate_U_N_S.bclosed or gate_U_N_S.middle) or (gate_U_N_S.bopen or (in_U_S_A.red or in_U_S_A.green))) and ((not gate_U_N_Dir.opening or not gate_U_N_S.bclosed and not gate_U_N_S.bopen or (in_U_S_A.red or in_U_S_A.green)) and (not gate_U_N_Dir.opening or not gate_U_N_S.middle or (in_U_S_A.red or in_U_S_A.green))))].
  Event in_U_S_c_redred: guard: not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red))) -> true [assume not gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (not gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or not gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red)) or (gate_U_N_Dir.opening and not gate_U_N_S.bclosed and (not gate_U_N_S.middle and (not gate_U_N_S.bopen and in_U_S_A.red)) or (gate_U_N_Dir.opening and ((gate_U_N_S.bclosed or gate_U_N_S.bopen) and in_U_S_A.red) or gate_U_N_Dir.opening and (gate_U_N_S.middle and in_U_S_A.red)))].
  Event in_U_S_c_red: guard: <bdd 7n 12p> -> true [assume <bdd 7n 12p>].
  Event in_U_S_c_green: guard: not gate_U_N_Dir.opening and (gate_U_N_S.open and in_U_S_A.redgreen) or gate_U_N_Dir.opening and (gate_U_N_S.open and in_U_S_A.redgreen) -> true [assume not gate_U_N_Dir.opening and (gate_U_N_S.open and in_U_S_A.redgreen) or gate_U_N_Dir.opening and (gate_U_N_S.open and in_U_S_A.redgreen)].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_smallreq/subplant_152_sup.cif".
