Reading CIF file "generated_files_modular_smallreq/subplant_323.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name      Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  --------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   button12  0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   button20  1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   in_U_S_A  2      2 * 2     4 * 2       4 * 2       100%
  4      location pointer  n/a   in_U_S_S  3      3 * 2     8 * 2       8 * 2       100%
  -----  ----------------  ----  --------  -----  --------  ----------  ----------  -----------
  Total                                    4      14        32          32          100%

Applying automatic variable ordering:
  Number of hyperedges: 15

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                    7 (total)                 0.47 (avg/edge) [before]
    Total span:                    7 (total)                 0.47 (avg/edge) [iteration 1]
    Total span:                    7 (total)                 0.47 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                    7 (total)                 0.47 (avg/edge) [before]
    Total span:                    7 (total)                 0.47 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     button12.released
Initial   (aut/locs init predicate):     button20.released
Initial   (aut/locs init predicate):     in_U_S_S.red
Initial   (aut/locs init predicate):     in_U_S_A.red
Initial   (auts/locs init predicate):    button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red)
Initial   (uncontrolled system):         button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red)
Initial   (system, combined init/inv):   button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   button12.released
Marked    (aut/locs marker predicate):   button20.released
Marked    (aut/locs marker predicate):   in_U_S_S.red
Marked    (aut/locs marker predicate):   in_U_S_A.red
Marked    (auts/locs marker predicate):  button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red)
Marked    (uncontrolled system):         button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red)
Marked    (system, combined marked/inv): button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red)

State/event exclusion requirements:
  Event "in_U_S_c_redred" needs:
    button12.released and button20.pushed

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: button12_u_push) (guard: button12.released) (assignments: button12 := button12.pushed)
    Edge: (event: button12_u_release) (guard: button12.pushed) (assignments: button12 := button12.released)
    Edge: (event: button20_u_push) (guard: button20.released) (assignments: button20 := button20.pushed)
    Edge: (event: button20_u_release) (guard: button20.pushed) (assignments: button20 := button20.released)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: in_U_S_c_redred) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redred): guard: in_U_S_A.red -> button12.released and (button20.pushed and in_U_S_A.red) [requirement: button12.released and button20.pushed].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: button12_u_push) (guard: button12.released) (assignments: button12 := button12.pushed)
    Edge: (event: button12_u_release) (guard: button12.pushed) (assignments: button12 := button12.released)
    Edge: (event: button20_u_push) (guard: button20.released) (assignments: button20 := button20.pushed)
    Edge: (event: button20_u_release) (guard: button20.pushed) (assignments: button20 := button20.released)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red -> button12.released and (button20.pushed and in_U_S_A.red)) (assignments: in_U_S_A := in_U_S_A.redred)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red) -> button20.released and (in_U_S_A.red and in_U_S_S.red) [backward reach with edge: (event: button12_u_release) (guard: button12.pushed) (assignments: button12 := button12.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: button20.released and (in_U_S_A.red and in_U_S_S.red) -> in_U_S_A.red and in_U_S_S.red [backward reach with edge: (event: button20_u_release) (guard: button20.pushed) (assignments: button20 := button20.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_U_S_A.red and in_U_S_S.red -> in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red) [backward reach with edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_U_S_A.red and (in_U_S_S.off or in_U_S_S.red) -> in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green) or in_U_S_A.red and in_U_S_S.red [backward reach with edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_U_S_A.red and (in_U_S_S.off or in_U_S_S.green) or in_U_S_A.red and in_U_S_S.red -> in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.red and in_U_S_S.green or in_U_S_A.red and in_U_S_S.red) [backward reach with edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.red and in_U_S_S.green or in_U_S_A.red and in_U_S_S.red) -> in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.red and in_U_S_S.green or in_U_S_A.red and (in_U_S_S.red or in_U_S_S.lowred)) [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.red and in_U_S_S.green or in_U_S_A.red and (in_U_S_S.red or in_U_S_S.lowred)) -> (not in_U_S_A.red or not in_U_S_S.greenred and not in_U_S_S.redgreenred) and (not in_U_S_A.redred and (in_U_S_A.red or in_U_S_A.redred)) [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (not in_U_S_A.red or not in_U_S_S.greenred and not in_U_S_S.redgreenred) and (not in_U_S_A.redred and (in_U_S_A.red or in_U_S_A.redred)) -> (not in_U_S_A.red or not in_U_S_S.redgreenred) and (not in_U_S_A.redred and (in_U_S_A.red or in_U_S_A.redred)) [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (not in_U_S_A.red or not in_U_S_S.redgreenred) and (not in_U_S_A.redred and (in_U_S_A.red or in_U_S_A.redred)) -> in_U_S_A.red [backward reach with edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_U_S_A.red -> in_U_S_A.red or in_U_S_A.green [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_U_S_A.red or in_U_S_A.green -> not in_U_S_A.redgreen [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not in_U_S_A.redgreen -> true [backward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red) -> button20.released and (in_U_S_A.red and in_U_S_S.red) [forward reach with edge: (event: button12_u_push) (guard: button12.released) (assignments: button12 := button12.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: button20.released and (in_U_S_A.red and in_U_S_S.red) -> in_U_S_A.red and in_U_S_S.red [forward reach with edge: (event: button20_u_push) (guard: button20.released) (assignments: button20 := button20.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_U_S_A.red and in_U_S_S.red -> in_U_S_A.red and in_U_S_S.red or in_U_S_A.redgreen and in_U_S_S.red [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_U_S_A.red and in_U_S_S.red or in_U_S_A.redgreen and in_U_S_S.red -> button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red) or (button12.released and button20.released and (in_U_S_A.redgreen and in_U_S_S.red) or button12.released and button20.pushed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red)) or (button12.released and button20.pushed and (in_U_S_A.redgreen and in_U_S_S.red) or (button12.pushed and (in_U_S_A.red and in_U_S_S.red) or button12.pushed and (in_U_S_A.redgreen and in_U_S_S.red))) [forward reach with edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red -> button12.released and (button20.pushed and in_U_S_A.red)) (assignments: in_U_S_A := in_U_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red) or (button12.released and button20.released and (in_U_S_A.redgreen and in_U_S_S.red) or button12.released and button20.pushed and ((in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red)) or (button12.released and button20.pushed and (in_U_S_A.redgreen and in_U_S_S.red) or (button12.pushed and (in_U_S_A.red and in_U_S_S.red) or button12.pushed and (in_U_S_A.redgreen and in_U_S_S.red))) -> button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red) or button12.released and button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red) or (button12.released and (button20.pushed and in_U_S_S.red) or (button12.pushed and (in_U_S_A.red and in_U_S_S.red) or button12.pushed and ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red))) [forward reach with edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red) or button12.released and button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red) or (button12.released and (button20.pushed and in_U_S_S.red) or (button12.pushed and (in_U_S_A.red and in_U_S_S.red) or button12.pushed and ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red))) -> button20.released and (in_U_S_A.red and in_U_S_S.red) or (button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red) or button20.pushed and in_U_S_S.red) [forward reach with edge: (event: button12_u_push) (guard: button12.released) (assignments: button12 := button12.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: button20.released and (in_U_S_A.red and in_U_S_S.red) or (button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red) or button20.pushed and in_U_S_S.red) -> in_U_S_S.red [forward reach with edge: (event: button20_u_release) (guard: button20.pushed) (assignments: button20 := button20.released), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_U_S_S.red -> (in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red or in_U_S_A.green and in_U_S_S.redgreen or (in_U_S_A.green and in_U_S_S.red or in_U_S_A.redgreen and in_U_S_S.red) [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red or in_U_S_A.green and in_U_S_S.redgreen or (in_U_S_A.green and in_U_S_S.red or in_U_S_A.redgreen and in_U_S_S.red) -> (in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.redgreen or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red) [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_U_S_A.red or in_U_S_A.redred) and in_U_S_S.red or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.redgreen or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red) -> in_U_S_A.red and in_U_S_S.red or in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.redgreen or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red) [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_U_S_A.red and in_U_S_S.red or in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.redgreen or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red) -> <bdd 12n 6p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 6p> -> <bdd 13n 7p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 7p> -> in_U_S_A.red and in_U_S_S.red or in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or ((in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.off or in_U_S_S.redgreen) or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.green or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red)) [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_U_S_A.red and in_U_S_S.red or in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or ((in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.off or in_U_S_S.redgreen) or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.green or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red)) -> in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.red and in_U_S_S.green or in_U_S_A.red and in_U_S_S.red) or (in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or (in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.off or in_U_S_S.redgreen) or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.green or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red)) [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.red and in_U_S_S.green or in_U_S_A.red and in_U_S_S.red) or (in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or (in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.off or in_U_S_S.redgreen) or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.green or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red)) -> in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.red and in_U_S_S.green or in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred)) or (in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or (in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.off or in_U_S_S.redgreen) or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.green or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red)) [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.red and in_U_S_S.green or in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred)) or (in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or (in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.off or in_U_S_S.redgreen) or ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.green or (in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.red)) -> in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or in_U_S_A.red and in_U_S_S.green or (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred) or (in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or in_U_S_A.green and (in_U_S_S.off or in_U_S_S.redgreen))) or (in_U_S_A.green and in_U_S_S.green or in_U_S_A.green and in_U_S_S.red or (in_U_S_A.redgreen and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.redgreen and in_U_S_S.green or in_U_S_A.redgreen and (in_U_S_S.red or in_U_S_S.redred)))) [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen) or in_U_S_A.red and in_U_S_S.green or (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred) or (in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred) or in_U_S_A.green and (in_U_S_S.off or in_U_S_S.redgreen))) or (in_U_S_A.green and in_U_S_S.green or in_U_S_A.green and in_U_S_S.red or (in_U_S_A.redgreen and (in_U_S_S.off or in_U_S_S.redgreen) or (in_U_S_A.redgreen and in_U_S_S.green or in_U_S_A.redgreen and (in_U_S_S.red or in_U_S_S.redred)))) -> <bdd 13n 29p> [forward reach with edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red -> button12.released and (button20.pushed and in_U_S_A.red)) (assignments: in_U_S_A := in_U_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 29p> -> <bdd 9n 17p> [forward reach with edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 9n 17p> -> button20.released and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen)) or button20.released and (in_U_S_A.red and in_U_S_S.green) or (button20.released and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred)) or (button20.released and (in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred)) or button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.off or in_U_S_S.redgreen)))) or (button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.green) or button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.red or in_U_S_S.redred)) or (button20.pushed and (in_U_S_S.off or in_U_S_S.redgreen) or (button20.pushed and in_U_S_S.green or button20.pushed and (in_U_S_S.red or in_U_S_S.redred)))) [forward reach with edge: (event: button12_u_push) (guard: button12.released) (assignments: button12 := button12.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: button20.released and (in_U_S_A.red and (in_U_S_S.off or in_U_S_S.redgreen)) or button20.released and (in_U_S_A.red and in_U_S_S.green) or (button20.released and (in_U_S_A.red and (in_U_S_S.red or in_U_S_S.redred)) or (button20.released and (in_U_S_A.redred and (in_U_S_S.red or in_U_S_S.redred)) or button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.off or in_U_S_S.redgreen)))) or (button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and in_U_S_S.green) or button20.released and ((in_U_S_A.green or in_U_S_A.redgreen) and (in_U_S_S.red or in_U_S_S.redred)) or (button20.pushed and (in_U_S_S.off or in_U_S_S.redgreen) or (button20.pushed and in_U_S_S.green or button20.pushed and (in_U_S_S.red or in_U_S_S.redred)))) -> not in_U_S_S.greenred and (not in_U_S_S.lowred and not in_U_S_S.redgreenred) [forward reach with edge: (event: button20_u_release) (guard: button20.pushed) (assignments: button20 := button20.released), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not in_U_S_S.greenred and (not in_U_S_S.lowred and not in_U_S_S.redgreenred) -> (in_U_S_A.green or (in_U_S_A.redgreen or not in_U_S_S.greenred)) and ((in_U_S_A.green or (in_U_S_A.redgreen or not in_U_S_S.lowred and not in_U_S_S.redgreenred)) and (not in_U_S_A.green or not in_U_S_S.greenred)) and ((not in_U_S_A.green or not in_U_S_S.lowred) and ((not in_U_S_A.redgreen or not in_U_S_S.greenred) and (not in_U_S_A.redgreen or not in_U_S_S.lowred and not in_U_S_S.redgreenred))) [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_U_S_A.green or (in_U_S_A.redgreen or not in_U_S_S.greenred)) and ((in_U_S_A.green or (in_U_S_A.redgreen or not in_U_S_S.lowred and not in_U_S_S.redgreenred)) and (not in_U_S_A.green or not in_U_S_S.greenred)) and ((not in_U_S_A.green or not in_U_S_S.lowred) and ((not in_U_S_A.redgreen or not in_U_S_S.greenred) and (not in_U_S_A.redgreen or not in_U_S_S.lowred and not in_U_S_S.redgreenred))) -> (in_U_S_A.green or (in_U_S_A.redgreen or not in_U_S_S.greenred)) and (in_U_S_A.green or (in_U_S_A.redgreen or not in_U_S_S.lowred and not in_U_S_S.redgreenred)) and ((in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.greenred)) and (in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.lowred))) [forward reach with edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_U_S_A.green or (in_U_S_A.redgreen or not in_U_S_S.greenred)) and (in_U_S_A.green or (in_U_S_A.redgreen or not in_U_S_S.lowred and not in_U_S_S.redgreenred)) and ((in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.greenred)) and (in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.lowred))) -> (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) and ((not in_U_S_A.redred or not in_U_S_S.greenred and not in_U_S_S.redgreenred) and ((in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.greenred)) and (in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.lowred)))) [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) and ((not in_U_S_A.redred or not in_U_S_S.greenred and not in_U_S_S.redgreenred) and ((in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.greenred)) and (in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.lowred)))) -> (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) and ((not in_U_S_A.redred or not in_U_S_S.redgreenred) and ((in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.greenred)) and (in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.lowred)))) [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) and ((not in_U_S_A.redred or not in_U_S_S.redgreenred) and ((in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.greenred)) and (in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.lowred)))) -> (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) and ((in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.greenred)) and (in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.lowred))) [forward reach with edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) and ((in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.greenred)) and (in_U_S_A.red or (in_U_S_A.redred or not in_U_S_S.lowred))) -> <bdd 11n 11p> [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 11p> -> (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) and ((not in_U_S_A.redgreen or not in_U_S_S.greenred) and (not in_U_S_A.redgreen or not in_U_S_S.lowred)) [forward reach with edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) and ((not in_U_S_A.redgreen or not in_U_S_S.greenred) and (not in_U_S_A.redgreen or not in_U_S_S.lowred)) -> (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) [forward reach with edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_U_S_A.red or not in_U_S_S.greenred) and (not in_U_S_A.red or not in_U_S_S.lowred and not in_U_S_S.redgreenred) -> true [forward reach with edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: button12_u_push) (guard: button12.released) (assignments: button12 := button12.pushed)
    Edge: (event: button12_u_release) (guard: button12.pushed) (assignments: button12 := button12.released)
    Edge: (event: button20_u_push) (guard: button20.released) (assignments: button20 := button20.pushed)
    Edge: (event: button20_u_release) (guard: button20.pushed) (assignments: button20 := button20.released)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_on) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_g_on) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.off) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_s_on) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.redgreenred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.red) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_r_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.greenred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.green) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreen) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.lowred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_g_off) (guard: in_U_S_A.redred and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redred)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.lowred) (assignments: in_U_S_S := in_U_S_S.off)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redred) (assignments: in_U_S_S := in_U_S_S.red)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.greenred) (assignments: in_U_S_S := in_U_S_S.green)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.red and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.green and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_u_s_off) (guard: in_U_S_A.redgreen and in_U_S_S.redgreenred) (assignments: in_U_S_S := in_U_S_S.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.red) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redgreen) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.redgreen)
    Edge: (event: in_U_S_c_redred) (guard: in_U_S_A.red -> button12.released and (button20.pushed and in_U_S_A.red)) (assignments: in_U_S_A := in_U_S_A.redred)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.green) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redred) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_red) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.red)
    Edge: (event: in_U_S_c_green) (guard: in_U_S_A.redgreen) (assignments: in_U_S_A := in_U_S_A.green)

Controlled system:                     exactly 128 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red)
Initial (controlled system):           button12.released and button20.released and (in_U_S_A.red and in_U_S_S.red)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event in_U_S_c_redgreen: guard: in_U_S_A.red or in_U_S_A.green -> true [assume in_U_S_A.red or in_U_S_A.green].
  Event in_U_S_c_redred: guard: button12.released and (button20.pushed and in_U_S_A.red) -> true [assume button12.released and (button20.pushed and in_U_S_A.red)].
  Event in_U_S_c_red: guard: not in_U_S_A.red -> true [assume not in_U_S_A.red].
  Event in_U_S_c_green: guard: in_U_S_A.redgreen -> true [assume in_U_S_A.redgreen].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_smallreq/subplant_323_sup.cif".
