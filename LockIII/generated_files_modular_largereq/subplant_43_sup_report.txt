Reading CIF file "generated_files_modular_largereq/subplant_43.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name          Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   gate_D_N_Dir  0      2 * 2     3 * 2       4 * 2       75%
  2      location pointer  n/a   gate_D_N_S    1      3 * 2     7 * 2       8 * 2       ~88%
  3      location pointer  n/a   in_D_N_A      2      2 * 2     4 * 2       4 * 2       100%
  4      location pointer  n/a   in_D_N_S      3      3 * 2     8 * 2       8 * 2       100%
  5      location pointer  n/a   in_D_S_A      4      2 * 2     4 * 2       4 * 2       100%
  6      location pointer  n/a   in_D_S_S      5      3 * 2     8 * 2       8 * 2       100%
  7      location pointer  n/a   out_D_N_A     6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   out_D_N_S     7      2 * 2     4 * 2       4 * 2       100%
  9      location pointer  n/a   out_D_S_A     8      1 * 2     2 * 2       2 * 2       100%
  10     location pointer  n/a   out_D_S_S     9      2 * 2     4 * 2       4 * 2       100%
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  Total                                        10     42        92          96          ~96%

Applying automatic variable ordering:
  Number of hyperedges: 48

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   39 (total)                 0.81 (avg/edge) [before]
    Total span:                   39 (total)                 0.81 (avg/edge) [iteration 1]
    Total span:                   39 (total)                 0.81 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   39 (total)                 0.81 (avg/edge) [before]
    Total span:                   39 (total)                 0.81 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     gate_D_N_S.closed
Initial   (aut/locs init predicate):     gate_D_N_Dir.off
Initial   (aut/locs init predicate):     out_D_N_S.red
Initial   (aut/locs init predicate):     out_D_N_A.red
Initial   (aut/locs init predicate):     out_D_S_S.red
Initial   (aut/locs init predicate):     out_D_S_A.red
Initial   (aut/locs init predicate):     in_D_N_S.red
Initial   (aut/locs init predicate):     in_D_N_A.red
Initial   (aut/locs init predicate):     in_D_S_S.red
Initial   (aut/locs init predicate):     in_D_S_A.red
Initial   (auts/locs init predicate):    <bdd 21n 1p>
Initial   (uncontrolled system):         <bdd 21n 1p>
Initial   (system, combined init/inv):   <bdd 21n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   gate_D_N_S.closed
Marked    (aut/locs marker predicate):   gate_D_N_Dir.off
Marked    (aut/locs marker predicate):   out_D_N_S.red
Marked    (aut/locs marker predicate):   out_D_N_A.red
Marked    (aut/locs marker predicate):   out_D_S_S.red
Marked    (aut/locs marker predicate):   out_D_S_A.red
Marked    (aut/locs marker predicate):   in_D_N_S.red
Marked    (aut/locs marker predicate):   in_D_N_A.red
Marked    (aut/locs marker predicate):   in_D_S_S.red
Marked    (aut/locs marker predicate):   in_D_S_A.red
Marked    (auts/locs marker predicate):  <bdd 21n 1p>
Marked    (uncontrolled system):         <bdd 21n 1p>
Marked    (system, combined marked/inv): <bdd 21n 1p>

State/event exclusion requirements:
  Event "gate_D_N_c_close" needs:
    <bdd 12n 1p>

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: gate_D_N_u_s1_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.closed) (assignments: gate_D_N_S := gate_D_N_S.bclosed)
    Edge: (event: gate_D_N_u_s1_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.bclosed) (assignments: gate_D_N_S := gate_D_N_S.closed)
    Edge: (event: gate_D_N_u_s2_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.bclosed) (assignments: gate_D_N_S := gate_D_N_S.fclosed)
    Edge: (event: gate_D_N_u_s2_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.fclosed) (assignments: gate_D_N_S := gate_D_N_S.bclosed)
    Edge: (event: gate_D_N_u_s3_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.fclosed) (assignments: gate_D_N_S := gate_D_N_S.middle)
    Edge: (event: gate_D_N_u_s3_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.middle) (assignments: gate_D_N_S := gate_D_N_S.fclosed)
    Edge: (event: gate_D_N_u_s4_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.middle) (assignments: gate_D_N_S := gate_D_N_S.fopen)
    Edge: (event: gate_D_N_u_s4_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.fopen) (assignments: gate_D_N_S := gate_D_N_S.middle)
    Edge: (event: gate_D_N_u_s5_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.fopen) (assignments: gate_D_N_S := gate_D_N_S.bopen)
    Edge: (event: gate_D_N_u_s5_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.bopen) (assignments: gate_D_N_S := gate_D_N_S.fopen)
    Edge: (event: gate_D_N_u_s6_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.bopen) (assignments: gate_D_N_S := gate_D_N_S.open)
    Edge: (event: gate_D_N_u_s6_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.open) (assignments: gate_D_N_S := gate_D_N_S.bopen)
    Edge: (event: gate_D_N_c_open) (guard: gate_D_N_Dir.off) (assignments: gate_D_N_Dir := gate_D_N_Dir.opening)
    Edge: (event: gate_D_N_c_open) (guard: gate_D_N_Dir.closing) (assignments: gate_D_N_Dir := gate_D_N_Dir.opening)
    Edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.off) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing)
    Edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing)
    Edge: (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.off)
    Edge: (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.closing) (assignments: gate_D_N_Dir := gate_D_N_Dir.off)
    Edge: (event: out_D_N_u_r_on) (guard: out_D_N_A.red and out_D_N_S.off) (assignments: out_D_N_S := out_D_N_S.red)
    Edge: (event: out_D_N_u_r_on) (guard: out_D_N_A.red and out_D_N_S.green) (assignments: out_D_N_S := out_D_N_S.redgreen)
    Edge: (event: out_D_N_u_g_on) (guard: out_D_N_A.green and out_D_N_S.off) (assignments: out_D_N_S := out_D_N_S.green)
    Edge: (event: out_D_N_u_g_on) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.redgreen)
    Edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.off)
    Edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.green)
    Edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.green) (assignments: out_D_N_S := out_D_N_S.off)
    Edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.red)
    Edge: (event: out_D_N_c_green) (guard: out_D_N_A.red) (assignments: out_D_N_A := out_D_N_A.green)
    Edge: (event: out_D_N_c_red) (guard: out_D_N_A.green) (assignments: out_D_N_A := out_D_N_A.red)
    Edge: (event: out_D_S_u_r_on) (guard: out_D_S_A.red and out_D_S_S.off) (assignments: out_D_S_S := out_D_S_S.red)
    Edge: (event: out_D_S_u_r_on) (guard: out_D_S_A.red and out_D_S_S.green) (assignments: out_D_S_S := out_D_S_S.redgreen)
    Edge: (event: out_D_S_u_g_on) (guard: out_D_S_A.green and out_D_S_S.off) (assignments: out_D_S_S := out_D_S_S.green)
    Edge: (event: out_D_S_u_g_on) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.redgreen)
    Edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.off)
    Edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.green)
    Edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.green) (assignments: out_D_S_S := out_D_S_S.off)
    Edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.red)
    Edge: (event: out_D_S_c_green) (guard: out_D_S_A.red) (assignments: out_D_S_A := out_D_S_A.green)
    Edge: (event: out_D_S_c_red) (guard: out_D_S_A.green) (assignments: out_D_S_A := out_D_S_A.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.green)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redgreen)
    Edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.redgreen)
    Edge: (event: in_D_S_c_redred) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redred)
    Edge: (event: in_D_S_c_red) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.red)
    Edge: (event: in_D_S_c_red) (guard: in_D_S_A.redred) (assignments: in_D_S_A := in_D_S_A.red)
    Edge: (event: in_D_S_c_red) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.red)
    Edge: (event: in_D_S_c_green) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.green)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "gate_D_N_Dir" (group: 0, domain: 0+1, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> true [range: true, variable: location pointer for automaton "gate_D_N_S" (group: 1, domain: 2+3, BDD variables: 3, CIF/BDD values: 7/8)].

Extended controlled-behavior predicate using variable ranges: true.

Restricting behavior using state/event exclusion requirements.

Edge (event: gate_D_N_c_close) (guard: gate_D_N_Dir.off) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing): guard: gate_D_N_Dir.off -> <bdd 14n 1p> [requirement: <bdd 12n 1p>].
Edge (event: gate_D_N_c_close) (guard: gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing): guard: gate_D_N_Dir.opening -> <bdd 14n 1p> [requirement: <bdd 12n 1p>].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: gate_D_N_u_s1_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.closed) (assignments: gate_D_N_S := gate_D_N_S.bclosed)
    Edge: (event: gate_D_N_u_s1_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.bclosed) (assignments: gate_D_N_S := gate_D_N_S.closed)
    Edge: (event: gate_D_N_u_s2_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.bclosed) (assignments: gate_D_N_S := gate_D_N_S.fclosed)
    Edge: (event: gate_D_N_u_s2_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.fclosed) (assignments: gate_D_N_S := gate_D_N_S.bclosed)
    Edge: (event: gate_D_N_u_s3_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.fclosed) (assignments: gate_D_N_S := gate_D_N_S.middle)
    Edge: (event: gate_D_N_u_s3_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.middle) (assignments: gate_D_N_S := gate_D_N_S.fclosed)
    Edge: (event: gate_D_N_u_s4_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.middle) (assignments: gate_D_N_S := gate_D_N_S.fopen)
    Edge: (event: gate_D_N_u_s4_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.fopen) (assignments: gate_D_N_S := gate_D_N_S.middle)
    Edge: (event: gate_D_N_u_s5_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.fopen) (assignments: gate_D_N_S := gate_D_N_S.bopen)
    Edge: (event: gate_D_N_u_s5_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.bopen) (assignments: gate_D_N_S := gate_D_N_S.fopen)
    Edge: (event: gate_D_N_u_s6_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.bopen) (assignments: gate_D_N_S := gate_D_N_S.open)
    Edge: (event: gate_D_N_u_s6_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.open) (assignments: gate_D_N_S := gate_D_N_S.bopen)
    Edge: (event: gate_D_N_c_open) (guard: gate_D_N_Dir.off) (assignments: gate_D_N_Dir := gate_D_N_Dir.opening)
    Edge: (event: gate_D_N_c_open) (guard: gate_D_N_Dir.closing) (assignments: gate_D_N_Dir := gate_D_N_Dir.opening)
    Edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.off -> <bdd 14n 1p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing)
    Edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.opening -> <bdd 14n 1p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing)
    Edge: (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.off)
    Edge: (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.closing) (assignments: gate_D_N_Dir := gate_D_N_Dir.off)
    Edge: (event: out_D_N_u_r_on) (guard: out_D_N_A.red and out_D_N_S.off) (assignments: out_D_N_S := out_D_N_S.red)
    Edge: (event: out_D_N_u_r_on) (guard: out_D_N_A.red and out_D_N_S.green) (assignments: out_D_N_S := out_D_N_S.redgreen)
    Edge: (event: out_D_N_u_g_on) (guard: out_D_N_A.green and out_D_N_S.off) (assignments: out_D_N_S := out_D_N_S.green)
    Edge: (event: out_D_N_u_g_on) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.redgreen)
    Edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.off)
    Edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.green)
    Edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.green) (assignments: out_D_N_S := out_D_N_S.off)
    Edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.red)
    Edge: (event: out_D_N_c_green) (guard: out_D_N_A.red) (assignments: out_D_N_A := out_D_N_A.green)
    Edge: (event: out_D_N_c_red) (guard: out_D_N_A.green) (assignments: out_D_N_A := out_D_N_A.red)
    Edge: (event: out_D_S_u_r_on) (guard: out_D_S_A.red and out_D_S_S.off) (assignments: out_D_S_S := out_D_S_S.red)
    Edge: (event: out_D_S_u_r_on) (guard: out_D_S_A.red and out_D_S_S.green) (assignments: out_D_S_S := out_D_S_S.redgreen)
    Edge: (event: out_D_S_u_g_on) (guard: out_D_S_A.green and out_D_S_S.off) (assignments: out_D_S_S := out_D_S_S.green)
    Edge: (event: out_D_S_u_g_on) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.redgreen)
    Edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.off)
    Edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.green)
    Edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.green) (assignments: out_D_S_S := out_D_S_S.off)
    Edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.red)
    Edge: (event: out_D_S_c_green) (guard: out_D_S_A.red) (assignments: out_D_S_A := out_D_S_A.green)
    Edge: (event: out_D_S_c_red) (guard: out_D_S_A.green) (assignments: out_D_S_A := out_D_S_A.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.green)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redgreen)
    Edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.redgreen)
    Edge: (event: in_D_S_c_redred) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redred)
    Edge: (event: in_D_S_c_red) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.red)
    Edge: (event: in_D_S_c_red) (guard: in_D_S_A.redred) (assignments: in_D_S_A := in_D_S_A.red)
    Edge: (event: in_D_S_c_red) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.red)
    Edge: (event: in_D_S_c_green) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.green)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 21n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 21n 1p> -> <bdd 20n 1p> [backward reach with edge: (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 20n 1p> -> <bdd 21n 2p> [backward reach with edge: (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.closing) (assignments: gate_D_N_Dir := gate_D_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 21n 2p> -> <bdd 20n 2p> [backward reach with edge: (event: out_D_N_u_r_on) (guard: out_D_N_A.red and out_D_N_S.off) (assignments: out_D_N_S := out_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 20n 2p> -> <bdd 21n 4p> [backward reach with edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.green) (assignments: out_D_N_S := out_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 21n 4p> -> <bdd 19n 2p> [backward reach with edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 2p> -> <bdd 18n 2p> [backward reach with edge: (event: out_D_N_c_red) (guard: out_D_N_A.green) (assignments: out_D_N_A := out_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 2p> -> <bdd 17n 2p> [backward reach with edge: (event: out_D_S_u_r_on) (guard: out_D_S_A.red and out_D_S_S.off) (assignments: out_D_S_S := out_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 2p> -> <bdd 18n 4p> [backward reach with edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.green) (assignments: out_D_S_S := out_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 4p> -> <bdd 16n 2p> [backward reach with edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 2p> -> <bdd 15n 2p> [backward reach with edge: (event: out_D_S_c_red) (guard: out_D_S_A.green) (assignments: out_D_S_A := out_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 2p> -> <bdd 14n 2p> [backward reach with edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 2p> -> <bdd 15n 4p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 4p> -> <bdd 16n 6p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 6p> -> <bdd 15n 6p> [backward reach with edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 6p> -> <bdd 14n 4p> [backward reach with edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 4p> -> <bdd 15n 6p> [backward reach with edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 6p> -> <bdd 12n 2p> [backward reach with edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 2p> -> <bdd 11n 2p> [backward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 2p> -> <bdd 12n 4p> [backward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 4p> -> not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.red) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.red) [backward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.red) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.red) -> not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.red)) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.red)) [backward reach with edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.red)) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.red)) -> not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.green)) or not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.red) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.green)) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.red)) [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.green)) or not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.red) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.green)) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.red)) -> <bdd 11n 6p> [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 6p> -> not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.redgreen)) or (not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.green) or not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.red or in_D_S_S.lowred))) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.redgreen)) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.green) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.red or in_D_S_S.lowred)))) [backward reach with edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.redgreen)) or (not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.green) or not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.red or in_D_S_S.lowred))) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.redgreen)) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.green) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.red or in_D_S_S.lowred)))) -> not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.red or (in_D_S_S.redgreen or in_D_S_S.redred))) or not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.green or in_D_S_S.lowred)) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.red or (in_D_S_S.redgreen or in_D_S_S.redred))) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.green or in_D_S_S.lowred))) [backward reach with edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.red or (in_D_S_S.redgreen or in_D_S_S.redred))) or not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.green or in_D_S_S.lowred)) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.red or (in_D_S_S.redgreen or in_D_S_S.redred))) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.green or in_D_S_S.lowred))) -> not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.green or (in_D_S_S.redgreen or in_D_S_S.greenred))) or (not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.red or in_D_S_S.redred)) or not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.lowred)) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.green or (in_D_S_S.redgreen or in_D_S_S.greenred))) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.red or in_D_S_S.redred)) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.lowred))) [backward reach with edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.green or (in_D_S_S.redgreen or in_D_S_S.greenred))) or (not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.red or in_D_S_S.redred)) or not gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.lowred)) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.off or in_D_S_S.green or (in_D_S_S.redgreen or in_D_S_S.greenred))) or (gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and (in_D_S_S.red or in_D_S_S.redred)) or gate_D_N_Dir.opening and gate_D_N_S.closed and (in_D_S_A.red and in_D_S_S.lowred))) -> not gate_D_N_Dir.opening and (gate_D_N_S.closed and in_D_S_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.closed and in_D_S_A.red) [backward reach with edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_D_N_Dir.opening and (gate_D_N_S.closed and in_D_S_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.closed and in_D_S_A.red) -> not gate_D_N_Dir.opening and (gate_D_N_S.closed and (in_D_S_A.red or in_D_S_A.green)) or gate_D_N_Dir.opening and (gate_D_N_S.closed and (in_D_S_A.red or in_D_S_A.green)) [backward reach with edge: (event: in_D_S_c_red) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_D_N_Dir.opening and (gate_D_N_S.closed and (in_D_S_A.red or in_D_S_A.green)) or gate_D_N_Dir.opening and (gate_D_N_S.closed and (in_D_S_A.red or in_D_S_A.green)) -> not gate_D_N_Dir.opening and (gate_D_N_S.closed and (in_D_S_A.red or in_D_S_A.redred)) or not gate_D_N_Dir.opening and (gate_D_N_S.closed and in_D_S_A.green) or (gate_D_N_Dir.opening and (gate_D_N_S.closed and (in_D_S_A.red or in_D_S_A.redred)) or gate_D_N_Dir.opening and (gate_D_N_S.closed and in_D_S_A.green)) [backward reach with edge: (event: in_D_S_c_red) (guard: in_D_S_A.redred) (assignments: in_D_S_A := in_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not gate_D_N_Dir.opening and (gate_D_N_S.closed and (in_D_S_A.red or in_D_S_A.redred)) or not gate_D_N_Dir.opening and (gate_D_N_S.closed and in_D_S_A.green) or (gate_D_N_Dir.opening and (gate_D_N_S.closed and (in_D_S_A.red or in_D_S_A.redred)) or gate_D_N_Dir.opening and (gate_D_N_S.closed and in_D_S_A.green)) -> not gate_D_N_Dir.opening and gate_D_N_S.closed or gate_D_N_Dir.opening and gate_D_N_S.closed [backward reach with edge: (event: in_D_S_c_red) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: not gate_D_N_Dir.opening and gate_D_N_S.closed or gate_D_N_Dir.opening and gate_D_N_S.closed -> gate_D_N_Dir.off and gate_D_N_S.closed or (gate_D_N_Dir.closing and (gate_D_N_S.closed or gate_D_N_S.bclosed) or gate_D_N_Dir.opening and gate_D_N_S.closed) [backward reach with edge: (event: gate_D_N_u_s1_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.bclosed) (assignments: gate_D_N_S := gate_D_N_S.closed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_D_N_Dir.off and gate_D_N_S.closed or (gate_D_N_Dir.closing and (gate_D_N_S.closed or gate_D_N_S.bclosed) or gate_D_N_Dir.opening and gate_D_N_S.closed) -> gate_D_N_Dir.off and gate_D_N_S.closed or gate_D_N_Dir.closing and (gate_D_N_S.closed or gate_D_N_S.fclosed) or (gate_D_N_Dir.closing and gate_D_N_S.bclosed or gate_D_N_Dir.opening and gate_D_N_S.closed) [backward reach with edge: (event: gate_D_N_u_s2_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.fclosed) (assignments: gate_D_N_S := gate_D_N_S.bclosed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_D_N_Dir.off and gate_D_N_S.closed or gate_D_N_Dir.closing and (gate_D_N_S.closed or gate_D_N_S.fclosed) or (gate_D_N_Dir.closing and gate_D_N_S.bclosed or gate_D_N_Dir.opening and gate_D_N_S.closed) -> gate_D_N_Dir.off and gate_D_N_S.closed or (gate_D_N_Dir.closing and not gate_D_N_S.fopen and (not gate_D_N_S.bopen and not gate_D_N_S.open) or gate_D_N_Dir.opening and gate_D_N_S.closed) [backward reach with edge: (event: gate_D_N_u_s3_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.middle) (assignments: gate_D_N_S := gate_D_N_S.fclosed), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_D_N_Dir.off and gate_D_N_S.closed or (gate_D_N_Dir.closing and not gate_D_N_S.fopen and (not gate_D_N_S.bopen and not gate_D_N_S.open) or gate_D_N_Dir.opening and gate_D_N_S.closed) -> gate_D_N_Dir.off and gate_D_N_S.closed or gate_D_N_Dir.closing and (gate_D_N_S.closed or gate_D_N_S.fopen) or (gate_D_N_Dir.closing and gate_D_N_S.fclosed or (gate_D_N_Dir.closing and (gate_D_N_S.bclosed or gate_D_N_S.middle) or gate_D_N_Dir.opening and gate_D_N_S.closed)) [backward reach with edge: (event: gate_D_N_u_s4_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.fopen) (assignments: gate_D_N_S := gate_D_N_S.middle), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_D_N_Dir.off and gate_D_N_S.closed or gate_D_N_Dir.closing and (gate_D_N_S.closed or gate_D_N_S.fopen) or (gate_D_N_Dir.closing and gate_D_N_S.fclosed or (gate_D_N_Dir.closing and (gate_D_N_S.bclosed or gate_D_N_S.middle) or gate_D_N_Dir.opening and gate_D_N_S.closed)) -> gate_D_N_Dir.off and gate_D_N_S.closed or gate_D_N_Dir.closing and not gate_D_N_S.fclosed and (not gate_D_N_S.middle and not gate_D_N_S.open) or (gate_D_N_Dir.closing and (gate_D_N_S.fclosed or gate_D_N_S.middle) or gate_D_N_Dir.opening and gate_D_N_S.closed) [backward reach with edge: (event: gate_D_N_u_s5_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.bopen) (assignments: gate_D_N_S := gate_D_N_S.fopen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_D_N_Dir.off and gate_D_N_S.closed or gate_D_N_Dir.closing and not gate_D_N_S.fclosed and (not gate_D_N_S.middle and not gate_D_N_S.open) or (gate_D_N_Dir.closing and (gate_D_N_S.fclosed or gate_D_N_S.middle) or gate_D_N_Dir.opening and gate_D_N_S.closed) -> gate_D_N_Dir.off and gate_D_N_S.closed or gate_D_N_Dir.closing and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and not gate_D_N_S.bopen) or (gate_D_N_Dir.closing and (gate_D_N_S.bclosed or gate_D_N_S.bopen) or (gate_D_N_Dir.closing and gate_D_N_S.middle or gate_D_N_Dir.opening and gate_D_N_S.closed)) [backward reach with edge: (event: gate_D_N_u_s6_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.open) (assignments: gate_D_N_S := gate_D_N_S.bopen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: gate_D_N_Dir.off and gate_D_N_S.closed or gate_D_N_Dir.closing and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and not gate_D_N_S.bopen) or (gate_D_N_Dir.closing and (gate_D_N_S.bclosed or gate_D_N_S.bopen) or (gate_D_N_Dir.closing and gate_D_N_S.middle or gate_D_N_Dir.opening and gate_D_N_S.closed)) -> <bdd 25n 9p> [backward reach with edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.off -> <bdd 14n 1p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 25n 9p> -> <bdd 23n 13p> [backward reach with edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.opening -> <bdd 14n 1p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 23n 13p> -> <bdd 22n 13p> [backward reach with edge: (event: out_D_N_u_r_on) (guard: out_D_N_A.red and out_D_N_S.off) (assignments: out_D_N_S := out_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 22n 13p> -> <bdd 23n 21p> [backward reach with edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.green) (assignments: out_D_N_S := out_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 23n 21p> -> <bdd 21n 13p> [backward reach with edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 21n 13p> -> <bdd 20n 13p> [backward reach with edge: (event: out_D_N_c_red) (guard: out_D_N_A.green) (assignments: out_D_N_A := out_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 20n 13p> -> <bdd 19n 13p> [backward reach with edge: (event: out_D_S_u_r_on) (guard: out_D_S_A.red and out_D_S_S.off) (assignments: out_D_S_S := out_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 13p> -> <bdd 20n 21p> [backward reach with edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.green) (assignments: out_D_S_S := out_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 20n 21p> -> <bdd 18n 13p> [backward reach with edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 13p> -> <bdd 17n 13p> [backward reach with edge: (event: out_D_S_c_red) (guard: out_D_S_A.green) (assignments: out_D_S_A := out_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 13p> -> <bdd 21n 29p> [backward reach with edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 21n 29p> -> <bdd 19n 21p> [backward reach with edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 21p> -> <bdd 22n 45p> [backward reach with edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 22n 45p> -> <bdd 19n 29p> [backward reach with edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 29p> -> <bdd 21n 53p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 21n 53p> -> <bdd 18n 29p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 29p> -> <bdd 19n 45p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 45p> -> <bdd 17n 21p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 17n 21p> -> <bdd 19n 45p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 45p> -> <bdd 18n 29p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 29p> -> <bdd 19n 37p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 37p> -> <bdd 15n 13p> [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 13p> -> <bdd 16n 21p> [backward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 21p> -> <bdd 14n 13p> [backward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 13p> -> <bdd 18n 29p> [backward reach with edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 29p> -> <bdd 16n 21p> [backward reach with edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 21p> -> <bdd 19n 45p> [backward reach with edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 19n 45p> -> <bdd 16n 29p> [backward reach with edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 29p> -> <bdd 18n 53p> [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 18n 53p> -> <bdd 15n 29p> [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 29p> -> <bdd 16n 45p> [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 45p> -> <bdd 14n 21p> [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 14n 21p> -> <bdd 16n 45p> [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 45p> -> <bdd 15n 29p> [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 15n 29p> -> <bdd 16n 37p> [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 16n 37p> -> <bdd 12n 13p> [backward reach with edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redred), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 12n 13p> -> <bdd 13n 21p> [backward reach with edge: (event: in_D_S_c_red) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 13n 21p> -> true [backward reach with edge: (event: in_D_S_c_red) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 3.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 21n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 21n 1p> -> <bdd 20n 1p> [forward reach with edge: (event: gate_D_N_c_open) (guard: gate_D_N_Dir.off) (assignments: gate_D_N_Dir := gate_D_N_Dir.opening), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 1p> -> <bdd 21n 2p> [forward reach with edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.off -> <bdd 14n 1p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 2p> -> <bdd 20n 2p> [forward reach with edge: (event: out_D_N_c_green) (guard: out_D_N_A.red) (assignments: out_D_N_A := out_D_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 2p> -> <bdd 19n 2p> [forward reach with edge: (event: out_D_S_c_green) (guard: out_D_S_A.red) (assignments: out_D_S_A := out_D_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 2p> -> <bdd 20n 4p> [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 20n 4p> -> <bdd 19n 4p> [forward reach with edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 4p> -> <bdd 17n 2p> [forward reach with edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 2p> -> <bdd 18n 4p> [forward reach with edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 4p> -> <bdd 17n 4p> [forward reach with edge: (event: in_D_S_c_redred) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 4p> -> <bdd 15n 2p> [forward reach with edge: (event: in_D_S_c_green) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 15n 2p> -> <bdd 15n 2p> [forward reach with edge: (event: gate_D_N_u_s1_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.closed) (assignments: gate_D_N_S := gate_D_N_S.bclosed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 2p> -> <bdd 16n 3p> [forward reach with edge: (event: gate_D_N_u_s2_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.bclosed) (assignments: gate_D_N_S := gate_D_N_S.fclosed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 3p> -> <bdd 15n 2p> [forward reach with edge: (event: gate_D_N_u_s3_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.fclosed) (assignments: gate_D_N_S := gate_D_N_S.middle), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 2p> -> <bdd 17n 4p> [forward reach with edge: (event: gate_D_N_u_s4_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.middle) (assignments: gate_D_N_S := gate_D_N_S.fopen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 4p> -> <bdd 16n 3p> [forward reach with edge: (event: gate_D_N_u_s5_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.fopen) (assignments: gate_D_N_S := gate_D_N_S.bopen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 3p> -> <bdd 17n 4p> [forward reach with edge: (event: gate_D_N_u_s6_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.bopen) (assignments: gate_D_N_S := gate_D_N_S.open), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 4p> -> <bdd 35n 9p> [forward reach with edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.opening -> <bdd 14n 1p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 35n 9p> -> <bdd 33n 11p> [forward reach with edge: (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 11p> -> <bdd 35n 18p> [forward reach with edge: (event: out_D_N_u_g_on) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 35n 18p> -> <bdd 35n 25p> [forward reach with edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 35n 25p> -> <bdd 34n 18p> [forward reach with edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 34n 18p> -> <bdd 33n 18p> [forward reach with edge: (event: out_D_N_c_green) (guard: out_D_N_A.red) (assignments: out_D_N_A := out_D_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 18p> -> <bdd 30n 11p> [forward reach with edge: (event: out_D_N_c_red) (guard: out_D_N_A.green) (assignments: out_D_N_A := out_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 30n 11p> -> <bdd 32n 18p> [forward reach with edge: (event: out_D_S_u_g_on) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 32n 18p> -> <bdd 32n 25p> [forward reach with edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 32n 25p> -> <bdd 31n 18p> [forward reach with edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 31n 18p> -> <bdd 30n 18p> [forward reach with edge: (event: out_D_S_c_green) (guard: out_D_S_A.red) (assignments: out_D_S_A := out_D_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 30n 18p> -> <bdd 29n 11p> [forward reach with edge: (event: out_D_S_c_red) (guard: out_D_S_A.green) (assignments: out_D_S_A := out_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 11p> -> <bdd 34n 32p> [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 34n 32p> -> <bdd 33n 25p> [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 25p> -> <bdd 39n 36p> [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 39n 36p> -> <bdd 41n 50p> [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 41n 50p> -> <bdd 42n 57p> [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 42n 57p> -> <bdd 43n 61p> [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 43n 61p> -> <bdd 39n 47p> [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 39n 47p> -> <bdd 38n 61p> [forward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 38n 61p> -> <bdd 38n 57p> [forward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 38n 57p> -> <bdd 37n 57p> [forward reach with edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 37n 57p> -> <bdd 42n 204p> [forward reach with edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 42n 204p> -> <bdd 41n 155p> [forward reach with edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 41n 155p> -> <bdd 47n 212p> [forward reach with edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 47n 212p> -> <bdd 49n 310p> [forward reach with edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 49n 310p> -> <bdd 50n 359p> [forward reach with edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 50n 359p> -> <bdd 51n 367p> [forward reach with edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 51n 367p> -> <bdd 47n 269p> [forward reach with edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 47n 269p> -> <bdd 46n 367p> [forward reach with edge: (event: in_D_S_c_red) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 46n 367p> -> <bdd 46n 359p> [forward reach with edge: (event: in_D_S_c_red) (guard: in_D_S_A.redred) (assignments: in_D_S_A := in_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 46n 359p> -> <bdd 45n 359p> [forward reach with edge: (event: in_D_S_c_green) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 45n 359p> -> <bdd 47n 375p> [forward reach with edge: (event: out_D_N_u_g_on) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 47n 375p> -> <bdd 47n 391p> [forward reach with edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 47n 391p> -> <bdd 46n 375p> [forward reach with edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 46n 375p> -> <bdd 43n 359p> [forward reach with edge: (event: out_D_N_c_red) (guard: out_D_N_A.green) (assignments: out_D_N_A := out_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 43n 359p> -> <bdd 45n 375p> [forward reach with edge: (event: out_D_S_u_g_on) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 45n 375p> -> <bdd 45n 391p> [forward reach with edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 45n 391p> -> <bdd 44n 375p> [forward reach with edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 44n 375p> -> <bdd 37n 359p> [forward reach with edge: (event: out_D_S_c_red) (guard: out_D_S_A.green) (assignments: out_D_S_A := out_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 37n 359p> -> <bdd 41n 375p> [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 41n 375p> -> <bdd 39n 367p> [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 39n 367p> -> <bdd 41n 383p> [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 41n 383p> -> <bdd 42n 391p> [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 42n 391p> -> <bdd 43n 538p> [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 43n 538p> -> <bdd 41n 546p> [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 41n 546p> -> <bdd 39n 497p> [forward reach with edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 39n 497p> -> <bdd 40n 521p> [forward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 40n 521p> -> <bdd 33n 203p> [forward reach with edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 203p> -> <bdd 37n 259p> [forward reach with edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 37n 259p> -> <bdd 35n 231p> [forward reach with edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 35n 231p> -> <bdd 37n 287p> [forward reach with edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 37n 287p> -> <bdd 36n 315p> [forward reach with edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 36n 315p> -> <bdd 37n 378p> [forward reach with edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 37n 378p> -> <bdd 33n 406p> [forward reach with edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 406p> -> <bdd 32n 385p> [forward reach with edge: (event: in_D_S_c_redred) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 32n 385p> -> <bdd 33n 469p> [forward reach with edge: (event: in_D_S_c_red) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 33n 469p> -> <bdd 29n 259p> [forward reach with edge: (event: in_D_S_c_green) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 29n 259p> -> <bdd 38n 518p> [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 38n 518p> -> <bdd 36n 371p> [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 36n 371p> -> <bdd 37n 413p> [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 37n 413p> -> <bdd 38n 434p> [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 38n 434p> -> <bdd 37n 392p> [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 37n 392p> -> <bdd 41n 539p> [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 41n 539p> -> <bdd 39n 441p> [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 39n 441p> -> <bdd 31n 245p> [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 31n 245p> -> <bdd 29n 217p> [forward reach with edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 217p> -> <bdd 24n 161p> [forward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 161p> -> <bdd 29n 290p> [forward reach with edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 290p> -> <bdd 28n 209p> [forward reach with edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 28n 209p> -> <bdd 29n 223p> [forward reach with edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 223p> -> <bdd 30n 230p> [forward reach with edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 30n 230p> -> <bdd 29n 216p> [forward reach with edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 29n 216p> -> <bdd 31n 297p> [forward reach with edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 31n 297p> -> <bdd 30n 243p> [forward reach with edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 30n 243p> -> <bdd 26n 135p> [forward reach with edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 26n 135p> -> <bdd 24n 115p> [forward reach with edge: (event: in_D_S_c_redred) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 24n 115p> -> <bdd 23n 107p> [forward reach with edge: (event: in_D_S_c_red) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: <bdd 23n 107p> -> <bdd 21n 87p> [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 21n 87p> -> <bdd 22n 107p> [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 22n 107p> -> <bdd 17n 27p> [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 27p> -> <bdd 15n 23p> [forward reach with edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 23p> -> <bdd 16n 27p> [forward reach with edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 27p> -> true [forward reach with edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 6.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: gate_D_N_c_open) (guard: gate_D_N_Dir.off) (assignments: gate_D_N_Dir := gate_D_N_Dir.opening): guard: gate_D_N_Dir.off -> not gate_D_N_Dir.closing and not gate_D_N_Dir.opening.
Edge (event: gate_D_N_c_open) (guard: gate_D_N_Dir.closing) (assignments: gate_D_N_Dir := gate_D_N_Dir.opening): guard: gate_D_N_Dir.closing -> not gate_D_N_Dir.off and not gate_D_N_Dir.opening.
Edge (event: gate_D_N_c_close) (guard: gate_D_N_Dir.off -> <bdd 14n 1p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing): guard: <bdd 14n 1p> -> <bdd 17n 3p>.
Edge (event: gate_D_N_c_close) (guard: gate_D_N_Dir.opening -> <bdd 14n 1p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing): guard: <bdd 14n 1p> -> <bdd 17n 3p>.
Edge (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.off): guard: gate_D_N_Dir.opening -> gate_D_N_Dir.opening.
Edge (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.closing) (assignments: gate_D_N_Dir := gate_D_N_Dir.off): guard: gate_D_N_Dir.closing -> not gate_D_N_Dir.off and not gate_D_N_Dir.opening.
Edge (event: out_D_N_c_green) (guard: out_D_N_A.red) (assignments: out_D_N_A := out_D_N_A.green): guard: out_D_N_A.red -> (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.red))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.red)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.red))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.red))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.red)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.red)))).
Edge (event: out_D_N_c_red) (guard: out_D_N_A.green) (assignments: out_D_N_A := out_D_N_A.red): guard: out_D_N_A.green -> (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.green))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.green)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.green))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.green))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.green)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.green)))).
Edge (event: out_D_S_c_green) (guard: out_D_S_A.red) (assignments: out_D_S_A := out_D_S_A.green): guard: out_D_S_A.red -> (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.red))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.red)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.red))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.red))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.red)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.red)))).
Edge (event: out_D_S_c_red) (guard: out_D_S_A.green) (assignments: out_D_S_A := out_D_S_A.red): guard: out_D_S_A.green -> (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.green))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.green)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.green))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.green))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.green)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.green)))).
Edge (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen): guard: in_D_N_A.red -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red))).
Edge (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen): guard: in_D_N_A.green -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.green)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.green) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.green)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.green)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.green) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.green))).
Edge (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred): guard: in_D_N_A.red -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red))).
Edge (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red): guard: in_D_N_A.green -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.green)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.green) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.green)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.green)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.green) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.green))).
Edge (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red): guard: in_D_N_A.redred -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redred)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redred) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redred)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redred)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redred) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redred))).
Edge (event: in_D_N_c_red) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.red): guard: in_D_N_A.redgreen -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen))).
Edge (event: in_D_N_c_green) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.green): guard: in_D_N_A.redgreen -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen))).
Edge (event: in_D_S_c_redgreen) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redgreen): guard: in_D_S_A.red -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red))).
Edge (event: in_D_S_c_redgreen) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.redgreen): guard: in_D_S_A.green -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.green)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.green) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.green)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.green)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.green) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.green))).
Edge (event: in_D_S_c_redred) (guard: in_D_S_A.red) (assignments: in_D_S_A := in_D_S_A.redred): guard: in_D_S_A.red -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red))).
Edge (event: in_D_S_c_red) (guard: in_D_S_A.green) (assignments: in_D_S_A := in_D_S_A.red): guard: in_D_S_A.green -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.green)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.green) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.green)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.green)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.green) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.green))).
Edge (event: in_D_S_c_red) (guard: in_D_S_A.redred) (assignments: in_D_S_A := in_D_S_A.red): guard: in_D_S_A.redred -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redred)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redred) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redred)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redred)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redred) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redred))).
Edge (event: in_D_S_c_red) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.red): guard: in_D_S_A.redgreen -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen))).
Edge (event: in_D_S_c_green) (guard: in_D_S_A.redgreen) (assignments: in_D_S_A := in_D_S_A.green): guard: in_D_S_A.redgreen -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen))).

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: gate_D_N_u_s1_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.closed) (assignments: gate_D_N_S := gate_D_N_S.bclosed)
    Edge: (event: gate_D_N_u_s1_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.bclosed) (assignments: gate_D_N_S := gate_D_N_S.closed)
    Edge: (event: gate_D_N_u_s2_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.bclosed) (assignments: gate_D_N_S := gate_D_N_S.fclosed)
    Edge: (event: gate_D_N_u_s2_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.fclosed) (assignments: gate_D_N_S := gate_D_N_S.bclosed)
    Edge: (event: gate_D_N_u_s3_on) (guard: gate_D_N_Dir.opening and gate_D_N_S.fclosed) (assignments: gate_D_N_S := gate_D_N_S.middle)
    Edge: (event: gate_D_N_u_s3_off) (guard: gate_D_N_Dir.closing and gate_D_N_S.middle) (assignments: gate_D_N_S := gate_D_N_S.fclosed)
    Edge: (event: gate_D_N_u_s4_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.middle) (assignments: gate_D_N_S := gate_D_N_S.fopen)
    Edge: (event: gate_D_N_u_s4_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.fopen) (assignments: gate_D_N_S := gate_D_N_S.middle)
    Edge: (event: gate_D_N_u_s5_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.fopen) (assignments: gate_D_N_S := gate_D_N_S.bopen)
    Edge: (event: gate_D_N_u_s5_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.bopen) (assignments: gate_D_N_S := gate_D_N_S.fopen)
    Edge: (event: gate_D_N_u_s6_off) (guard: gate_D_N_Dir.opening and gate_D_N_S.bopen) (assignments: gate_D_N_S := gate_D_N_S.open)
    Edge: (event: gate_D_N_u_s6_on) (guard: gate_D_N_Dir.closing and gate_D_N_S.open) (assignments: gate_D_N_S := gate_D_N_S.bopen)
    Edge: (event: gate_D_N_c_open) (guard: gate_D_N_Dir.off -> not gate_D_N_Dir.closing and not gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.opening)
    Edge: (event: gate_D_N_c_open) (guard: gate_D_N_Dir.closing -> not gate_D_N_Dir.off and not gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.opening)
    Edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.off -> <bdd 17n 3p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing)
    Edge: (event: gate_D_N_c_close) (guard: gate_D_N_Dir.opening -> <bdd 17n 3p>) (assignments: gate_D_N_Dir := gate_D_N_Dir.closing)
    Edge: (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.opening -> gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.off)
    Edge: (event: gate_D_N_c_stop) (guard: gate_D_N_Dir.closing -> not gate_D_N_Dir.off and not gate_D_N_Dir.opening) (assignments: gate_D_N_Dir := gate_D_N_Dir.off)
    Edge: (event: out_D_N_u_r_on) (guard: out_D_N_A.red and out_D_N_S.off) (assignments: out_D_N_S := out_D_N_S.red)
    Edge: (event: out_D_N_u_r_on) (guard: out_D_N_A.red and out_D_N_S.green) (assignments: out_D_N_S := out_D_N_S.redgreen)
    Edge: (event: out_D_N_u_g_on) (guard: out_D_N_A.green and out_D_N_S.off) (assignments: out_D_N_S := out_D_N_S.green)
    Edge: (event: out_D_N_u_g_on) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.redgreen)
    Edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.red) (assignments: out_D_N_S := out_D_N_S.off)
    Edge: (event: out_D_N_u_r_off) (guard: out_D_N_A.green and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.green)
    Edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.green) (assignments: out_D_N_S := out_D_N_S.off)
    Edge: (event: out_D_N_u_g_off) (guard: out_D_N_A.red and out_D_N_S.redgreen) (assignments: out_D_N_S := out_D_N_S.red)
    Edge: (event: out_D_N_c_green) (guard: out_D_N_A.red -> (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.red))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.red)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.red))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.red))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.red)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.red))))) (assignments: out_D_N_A := out_D_N_A.green)
    Edge: (event: out_D_N_c_red) (guard: out_D_N_A.green -> (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.green))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.green)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.green))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.green))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.green)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.green))))) (assignments: out_D_N_A := out_D_N_A.red)
    Edge: (event: out_D_S_u_r_on) (guard: out_D_S_A.red and out_D_S_S.off) (assignments: out_D_S_S := out_D_S_S.red)
    Edge: (event: out_D_S_u_r_on) (guard: out_D_S_A.red and out_D_S_S.green) (assignments: out_D_S_S := out_D_S_S.redgreen)
    Edge: (event: out_D_S_u_g_on) (guard: out_D_S_A.green and out_D_S_S.off) (assignments: out_D_S_S := out_D_S_S.green)
    Edge: (event: out_D_S_u_g_on) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.redgreen)
    Edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.red) (assignments: out_D_S_S := out_D_S_S.off)
    Edge: (event: out_D_S_u_r_off) (guard: out_D_S_A.green and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.green)
    Edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.green) (assignments: out_D_S_S := out_D_S_S.off)
    Edge: (event: out_D_S_u_g_off) (guard: out_D_S_A.red and out_D_S_S.redgreen) (assignments: out_D_S_S := out_D_S_S.red)
    Edge: (event: out_D_S_c_green) (guard: out_D_S_A.red -> (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.red))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.red)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.red))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.red))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.red)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.red))))) (assignments: out_D_S_A := out_D_S_A.green)
    Edge: (event: out_D_S_c_red) (guard: out_D_S_A.green -> (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.green))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.green)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.green))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.green))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.green)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.green))))) (assignments: out_D_S_A := out_D_S_A.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red)))) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.green)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.green) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.green)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.green)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.green) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.green)))) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red)))) (assignments: in_D_N_A := in_D_N_A.redred)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.green -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.green)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.green) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.green)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.green)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.green) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.green)))) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redred)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redred) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redred)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redred)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redred) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redred)))) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redgreen -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen)))) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen)))) (assignments: in_D_N_A := in_D_N_A.green)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redred and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_r_on) (guard: in_D_S_A.redgreen and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_g_on) (guard: in_D_S_A.redgreen and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.off) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_s_on) (guard: in_D_S_A.redred and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.redgreenred)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.red) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_r_off) (guard: in_D_S_A.green and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.greenred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.green) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.redgreen) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.lowred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.red and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_g_off) (guard: in_D_S_A.redred and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redred)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.lowred) (assignments: in_D_S_S := in_D_S_S.off)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.redred) (assignments: in_D_S_S := in_D_S_S.red)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.greenred) (assignments: in_D_S_S := in_D_S_S.green)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.red and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.green and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_u_s_off) (guard: in_D_S_A.redgreen and in_D_S_S.redgreenred) (assignments: in_D_S_S := in_D_S_S.redgreen)
    Edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.red -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red)))) (assignments: in_D_S_A := in_D_S_A.redgreen)
    Edge: (event: in_D_S_c_redgreen) (guard: in_D_S_A.green -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.green)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.green) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.green)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.green)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.green) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.green)))) (assignments: in_D_S_A := in_D_S_A.redgreen)
    Edge: (event: in_D_S_c_redred) (guard: in_D_S_A.red -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red)))) (assignments: in_D_S_A := in_D_S_A.redred)
    Edge: (event: in_D_S_c_red) (guard: in_D_S_A.green -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.green)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.green) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.green)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.green)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.green) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.green)))) (assignments: in_D_S_A := in_D_S_A.red)
    Edge: (event: in_D_S_c_red) (guard: in_D_S_A.redred -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redred)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redred) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redred)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redred)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redred) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redred)))) (assignments: in_D_S_A := in_D_S_A.red)
    Edge: (event: in_D_S_c_red) (guard: in_D_S_A.redgreen -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen)))) (assignments: in_D_S_A := in_D_S_A.red)
    Edge: (event: in_D_S_c_green) (guard: in_D_S_A.redgreen -> not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen)))) (assignments: in_D_S_A := in_D_S_A.green)

Controlled system:                     exactly 1,376,256 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         <bdd 21n 1p>
Initial (controlled system):           <bdd 21n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event gate_D_N_c_open: guard: not gate_D_N_Dir.opening -> true [assume not gate_D_N_Dir.opening].
  Event gate_D_N_c_close: guard: <bdd 16n 3p> -> true [assume <bdd 16n 3p>].
  Event gate_D_N_c_stop: guard: not gate_D_N_Dir.off -> true [assume not gate_D_N_Dir.off].
  Event out_D_N_c_green: guard: (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.red))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.red)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.red))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.red))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.red)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.red)))) -> true [assume (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.red))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.red)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.red))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.red))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.red)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.red))))].
  Event out_D_N_c_red: guard: (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.green))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.green)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.green))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.green))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.green)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.green)))) -> true [assume (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.green))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.green)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.green))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_N_A.green))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_N_A.green)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_N_A.green))))].
  Event out_D_S_c_green: guard: (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.red))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.red)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.red))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.red))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.red)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.red)))) -> true [assume (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.red))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.red)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.red))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.red))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.red)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.red))))].
  Event out_D_S_c_red: guard: (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.green))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.green)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.green))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.green))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.green)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.green)))) -> true [assume (gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.green))) and ((gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.green)) and (gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.green))) and ((not gate_D_N_Dir.opening or gate_D_N_S.bclosed or (gate_D_N_S.middle or (gate_D_N_S.bopen or out_D_S_A.green))) and ((not gate_D_N_Dir.opening or (not gate_D_N_S.bclosed and not gate_D_N_S.bopen or out_D_S_A.green)) and (not gate_D_N_Dir.opening or (not gate_D_N_S.middle or out_D_S_A.green))))].
  Event in_D_N_c_redgreen: guard: (gate_D_N_Dir.opening or (gate_D_N_S.bclosed or gate_D_N_S.middle) or (gate_D_N_S.bopen or (in_D_N_A.red or in_D_N_A.green))) and ((gate_D_N_Dir.opening or not gate_D_N_S.bclosed and not gate_D_N_S.bopen or (in_D_N_A.red or in_D_N_A.green)) and (gate_D_N_Dir.opening or not gate_D_N_S.middle or (in_D_N_A.red or in_D_N_A.green))) and ((not gate_D_N_Dir.opening or (gate_D_N_S.bclosed or gate_D_N_S.middle) or (gate_D_N_S.bopen or (in_D_N_A.red or in_D_N_A.green))) and ((not gate_D_N_Dir.opening or not gate_D_N_S.bclosed and not gate_D_N_S.bopen or (in_D_N_A.red or in_D_N_A.green)) and (not gate_D_N_Dir.opening or not gate_D_N_S.middle or (in_D_N_A.red or in_D_N_A.green)))) -> true [assume (gate_D_N_Dir.opening or (gate_D_N_S.bclosed or gate_D_N_S.middle) or (gate_D_N_S.bopen or (in_D_N_A.red or in_D_N_A.green))) and ((gate_D_N_Dir.opening or not gate_D_N_S.bclosed and not gate_D_N_S.bopen or (in_D_N_A.red or in_D_N_A.green)) and (gate_D_N_Dir.opening or not gate_D_N_S.middle or (in_D_N_A.red or in_D_N_A.green))) and ((not gate_D_N_Dir.opening or (gate_D_N_S.bclosed or gate_D_N_S.middle) or (gate_D_N_S.bopen or (in_D_N_A.red or in_D_N_A.green))) and ((not gate_D_N_Dir.opening or not gate_D_N_S.bclosed and not gate_D_N_S.bopen or (in_D_N_A.red or in_D_N_A.green)) and (not gate_D_N_Dir.opening or not gate_D_N_S.middle or (in_D_N_A.red or in_D_N_A.green))))].
  Event in_D_N_c_redred: guard: not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red))) -> true [assume not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.red)))].
  Event in_D_N_c_red: guard: <bdd 7n 12p> -> true [assume <bdd 7n 12p>].
  Event in_D_N_c_green: guard: not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen))) -> true [assume not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_N_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_N_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_N_A.redgreen)))].
  Event in_D_S_c_redgreen: guard: (gate_D_N_Dir.opening or (gate_D_N_S.bclosed or gate_D_N_S.middle) or (gate_D_N_S.bopen or (in_D_S_A.red or in_D_S_A.green))) and ((gate_D_N_Dir.opening or not gate_D_N_S.bclosed and not gate_D_N_S.bopen or (in_D_S_A.red or in_D_S_A.green)) and (gate_D_N_Dir.opening or not gate_D_N_S.middle or (in_D_S_A.red or in_D_S_A.green))) and ((not gate_D_N_Dir.opening or (gate_D_N_S.bclosed or gate_D_N_S.middle) or (gate_D_N_S.bopen or (in_D_S_A.red or in_D_S_A.green))) and ((not gate_D_N_Dir.opening or not gate_D_N_S.bclosed and not gate_D_N_S.bopen or (in_D_S_A.red or in_D_S_A.green)) and (not gate_D_N_Dir.opening or not gate_D_N_S.middle or (in_D_S_A.red or in_D_S_A.green)))) -> true [assume (gate_D_N_Dir.opening or (gate_D_N_S.bclosed or gate_D_N_S.middle) or (gate_D_N_S.bopen or (in_D_S_A.red or in_D_S_A.green))) and ((gate_D_N_Dir.opening or not gate_D_N_S.bclosed and not gate_D_N_S.bopen or (in_D_S_A.red or in_D_S_A.green)) and (gate_D_N_Dir.opening or not gate_D_N_S.middle or (in_D_S_A.red or in_D_S_A.green))) and ((not gate_D_N_Dir.opening or (gate_D_N_S.bclosed or gate_D_N_S.middle) or (gate_D_N_S.bopen or (in_D_S_A.red or in_D_S_A.green))) and ((not gate_D_N_Dir.opening or not gate_D_N_S.bclosed and not gate_D_N_S.bopen or (in_D_S_A.red or in_D_S_A.green)) and (not gate_D_N_Dir.opening or not gate_D_N_S.middle or (in_D_S_A.red or in_D_S_A.green))))].
  Event in_D_S_c_redred: guard: not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red))) -> true [assume not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.red)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.red) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.red)))].
  Event in_D_S_c_red: guard: <bdd 7n 12p> -> true [assume <bdd 7n 12p>].
  Event in_D_S_c_green: guard: not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen))) -> true [assume not gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (not gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or not gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and not gate_D_N_S.bclosed and (not gate_D_N_S.middle and (not gate_D_N_S.bopen and in_D_S_A.redgreen)) or (gate_D_N_Dir.opening and ((gate_D_N_S.bclosed or gate_D_N_S.bopen) and in_D_S_A.redgreen) or gate_D_N_Dir.opening and (gate_D_N_S.middle and in_D_S_A.redgreen)))].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_largereq/subplant_43_sup.cif".
