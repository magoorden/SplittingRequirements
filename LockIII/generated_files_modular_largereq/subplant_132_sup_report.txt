Reading CIF file "generated_files_modular_largereq/subplant_132.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name          Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   gate_U_S_Dir  0      2 * 2     3 * 2       4 * 2       75%
  2      location pointer  n/a   gate_U_S_Pre  1      2 * 2     3 * 2       4 * 2       75%
  3      location pointer  n/a   gate_U_S_S    2      3 * 2     7 * 2       8 * 2       ~88%
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  Total                                        3      14        26          32          ~81%

Applying automatic variable ordering:
  Number of hyperedges: 20

  Applying FORCE algorithm:
    Maximum number of iterations: 20

    Total span:                   26 (total)                 1.30 (avg/edge) [before]
    Total span:                   26 (total)                 1.30 (avg/edge) [iteration 1]
    Total span:                   26 (total)                 1.30 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 3

    Total span:                   26 (total)                 1.30 (avg/edge) [before]
    Total span:                   13 (total)                 0.65 (avg/edge) [window 0..2]
    Total span:                   13 (total)                 0.65 (avg/edge) [after]

  Variable order changed.

CIF variables and location pointers:
  Nr     Kind              Type  Name          Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   gate_U_S_Pre  0      2 * 2     3 * 2       4 * 2       75%
  2      location pointer  n/a   gate_U_S_Dir  1      2 * 2     3 * 2       4 * 2       75%
  3      location pointer  n/a   gate_U_S_S    2      3 * 2     7 * 2       8 * 2       ~88%
  -----  ----------------  ----  ------------  -----  --------  ----------  ----------  -----------
  Total                                        3      14        26          32          ~81%

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     gate_U_S_S.closed
Initial   (aut/locs init predicate):     gate_U_S_Dir.off
Initial   (aut/locs init predicate):     gate_U_S_Pre.off
Initial   (auts/locs init predicate):    gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed)
Initial   (uncontrolled system):         gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed)
Initial   (system, combined init/inv):   gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed)

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   gate_U_S_S.closed
Marked    (aut/locs marker predicate):   gate_U_S_Dir.off
Marked    (aut/locs marker predicate):   gate_U_S_Pre.off
Marked    (auts/locs marker predicate):  gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed)
Marked    (uncontrolled system):         gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed)
Marked    (system, combined marked/inv): gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed)

State/event exclusion requirements:
  Event "gate_U_S_c_high_off" needs:
    gate_U_S_Dir.off or gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed) or (gate_U_S_Dir.closing and gate_U_S_S.bclosed or gate_U_S_Dir.opening and (gate_U_S_S.fopen or (gate_U_S_S.bopen or gate_U_S_S.open)))

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: gate_U_S_u_s1_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.closed) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s1_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.bclosed) (assignments: gate_U_S_S := gate_U_S_S.closed)
    Edge: (event: gate_U_S_u_s2_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.bclosed) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s2_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.fclosed) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s3_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.fclosed) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s3_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.middle) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s4_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.middle) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s4_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.fopen) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s5_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.fopen) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_u_s5_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.bopen) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s6_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.bopen) (assignments: gate_U_S_S := gate_U_S_S.open)
    Edge: (event: gate_U_S_u_s6_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.open) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)
    Edge: (event: gate_U_S_c_high_on) (guard: gate_U_S_Pre.off) (assignments: gate_U_S_Pre := gate_U_S_Pre.high)
    Edge: (event: gate_U_S_c_low_on) (guard: gate_U_S_Pre.off) (assignments: gate_U_S_Pre := gate_U_S_Pre.low)
    Edge: (event: gate_U_S_c_high_off) (guard: gate_U_S_Pre.high) (assignments: gate_U_S_Pre := gate_U_S_Pre.off)
    Edge: (event: gate_U_S_c_low_off) (guard: gate_U_S_Pre.low) (assignments: gate_U_S_Pre := gate_U_S_Pre.off)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Controlled behavior: true -> true [range: true, variable: location pointer for automaton "gate_U_S_Pre" (group: 0, domain: 0+1, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> true [range: true, variable: location pointer for automaton "gate_U_S_Dir" (group: 1, domain: 2+3, BDD variables: 2, CIF/BDD values: 3/4)].
Controlled behavior: true -> <bdd 7n 12p> [range: true, variable: location pointer for automaton "gate_U_S_S" (group: 2, domain: 4+5, BDD variables: 3, CIF/BDD values: 7/8)].

Extended controlled-behavior predicate using variable ranges: <bdd 7n 12p>.

Restricting behavior using state/event exclusion requirements.

Edge (event: gate_U_S_c_high_off) (guard: gate_U_S_Pre.high) (assignments: gate_U_S_Pre := gate_U_S_Pre.off): guard: gate_U_S_Pre.high -> gate_U_S_Pre.high and gate_U_S_Dir.off or gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or (gate_U_S_Pre.high and (gate_U_S_Dir.closing and gate_U_S_S.bclosed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.fopen or (gate_U_S_S.bopen or gate_U_S_S.open)))) [requirement: gate_U_S_Dir.off or gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed) or (gate_U_S_Dir.closing and gate_U_S_S.bclosed or gate_U_S_Dir.opening and (gate_U_S_S.fopen or (gate_U_S_S.bopen or gate_U_S_S.open)))].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: <bdd 7n 12p>)
    Edge: (event: gate_U_S_u_s1_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.closed) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s1_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.bclosed) (assignments: gate_U_S_S := gate_U_S_S.closed)
    Edge: (event: gate_U_S_u_s2_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.bclosed) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s2_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.fclosed) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s3_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.fclosed) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s3_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.middle) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s4_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.middle) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s4_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.fopen) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s5_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.fopen) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_u_s5_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.bopen) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s6_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.bopen) (assignments: gate_U_S_S := gate_U_S_S.open)
    Edge: (event: gate_U_S_u_s6_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.open) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)
    Edge: (event: gate_U_S_c_high_on) (guard: gate_U_S_Pre.off) (assignments: gate_U_S_Pre := gate_U_S_Pre.high)
    Edge: (event: gate_U_S_c_low_on) (guard: gate_U_S_Pre.off) (assignments: gate_U_S_Pre := gate_U_S_Pre.low)
    Edge: (event: gate_U_S_c_high_off) (guard: gate_U_S_Pre.high -> gate_U_S_Pre.high and gate_U_S_Dir.off or gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or (gate_U_S_Pre.high and (gate_U_S_Dir.closing and gate_U_S_S.bclosed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.fopen or (gate_U_S_S.bopen or gate_U_S_S.open))))) (assignments: gate_U_S_Pre := gate_U_S_Pre.off)
    Edge: (event: gate_U_S_c_low_off) (guard: gate_U_S_Pre.low) (assignments: gate_U_S_Pre := gate_U_S_Pre.off)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed) [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed) -> gate_U_S_Pre.off and (not gate_U_S_Dir.closing and gate_U_S_S.closed) [backward reach with edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: gate_U_S_Pre.off and (not gate_U_S_Dir.closing and gate_U_S_S.closed) -> gate_U_S_Pre.off and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.off and (gate_U_S_Dir.opening and gate_U_S_S.closed) [backward reach with edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: gate_U_S_Pre.off and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.off and (gate_U_S_Dir.opening and gate_U_S_S.closed) -> gate_U_S_Pre.off and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.off and (gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed)) [backward reach with edge: (event: gate_U_S_c_high_off) (guard: gate_U_S_Pre.high -> gate_U_S_Pre.high and gate_U_S_Dir.off or gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or (gate_U_S_Pre.high and (gate_U_S_Dir.closing and gate_U_S_S.bclosed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.fopen or (gate_U_S_S.bopen or gate_U_S_S.open))))) (assignments: gate_U_S_Pre := gate_U_S_Pre.off), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: gate_U_S_Pre.off and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.off and (gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed)) -> not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed)) [backward reach with edge: (event: gate_U_S_c_low_off) (guard: gate_U_S_Pre.low) (assignments: gate_U_S_Pre := gate_U_S_Pre.off), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward reachability: iteration 2.
Backward controlled-behavior: not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed)) -> not gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or not gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.bclosed)) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.bclosed)))) [backward reach with edge: (event: gate_U_S_u_s1_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.bclosed) (assignments: gate_U_S_S := gate_U_S_S.closed), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: not gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or not gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.bclosed)) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.bclosed)))) -> not gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or (not gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or not gate_U_S_Pre.high and (gate_U_S_Dir.closing and gate_U_S_S.bclosed)) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or (gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or gate_U_S_Pre.high and (gate_U_S_Dir.closing and gate_U_S_S.bclosed))) [backward reach with edge: (event: gate_U_S_u_s2_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.fclosed) (assignments: gate_U_S_S := gate_U_S_S.bclosed), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: not gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or (not gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or not gate_U_S_Pre.high and (gate_U_S_Dir.closing and gate_U_S_S.bclosed)) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or (gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or gate_U_S_Pre.high and (gate_U_S_Dir.closing and gate_U_S_S.bclosed))) -> not gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or not gate_U_S_Pre.high and gate_U_S_Dir.closing and (not gate_U_S_S.fopen and (not gate_U_S_S.bopen and not gate_U_S_S.open)) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or gate_U_S_Pre.high and gate_U_S_Dir.closing and (not gate_U_S_S.fopen and (not gate_U_S_S.bopen and not gate_U_S_S.open)))) [backward reach with edge: (event: gate_U_S_u_s3_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.middle) (assignments: gate_U_S_S := gate_U_S_S.fclosed), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: not gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or not gate_U_S_Pre.high and gate_U_S_Dir.closing and (not gate_U_S_S.fopen and (not gate_U_S_S.bopen and not gate_U_S_S.open)) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or gate_U_S_Pre.high and gate_U_S_Dir.closing and (not gate_U_S_S.fopen and (not gate_U_S_S.bopen and not gate_U_S_S.open)))) -> <bdd 11n 9p> [backward reach with edge: (event: gate_U_S_u_s4_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.fopen) (assignments: gate_U_S_S := gate_U_S_S.middle), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: <bdd 11n 9p> -> not gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or (not gate_U_S_Pre.high and gate_U_S_Dir.closing and (not gate_U_S_S.fclosed and (not gate_U_S_S.middle and not gate_U_S_S.open)) or not gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.fclosed or gate_U_S_S.middle))) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or (gate_U_S_Pre.high and gate_U_S_Dir.closing and (not gate_U_S_S.fclosed and (not gate_U_S_S.middle and not gate_U_S_S.open)) or gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.fclosed or gate_U_S_S.middle)))) [backward reach with edge: (event: gate_U_S_u_s5_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.bopen) (assignments: gate_U_S_S := gate_U_S_S.fopen), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: not gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or (not gate_U_S_Pre.high and gate_U_S_Dir.closing and (not gate_U_S_S.fclosed and (not gate_U_S_S.middle and not gate_U_S_S.open)) or not gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.fclosed or gate_U_S_S.middle))) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.off and gate_U_S_S.closed) or (gate_U_S_Pre.high and gate_U_S_Dir.closing and (not gate_U_S_S.fclosed and (not gate_U_S_S.middle and not gate_U_S_S.open)) or gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.fclosed or gate_U_S_S.middle)))) -> <bdd 11n 9p> [backward reach with edge: (event: gate_U_S_u_s6_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.open) (assignments: gate_U_S_S := gate_U_S_S.bopen), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: <bdd 11n 9p> -> (gate_U_S_Pre.high or (not gate_U_S_Dir.opening or not gate_U_S_S.fopen)) and (gate_U_S_Pre.high or (not gate_U_S_Dir.opening or not gate_U_S_S.fclosed and not gate_U_S_S.open)) and ((gate_U_S_Pre.high or (not gate_U_S_Dir.opening or not gate_U_S_S.bclosed and (not gate_U_S_S.middle and not gate_U_S_S.bopen))) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening)) [backward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward controlled-behavior: (gate_U_S_Pre.high or (not gate_U_S_Dir.opening or not gate_U_S_S.fopen)) and (gate_U_S_Pre.high or (not gate_U_S_Dir.opening or not gate_U_S_S.fclosed and not gate_U_S_S.open)) and ((gate_U_S_Pre.high or (not gate_U_S_Dir.opening or not gate_U_S_S.bclosed and (not gate_U_S_S.middle and not gate_U_S_S.bopen))) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening)) -> <bdd 7n 12p> [backward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Backward reachability: iteration 3.
Backward controlled-behavior: <bdd 7n 12p> [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed) [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed) -> gate_U_S_Pre.off and (not gate_U_S_Dir.closing and gate_U_S_S.closed) [forward reach with edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: gate_U_S_Pre.off and (not gate_U_S_Dir.closing and gate_U_S_S.closed) -> gate_U_S_Pre.off and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.off and (gate_U_S_Dir.opening and gate_U_S_S.closed) [forward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: gate_U_S_Pre.off and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.off and (gate_U_S_Dir.opening and gate_U_S_S.closed) -> not gate_U_S_Pre.low and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.low and (gate_U_S_Dir.opening and gate_U_S_S.closed) [forward reach with edge: (event: gate_U_S_c_high_on) (guard: gate_U_S_Pre.off) (assignments: gate_U_S_Pre := gate_U_S_Pre.high), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: not gate_U_S_Pre.low and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.low and (gate_U_S_Dir.opening and gate_U_S_S.closed) -> not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed)) [forward reach with edge: (event: gate_U_S_c_low_on) (guard: gate_U_S_Pre.off) (assignments: gate_U_S_Pre := gate_U_S_Pre.low), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward reachability: iteration 2.
Forward controlled-behavior: not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.closed)) -> not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.bclosed)) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.bclosed))) [forward reach with edge: (event: gate_U_S_u_s1_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.closed) (assignments: gate_U_S_S := gate_U_S_S.bclosed), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.bclosed)) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.bclosed))) -> not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.bclosed)) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.bclosed))) [forward reach with edge: (event: gate_U_S_u_s2_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.bclosed) (assignments: gate_U_S_S := gate_U_S_S.fclosed), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.bclosed)) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.bclosed))) -> not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.high and gate_U_S_Dir.opening and (not gate_U_S_S.fopen and (not gate_U_S_S.bopen and not gate_U_S_S.open)) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and gate_U_S_Dir.opening and (not gate_U_S_S.fopen and (not gate_U_S_S.bopen and not gate_U_S_S.open))) [forward reach with edge: (event: gate_U_S_u_s3_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.fclosed) (assignments: gate_U_S_S := gate_U_S_S.middle), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.high and gate_U_S_Dir.opening and (not gate_U_S_S.fopen and (not gate_U_S_S.bopen and not gate_U_S_S.open)) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and gate_U_S_Dir.opening and (not gate_U_S_S.fopen and (not gate_U_S_S.bopen and not gate_U_S_S.open))) -> not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.fopen)) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.fclosed) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.bclosed or gate_U_S_S.middle))) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.fopen)) or (gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.fclosed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.bclosed or gate_U_S_S.middle)))) [forward reach with edge: (event: gate_U_S_u_s4_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.middle) (assignments: gate_U_S_S := gate_U_S_S.fopen), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.fopen)) or (not gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.fclosed) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.bclosed or gate_U_S_S.middle))) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.closed or gate_U_S_S.fopen)) or (gate_U_S_Pre.high and (gate_U_S_Dir.opening and gate_U_S_S.fclosed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.bclosed or gate_U_S_S.middle)))) -> not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (not gate_U_S_Pre.high and gate_U_S_Dir.opening and (not gate_U_S_S.fclosed and (not gate_U_S_S.middle and not gate_U_S_S.open)) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.fclosed or gate_U_S_S.middle))) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and gate_U_S_Dir.opening and (not gate_U_S_S.fclosed and (not gate_U_S_S.middle and not gate_U_S_S.open)) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.fclosed or gate_U_S_S.middle)))) [forward reach with edge: (event: gate_U_S_u_s5_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.fopen) (assignments: gate_U_S_S := gate_U_S_S.bopen), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: not gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (not gate_U_S_Pre.high and gate_U_S_Dir.opening and (not gate_U_S_S.fclosed and (not gate_U_S_S.middle and not gate_U_S_S.open)) or not gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.fclosed or gate_U_S_S.middle))) or (gate_U_S_Pre.high and (not gate_U_S_Dir.opening and gate_U_S_S.closed) or (gate_U_S_Pre.high and gate_U_S_Dir.opening and (not gate_U_S_S.fclosed and (not gate_U_S_S.middle and not gate_U_S_S.open)) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.fclosed or gate_U_S_S.middle)))) -> (gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.fopen)) and ((gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.fclosed and not gate_U_S_S.open)) and (gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.bclosed and (not gate_U_S_S.middle and not gate_U_S_S.bopen)))) and ((not gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.fopen)) and ((not gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.fclosed and not gate_U_S_S.open)) and (not gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.bclosed and (not gate_U_S_S.middle and not gate_U_S_S.bopen))))) [forward reach with edge: (event: gate_U_S_u_s6_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.bopen) (assignments: gate_U_S_S := gate_U_S_S.open), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: (gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.fopen)) and ((gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.fclosed and not gate_U_S_S.open)) and (gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.bclosed and (not gate_U_S_S.middle and not gate_U_S_S.bopen)))) and ((not gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.fopen)) and ((not gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.fclosed and not gate_U_S_S.open)) and (not gate_U_S_Pre.high or (gate_U_S_Dir.opening or not gate_U_S_S.bclosed and (not gate_U_S_S.middle and not gate_U_S_S.bopen))))) -> <bdd 10n 14p> [forward reach with edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward controlled-behavior: <bdd 10n 14p> -> <bdd 7n 12p> [forward reach with edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off), restricted to current/previous controlled-behavior predicate: <bdd 7n 12p>]
Forward reachability: iteration 3.
Forward controlled-behavior: <bdd 7n 12p> [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Edge (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening): guard: gate_U_S_Dir.off -> (gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and ((not gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening)).
Edge (event: gate_U_S_c_open) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening): guard: gate_U_S_Dir.closing -> (gate_U_S_Pre.high or not gate_U_S_Dir.off) and (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and ((not gate_U_S_Pre.high or not gate_U_S_Dir.off) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening)).
Edge (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing): guard: gate_U_S_Dir.off -> (gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and ((not gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening)).
Edge (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing): guard: gate_U_S_Dir.opening -> (gate_U_S_Pre.high or gate_U_S_Dir.opening) and (not gate_U_S_Pre.high or gate_U_S_Dir.opening).
Edge (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening) (assignments: gate_U_S_Dir := gate_U_S_Dir.off): guard: gate_U_S_Dir.opening -> (gate_U_S_Pre.high or gate_U_S_Dir.opening) and (not gate_U_S_Pre.high or gate_U_S_Dir.opening).
Edge (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing) (assignments: gate_U_S_Dir := gate_U_S_Dir.off): guard: gate_U_S_Dir.closing -> (gate_U_S_Pre.high or not gate_U_S_Dir.off) and (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and ((not gate_U_S_Pre.high or not gate_U_S_Dir.off) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening)).
Edge (event: gate_U_S_c_high_on) (guard: gate_U_S_Pre.off) (assignments: gate_U_S_Pre := gate_U_S_Pre.high): guard: gate_U_S_Pre.off -> not gate_U_S_Pre.low and not gate_U_S_Pre.high.
Edge (event: gate_U_S_c_low_on) (guard: gate_U_S_Pre.off) (assignments: gate_U_S_Pre := gate_U_S_Pre.low): guard: gate_U_S_Pre.off -> not gate_U_S_Pre.low and not gate_U_S_Pre.high.
Edge (event: gate_U_S_c_high_off) (guard: gate_U_S_Pre.high -> gate_U_S_Pre.high and gate_U_S_Dir.off or gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or (gate_U_S_Pre.high and (gate_U_S_Dir.closing and gate_U_S_S.bclosed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.fopen or (gate_U_S_S.bopen or gate_U_S_S.open))))) (assignments: gate_U_S_Pre := gate_U_S_Pre.off): guard: gate_U_S_Pre.high and gate_U_S_Dir.off or gate_U_S_Pre.high and (gate_U_S_Dir.closing and (gate_U_S_S.closed or gate_U_S_S.fclosed)) or (gate_U_S_Pre.high and (gate_U_S_Dir.closing and gate_U_S_S.bclosed) or gate_U_S_Pre.high and (gate_U_S_Dir.opening and (gate_U_S_S.fopen or (gate_U_S_S.bopen or gate_U_S_S.open)))) -> <bdd 13n 7p>.
Edge (event: gate_U_S_c_low_off) (guard: gate_U_S_Pre.low) (assignments: gate_U_S_Pre := gate_U_S_Pre.off): guard: gate_U_S_Pre.low -> not gate_U_S_Pre.off and not gate_U_S_Pre.high.

Final synthesis result:
  State: (controlled-behavior: <bdd 7n 12p>)
    Edge: (event: gate_U_S_u_s1_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.closed) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s1_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.bclosed) (assignments: gate_U_S_S := gate_U_S_S.closed)
    Edge: (event: gate_U_S_u_s2_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.bclosed) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s2_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.fclosed) (assignments: gate_U_S_S := gate_U_S_S.bclosed)
    Edge: (event: gate_U_S_u_s3_on) (guard: gate_U_S_Dir.opening and gate_U_S_S.fclosed) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s3_off) (guard: gate_U_S_Dir.closing and gate_U_S_S.middle) (assignments: gate_U_S_S := gate_U_S_S.fclosed)
    Edge: (event: gate_U_S_u_s4_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.middle) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s4_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.fopen) (assignments: gate_U_S_S := gate_U_S_S.middle)
    Edge: (event: gate_U_S_u_s5_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.fopen) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_u_s5_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.bopen) (assignments: gate_U_S_S := gate_U_S_S.fopen)
    Edge: (event: gate_U_S_u_s6_off) (guard: gate_U_S_Dir.opening and gate_U_S_S.bopen) (assignments: gate_U_S_S := gate_U_S_S.open)
    Edge: (event: gate_U_S_u_s6_on) (guard: gate_U_S_Dir.closing and gate_U_S_S.open) (assignments: gate_U_S_S := gate_U_S_S.bopen)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.off -> (gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and ((not gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening))) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_open) (guard: gate_U_S_Dir.closing -> (gate_U_S_Pre.high or not gate_U_S_Dir.off) and (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and ((not gate_U_S_Pre.high or not gate_U_S_Dir.off) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening))) (assignments: gate_U_S_Dir := gate_U_S_Dir.opening)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.off -> (gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and ((not gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening))) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_close) (guard: gate_U_S_Dir.opening -> (gate_U_S_Pre.high or gate_U_S_Dir.opening) and (not gate_U_S_Pre.high or gate_U_S_Dir.opening)) (assignments: gate_U_S_Dir := gate_U_S_Dir.closing)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.opening -> (gate_U_S_Pre.high or gate_U_S_Dir.opening) and (not gate_U_S_Pre.high or gate_U_S_Dir.opening)) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)
    Edge: (event: gate_U_S_c_stop) (guard: gate_U_S_Dir.closing -> (gate_U_S_Pre.high or not gate_U_S_Dir.off) and (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and ((not gate_U_S_Pre.high or not gate_U_S_Dir.off) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening))) (assignments: gate_U_S_Dir := gate_U_S_Dir.off)
    Edge: (event: gate_U_S_c_high_on) (guard: gate_U_S_Pre.off -> not gate_U_S_Pre.low and not gate_U_S_Pre.high) (assignments: gate_U_S_Pre := gate_U_S_Pre.high)
    Edge: (event: gate_U_S_c_low_on) (guard: gate_U_S_Pre.off -> not gate_U_S_Pre.low and not gate_U_S_Pre.high) (assignments: gate_U_S_Pre := gate_U_S_Pre.low)
    Edge: (event: gate_U_S_c_high_off) (guard: gate_U_S_Pre.high -> <bdd 13n 7p>) (assignments: gate_U_S_Pre := gate_U_S_Pre.off)
    Edge: (event: gate_U_S_c_low_off) (guard: gate_U_S_Pre.low -> not gate_U_S_Pre.off and not gate_U_S_Pre.high) (assignments: gate_U_S_Pre := gate_U_S_Pre.off)

Controlled system:                     exactly 63 states.

Initial (synthesis result):            <bdd 7n 12p>
Initial (uncontrolled system):         gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed)
Initial (controlled system):           gate_U_S_Pre.off and (gate_U_S_Dir.off and gate_U_S_S.closed)
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event gate_U_S_c_open: guard: (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening) -> true [assume (gate_U_S_Pre.high or not gate_U_S_Dir.opening) and (not gate_U_S_Pre.high or not gate_U_S_Dir.opening)].
  Event gate_U_S_c_close: guard: (gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (not gate_U_S_Pre.high or not gate_U_S_Dir.closing) -> true [assume (gate_U_S_Pre.high or not gate_U_S_Dir.closing) and (not gate_U_S_Pre.high or not gate_U_S_Dir.closing)].
  Event gate_U_S_c_stop: guard: <bdd 8n 12p> -> true [assume <bdd 8n 12p>].
  Event gate_U_S_c_high_on: guard: not gate_U_S_Pre.low and not gate_U_S_Pre.high -> true [assume not gate_U_S_Pre.low and not gate_U_S_Pre.high].
  Event gate_U_S_c_low_on: guard: not gate_U_S_Pre.low and not gate_U_S_Pre.high -> true [assume not gate_U_S_Pre.low and not gate_U_S_Pre.high].
  Event gate_U_S_c_high_off: guard: <bdd 13n 7p> -> true [assume <bdd 13n 7p>].
  Event gate_U_S_c_low_off: guard: not gate_U_S_Pre.off and not gate_U_S_Pre.high -> true [assume not gate_U_S_Pre.off and not gate_U_S_Pre.high].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_largereq/subplant_132_sup.cif".
