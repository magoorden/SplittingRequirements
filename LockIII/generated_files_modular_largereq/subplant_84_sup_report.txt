Reading CIF file "generated_files_modular_largereq/subplant_84.cif".
Preprocessing CIF specification.
Converting CIF specification to internal format.

CIF variables and location pointers:
  Nr     Kind              Type  Name           Group  BDD vars  CIF values  BDD values  Values used
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  1      location pointer  n/a   button10       0      1 * 2     2 * 2       2 * 2       100%
  2      location pointer  n/a   button14       1      1 * 2     2 * 2       2 * 2       100%
  3      location pointer  n/a   button17       2      1 * 2     2 * 2       2 * 2       100%
  4      location pointer  n/a   emergencystop  3      1 * 2     2 * 2       2 * 2       100%
  5      location pointer  n/a   in_D_N_A       4      2 * 2     4 * 2       4 * 2       100%
  6      location pointer  n/a   in_D_N_S       5      3 * 2     8 * 2       8 * 2       100%
  7      location pointer  n/a   stop1          6      1 * 2     2 * 2       2 * 2       100%
  8      location pointer  n/a   stop2          7      1 * 2     2 * 2       2 * 2       100%
  9      location pointer  n/a   stop4          8      1 * 2     2 * 2       2 * 2       100%
  -----  ----------------  ----  -------------  -----  --------  ----------  ----------  -----------
  Total                                         9      24        52          52          100%

Applying automatic variable ordering:
  Number of hyperedges: 25

  Applying FORCE algorithm:
    Maximum number of iterations: 30

    Total span:                   14 (total)                 0.56 (avg/edge) [before]
    Total span:                   14 (total)                 0.56 (avg/edge) [iteration 1]
    Total span:                   14 (total)                 0.56 (avg/edge) [after]

  Applying sliding window algorithm:
    Window length: 4

    Total span:                   14 (total)                 0.56 (avg/edge) [before]
    Total span:                   14 (total)                 0.56 (avg/edge) [after]

  Variable order unchanged.

Starting data-based synthesis.

Invariant (components state invariant):  true
Invariant (locations state invariant):   true
Invariant (system state invariant):      true

Initial   (discrete variables):          true
Initial   (components init predicate):   true
Initial   (aut/locs init predicate):     button10.released
Initial   (aut/locs init predicate):     button14.released
Initial   (aut/locs init predicate):     button17.released
Initial   (aut/locs init predicate):     emergencystop.released
Initial   (aut/locs init predicate):     stop1.released
Initial   (aut/locs init predicate):     stop2.released
Initial   (aut/locs init predicate):     stop4.released
Initial   (aut/locs init predicate):     in_D_N_S.red
Initial   (aut/locs init predicate):     in_D_N_A.red
Initial   (auts/locs init predicate):    <bdd 12n 1p>
Initial   (uncontrolled system):         <bdd 12n 1p>
Initial   (system, combined init/inv):   <bdd 12n 1p>

Marked    (components marker predicate): true
Marked    (aut/locs marker predicate):   button10.released
Marked    (aut/locs marker predicate):   button14.released
Marked    (aut/locs marker predicate):   button17.released
Marked    (aut/locs marker predicate):   emergencystop.released
Marked    (aut/locs marker predicate):   stop1.released
Marked    (aut/locs marker predicate):   stop2.released
Marked    (aut/locs marker predicate):   stop4.released
Marked    (aut/locs marker predicate):   in_D_N_S.red
Marked    (aut/locs marker predicate):   in_D_N_A.red
Marked    (auts/locs marker predicate):  <bdd 12n 1p>
Marked    (uncontrolled system):         <bdd 12n 1p>
Marked    (system, combined marked/inv): <bdd 12n 1p>

State/event exclusion requirements:
  Event "in_D_N_c_green" needs:
    button10.released and (button14.pushed and button17.released) and (emergencystop.released and stop1.released and (stop2.released and stop4.released))

Uncontrolled system:
  State: (controlled-behavior: ?)
    Edge: (event: button10_u_push) (guard: button10.released) (assignments: button10 := button10.pushed)
    Edge: (event: button10_u_release) (guard: button10.pushed) (assignments: button10 := button10.released)
    Edge: (event: button14_u_push) (guard: button14.released) (assignments: button14 := button14.pushed)
    Edge: (event: button14_u_release) (guard: button14.pushed) (assignments: button14 := button14.released)
    Edge: (event: button17_u_push) (guard: button17.released) (assignments: button17 := button17.pushed)
    Edge: (event: button17_u_release) (guard: button17.pushed) (assignments: button17 := button17.released)
    Edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed)
    Edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released)
    Edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed)
    Edge: (event: stop1_u_release) (guard: stop1.pushed) (assignments: stop1 := stop1.released)
    Edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed)
    Edge: (event: stop2_u_release) (guard: stop2.pushed) (assignments: stop2 := stop2.released)
    Edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed)
    Edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.green)

Initialized controlled-behavior predicate using invariants: true.

Extending controlled-behavior predicate using variable ranges.

Restricting behavior using state/event exclusion requirements.

Edge (event: in_D_N_c_green) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.green): guard: in_D_N_A.redgreen -> button10.released and button14.pushed and (button17.released and emergencystop.released) and (in_D_N_A.redgreen and stop1.released and (stop2.released and stop4.released)) [requirement: button10.released and (button14.pushed and button17.released) and (emergencystop.released and stop1.released and (stop2.released and stop4.released))].

Restricted behavior using state/event exclusion requirements:
  State: (controlled-behavior: true)
    Edge: (event: button10_u_push) (guard: button10.released) (assignments: button10 := button10.pushed)
    Edge: (event: button10_u_release) (guard: button10.pushed) (assignments: button10 := button10.released)
    Edge: (event: button14_u_push) (guard: button14.released) (assignments: button14 := button14.pushed)
    Edge: (event: button14_u_release) (guard: button14.pushed) (assignments: button14 := button14.released)
    Edge: (event: button17_u_push) (guard: button17.released) (assignments: button17 := button17.pushed)
    Edge: (event: button17_u_release) (guard: button17.pushed) (assignments: button17 := button17.released)
    Edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed)
    Edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released)
    Edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed)
    Edge: (event: stop1_u_release) (guard: stop1.pushed) (assignments: stop1 := stop1.released)
    Edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed)
    Edge: (event: stop2_u_release) (guard: stop2.pushed) (assignments: stop2 := stop2.released)
    Edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed)
    Edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen -> button10.released and button14.pushed and (button17.released and emergencystop.released) and (in_D_N_A.redgreen and stop1.released and (stop2.released and stop4.released))) (assignments: in_D_N_A := in_D_N_A.green)

Round 1: started.

Round 1: computing backward controlled-behavior predicate.
Backward controlled-behavior: <bdd 12n 1p> [marker predicate]
Backward reachability: iteration 1.
Backward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [backward reach with edge: (event: button10_u_release) (guard: button10.pushed) (assignments: button10 := button10.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: <bdd 11n 1p> -> button17.released and (emergencystop.released and in_D_N_A.red) and (in_D_N_S.red and stop1.released and (stop2.released and stop4.released)) [backward reach with edge: (event: button14_u_release) (guard: button14.pushed) (assignments: button14 := button14.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: button17.released and (emergencystop.released and in_D_N_A.red) and (in_D_N_S.red and stop1.released and (stop2.released and stop4.released)) -> emergencystop.released and (in_D_N_A.red and in_D_N_S.red) and (stop1.released and (stop2.released and stop4.released)) [backward reach with edge: (event: button17_u_release) (guard: button17.pushed) (assignments: button17 := button17.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: emergencystop.released and (in_D_N_A.red and in_D_N_S.red) and (stop1.released and (stop2.released and stop4.released)) -> in_D_N_A.red and in_D_N_S.red and (stop1.released and (stop2.released and stop4.released)) [backward reach with edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red and in_D_N_S.red and (stop1.released and (stop2.released and stop4.released)) -> in_D_N_A.red and in_D_N_S.red and (stop2.released and stop4.released) [backward reach with edge: (event: stop1_u_release) (guard: stop1.pushed) (assignments: stop1 := stop1.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red and in_D_N_S.red and (stop2.released and stop4.released) -> in_D_N_A.red and (in_D_N_S.red and stop4.released) [backward reach with edge: (event: stop2_u_release) (guard: stop2.pushed) (assignments: stop2 := stop2.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red and (in_D_N_S.red and stop4.released) -> in_D_N_A.red and in_D_N_S.red [backward reach with edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red and in_D_N_S.red -> in_D_N_A.red and (in_D_N_S.off or in_D_N_S.red) [backward reach with edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red and (in_D_N_S.off or in_D_N_S.red) -> in_D_N_A.red and (in_D_N_S.off or in_D_N_S.green) or in_D_N_A.red and in_D_N_S.red [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red and (in_D_N_S.off or in_D_N_S.green) or in_D_N_A.red and in_D_N_S.red -> in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red and in_D_N_S.green or in_D_N_A.red and in_D_N_S.red) [backward reach with edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red and in_D_N_S.green or in_D_N_A.red and in_D_N_S.red) -> in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red and in_D_N_S.green or in_D_N_A.red and (in_D_N_S.red or in_D_N_S.lowred)) [backward reach with edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red and in_D_N_S.green or in_D_N_A.red and (in_D_N_S.red or in_D_N_S.lowred)) -> (not in_D_N_A.red or not in_D_N_S.greenred and not in_D_N_S.redgreenred) and (not in_D_N_A.redred and (in_D_N_A.red or in_D_N_A.redred)) [backward reach with edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (not in_D_N_A.red or not in_D_N_S.greenred and not in_D_N_S.redgreenred) and (not in_D_N_A.redred and (in_D_N_A.red or in_D_N_A.redred)) -> (not in_D_N_A.red or not in_D_N_S.redgreenred) and (not in_D_N_A.redred and (in_D_N_A.red or in_D_N_A.redred)) [backward reach with edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: (not in_D_N_A.red or not in_D_N_S.redgreenred) and (not in_D_N_A.redred and (in_D_N_A.red or in_D_N_A.redred)) -> in_D_N_A.red [backward reach with edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red -> in_D_N_A.red or in_D_N_A.green [backward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: in_D_N_A.red or in_D_N_A.green -> not in_D_N_A.redgreen [backward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward controlled-behavior: not in_D_N_A.redgreen -> true [backward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Backward reachability: iteration 2.
Backward controlled-behavior: true [fixed point].

Round 1: computing backward uncontrolled bad-state predicate.
Backward uncontrolled bad-state: false [current/previous controlled behavior predicate]
Backward reachability: iteration 1.

Round 1: computing forward controlled-behavior predicate.
Forward controlled-behavior: <bdd 12n 1p> [initialization predicate]
Forward reachability: iteration 1.
Forward controlled-behavior: <bdd 12n 1p> -> <bdd 11n 1p> [forward reach with edge: (event: button10_u_push) (guard: button10.released) (assignments: button10 := button10.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 1p> -> button17.released and (emergencystop.released and in_D_N_A.red) and (in_D_N_S.red and stop1.released and (stop2.released and stop4.released)) [forward reach with edge: (event: button14_u_push) (guard: button14.released) (assignments: button14 := button14.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: button17.released and (emergencystop.released and in_D_N_A.red) and (in_D_N_S.red and stop1.released and (stop2.released and stop4.released)) -> emergencystop.released and (in_D_N_A.red and in_D_N_S.red) and (stop1.released and (stop2.released and stop4.released)) [forward reach with edge: (event: button17_u_push) (guard: button17.released) (assignments: button17 := button17.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: emergencystop.released and (in_D_N_A.red and in_D_N_S.red) and (stop1.released and (stop2.released and stop4.released)) -> in_D_N_A.red and in_D_N_S.red and (stop1.released and (stop2.released and stop4.released)) [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_A.red and in_D_N_S.red and (stop1.released and (stop2.released and stop4.released)) -> in_D_N_A.red and in_D_N_S.red and (stop2.released and stop4.released) [forward reach with edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_A.red and in_D_N_S.red and (stop2.released and stop4.released) -> in_D_N_A.red and (in_D_N_S.red and stop4.released) [forward reach with edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_A.red and (in_D_N_S.red and stop4.released) -> in_D_N_A.red and in_D_N_S.red [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_A.red and in_D_N_S.red -> in_D_N_A.red and in_D_N_S.red or in_D_N_A.redgreen and in_D_N_S.red [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_A.red and in_D_N_S.red or in_D_N_A.redgreen and in_D_N_S.red -> (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or in_D_N_A.redgreen and in_D_N_S.red [forward reach with edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or in_D_N_A.redgreen and in_D_N_S.red -> <bdd 17n 11p> [forward reach with edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen -> button10.released and button14.pushed and (button17.released and emergencystop.released) and (in_D_N_A.redgreen and stop1.released and (stop2.released and stop4.released))) (assignments: in_D_N_A := in_D_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 2.
Forward controlled-behavior: <bdd 17n 11p> -> <bdd 16n 9p> [forward reach with edge: (event: button10_u_push) (guard: button10.released) (assignments: button10 := button10.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 16n 9p> -> <bdd 15n 7p> [forward reach with edge: (event: button14_u_release) (guard: button14.pushed) (assignments: button14 := button14.released), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 15n 7p> -> <bdd 14n 5p> [forward reach with edge: (event: button17_u_push) (guard: button17.released) (assignments: button17 := button17.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 14n 5p> -> <bdd 11n 3p> [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 3p> -> (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or (in_D_N_A.green and in_D_N_S.red and (stop2.released and stop4.released) or in_D_N_A.redgreen and in_D_N_S.red) [forward reach with edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or (in_D_N_A.green and in_D_N_S.red and (stop2.released and stop4.released) or in_D_N_A.redgreen and in_D_N_S.red) -> (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or (in_D_N_A.green and (in_D_N_S.red and stop4.released) or in_D_N_A.redgreen and in_D_N_S.red) [forward reach with edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or (in_D_N_A.green and (in_D_N_S.red and stop4.released) or in_D_N_A.redgreen and in_D_N_S.red) -> in_D_N_S.red [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_S.red -> (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or in_D_N_A.green and in_D_N_S.redgreen or (in_D_N_A.green and in_D_N_S.red or in_D_N_A.redgreen and in_D_N_S.red) [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or in_D_N_A.green and in_D_N_S.redgreen or (in_D_N_A.green and in_D_N_S.red or in_D_N_A.redgreen and in_D_N_S.red) -> (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.redgreen or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red) [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.red or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.redgreen or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red) -> in_D_N_A.red and in_D_N_S.red or in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.redgreen or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red) [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_A.red and in_D_N_S.red or in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.redgreen or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red) -> <bdd 12n 6p> [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.off), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 6p> -> <bdd 13n 7p> [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.green), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 13n 7p> -> in_D_N_A.red and in_D_N_S.red or in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or ((in_D_N_A.green or in_D_N_A.redgreen) and (in_D_N_S.off or in_D_N_S.redgreen) or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.green or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red)) [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_A.red and in_D_N_S.red or in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or ((in_D_N_A.green or in_D_N_A.redgreen) and (in_D_N_S.off or in_D_N_S.redgreen) or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.green or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red)) -> in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red and in_D_N_S.green or in_D_N_A.red and in_D_N_S.red) or (in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or (in_D_N_A.green or in_D_N_A.redgreen) and (in_D_N_S.off or in_D_N_S.redgreen) or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.green or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red)) [forward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red and in_D_N_S.green or in_D_N_A.red and in_D_N_S.red) or (in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or (in_D_N_A.green or in_D_N_A.redgreen) and (in_D_N_S.off or in_D_N_S.redgreen) or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.green or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red)) -> in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red and in_D_N_S.green or in_D_N_A.red and (in_D_N_S.red or in_D_N_S.redred)) or (in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or (in_D_N_A.green or in_D_N_A.redgreen) and (in_D_N_S.off or in_D_N_S.redgreen) or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.green or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red)) [forward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 3.
Forward controlled-behavior: in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red and in_D_N_S.green or in_D_N_A.red and (in_D_N_S.red or in_D_N_S.redred)) or (in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or (in_D_N_A.green or in_D_N_A.redgreen) and (in_D_N_S.off or in_D_N_S.redgreen) or ((in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.green or (in_D_N_A.green or in_D_N_A.redgreen) and in_D_N_S.red)) -> in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or in_D_N_A.red and in_D_N_S.green or (in_D_N_A.red and (in_D_N_S.red or in_D_N_S.redred) or (in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or in_D_N_A.green and (in_D_N_S.off or in_D_N_S.redgreen))) or (in_D_N_A.green and in_D_N_S.green or in_D_N_A.green and in_D_N_S.red or (in_D_N_A.redgreen and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.redgreen and in_D_N_S.green or in_D_N_A.redgreen and (in_D_N_S.red or in_D_N_S.redred)))) [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: in_D_N_A.red and (in_D_N_S.off or in_D_N_S.redgreen) or in_D_N_A.red and in_D_N_S.green or (in_D_N_A.red and (in_D_N_S.red or in_D_N_S.redred) or (in_D_N_A.redred and (in_D_N_S.red or in_D_N_S.redred) or in_D_N_A.green and (in_D_N_S.off or in_D_N_S.redgreen))) or (in_D_N_A.green and in_D_N_S.green or in_D_N_A.green and in_D_N_S.red or (in_D_N_A.redgreen and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.redgreen and in_D_N_S.green or in_D_N_A.redgreen and (in_D_N_S.red or in_D_N_S.redred)))) -> (in_D_N_A.red or in_D_N_A.redred) and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.green or ((in_D_N_A.red or in_D_N_A.redred) and (in_D_N_S.red or in_D_N_S.redred) or in_D_N_A.green and (in_D_N_S.off or in_D_N_S.redgreen)) or (in_D_N_A.green and in_D_N_S.green or in_D_N_A.green and in_D_N_S.red or (in_D_N_A.redgreen and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.redgreen and in_D_N_S.green or in_D_N_A.redgreen and (in_D_N_S.red or in_D_N_S.redred)))) [forward reach with edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_D_N_A.red or in_D_N_A.redred) and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.red or in_D_N_A.redred) and in_D_N_S.green or ((in_D_N_A.red or in_D_N_A.redred) and (in_D_N_S.red or in_D_N_S.redred) or in_D_N_A.green and (in_D_N_S.off or in_D_N_S.redgreen)) or (in_D_N_A.green and in_D_N_S.green or in_D_N_A.green and in_D_N_S.red or (in_D_N_A.redgreen and (in_D_N_S.off or in_D_N_S.redgreen) or (in_D_N_A.redgreen and in_D_N_S.green or in_D_N_A.redgreen and (in_D_N_S.red or in_D_N_S.redred)))) -> <bdd 20n 46p> [forward reach with edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen -> button10.released and button14.pushed and (button17.released and emergencystop.released) and (in_D_N_A.redgreen and stop1.released and (stop2.released and stop4.released))) (assignments: in_D_N_A := in_D_N_A.green), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 4.
Forward controlled-behavior: <bdd 20n 46p> -> <bdd 19n 37p> [forward reach with edge: (event: button10_u_push) (guard: button10.released) (assignments: button10 := button10.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 19n 37p> -> <bdd 18n 28p> [forward reach with edge: (event: button14_u_release) (guard: button14.pushed) (assignments: button14 := button14.released), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 18n 28p> -> <bdd 17n 19p> [forward reach with edge: (event: button17_u_push) (guard: button17.released) (assignments: button17 := button17.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 17n 19p> -> <bdd 12n 10p> [forward reach with edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 12n 10p> -> <bdd 11n 10p> [forward reach with edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 10p> -> (in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.greenred)) and ((in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred)) and (not in_D_N_A.green or not in_D_N_S.greenred)) and ((not in_D_N_A.green or (not in_D_N_S.redred or stop4.released)) and (not in_D_N_A.green or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((not in_D_N_A.redgreen or not in_D_N_S.greenred) and (not in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred))) [forward reach with edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.greenred)) and ((in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred)) and (not in_D_N_A.green or not in_D_N_S.greenred)) and ((not in_D_N_A.green or (not in_D_N_S.redred or stop4.released)) and (not in_D_N_A.green or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((not in_D_N_A.redgreen or not in_D_N_S.greenred) and (not in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred))) -> not in_D_N_S.greenred and (not in_D_N_S.lowred and not in_D_N_S.redgreenred) [forward reach with edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: not in_D_N_S.greenred and (not in_D_N_S.lowred and not in_D_N_S.redgreenred) -> (in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.greenred)) and ((in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred)) and (not in_D_N_A.green or not in_D_N_S.greenred)) and ((not in_D_N_A.green or not in_D_N_S.lowred) and ((not in_D_N_A.redgreen or not in_D_N_S.greenred) and (not in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred))) [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.greenred)) and ((in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred)) and (not in_D_N_A.green or not in_D_N_S.greenred)) and ((not in_D_N_A.green or not in_D_N_S.lowred) and ((not in_D_N_A.redgreen or not in_D_N_S.greenred) and (not in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred))) -> (in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.greenred)) and (in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred)) and ((in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.greenred)) and (in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.lowred))) [forward reach with edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.greenred)) and (in_D_N_A.green or (in_D_N_A.redgreen or not in_D_N_S.lowred and not in_D_N_S.redgreenred)) and ((in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.greenred)) and (in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.lowred))) -> (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((not in_D_N_A.redred or not in_D_N_S.greenred and not in_D_N_S.redgreenred) and ((in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.greenred)) and (in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.lowred)))) [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((not in_D_N_A.redred or not in_D_N_S.greenred and not in_D_N_S.redgreenred) and ((in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.greenred)) and (in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.lowred)))) -> (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((not in_D_N_A.redred or not in_D_N_S.redgreenred) and ((in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.greenred)) and (in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.lowred)))) [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((not in_D_N_A.redred or not in_D_N_S.redgreenred) and ((in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.greenred)) and (in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.lowred)))) -> (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.greenred)) and (in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.lowred))) [forward reach with edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.redgreenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.greenred)) and (in_D_N_A.red or (in_D_N_A.redred or not in_D_N_S.lowred))) -> <bdd 11n 11p> [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.lowred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: <bdd 11n 11p> -> (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((not in_D_N_A.redgreen or not in_D_N_S.greenred) and (not in_D_N_A.redgreen or not in_D_N_S.lowred)) [forward reach with edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.greenred), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) and ((not in_D_N_A.redgreen or not in_D_N_S.greenred) and (not in_D_N_A.redgreen or not in_D_N_S.lowred)) -> (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) [forward reach with edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen), restricted to current/previous controlled-behavior predicate: true]
Forward controlled-behavior: (not in_D_N_A.red or not in_D_N_S.greenred) and (not in_D_N_A.red or not in_D_N_S.lowred and not in_D_N_S.redgreenred) -> true [forward reach with edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red), restricted to current/previous controlled-behavior predicate: true]
Forward reachability: iteration 5.
Forward controlled-behavior: true [fixed point].

Round 1: finished, controlled behavior is stable.

Computing controlled system guards.

Final synthesis result:
  State: (controlled-behavior: true)
    Edge: (event: button10_u_push) (guard: button10.released) (assignments: button10 := button10.pushed)
    Edge: (event: button10_u_release) (guard: button10.pushed) (assignments: button10 := button10.released)
    Edge: (event: button14_u_push) (guard: button14.released) (assignments: button14 := button14.pushed)
    Edge: (event: button14_u_release) (guard: button14.pushed) (assignments: button14 := button14.released)
    Edge: (event: button17_u_push) (guard: button17.released) (assignments: button17 := button17.pushed)
    Edge: (event: button17_u_release) (guard: button17.pushed) (assignments: button17 := button17.released)
    Edge: (event: emergencystop_u_push) (guard: emergencystop.released) (assignments: emergencystop := emergencystop.pushed)
    Edge: (event: emergencystop_u_release) (guard: emergencystop.pushed) (assignments: emergencystop := emergencystop.released)
    Edge: (event: stop1_u_push) (guard: stop1.released) (assignments: stop1 := stop1.pushed)
    Edge: (event: stop1_u_release) (guard: stop1.pushed) (assignments: stop1 := stop1.released)
    Edge: (event: stop2_u_push) (guard: stop2.released) (assignments: stop2 := stop2.pushed)
    Edge: (event: stop2_u_release) (guard: stop2.pushed) (assignments: stop2 := stop2.released)
    Edge: (event: stop4_u_push) (guard: stop4.released) (assignments: stop4 := stop4.pushed)
    Edge: (event: stop4_u_release) (guard: stop4.pushed) (assignments: stop4 := stop4.released)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_on) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_g_on) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.off) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_s_on) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.redgreenred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.red) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_r_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.greenred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.green) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreen) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.lowred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_g_off) (guard: in_D_N_A.redred and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redred)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.lowred) (assignments: in_D_N_S := in_D_N_S.off)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redred) (assignments: in_D_N_S := in_D_N_S.red)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.greenred) (assignments: in_D_N_S := in_D_N_S.green)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.red and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.green and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_u_s_off) (guard: in_D_N_A.redgreen and in_D_N_S.redgreenred) (assignments: in_D_N_S := in_D_N_S.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redgreen) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.redgreen)
    Edge: (event: in_D_N_c_redred) (guard: in_D_N_A.red) (assignments: in_D_N_A := in_D_N_A.redred)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.green) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redred) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_red) (guard: in_D_N_A.redgreen) (assignments: in_D_N_A := in_D_N_A.red)
    Edge: (event: in_D_N_c_green) (guard: in_D_N_A.redgreen -> button10.released and button14.pushed and (button17.released and emergencystop.released) and (in_D_N_A.redgreen and stop1.released and (stop2.released and stop4.released))) (assignments: in_D_N_A := in_D_N_A.green)

Controlled system:                     exactly 4,096 states.

Initial (synthesis result):            true
Initial (uncontrolled system):         <bdd 12n 1p>
Initial (controlled system):           <bdd 12n 1p>
Initial (removed by supervisor):       false
Initial (added by supervisor):         true

Simplification of controlled system under the assumption of the plants, requirement automata, state/event exclusion requirement invariants, state requirement invariants, and controlled behavior:
  Event in_D_N_c_redgreen: guard: in_D_N_A.red or in_D_N_A.green -> true [assume in_D_N_A.red or in_D_N_A.green].
  Event in_D_N_c_redred: guard: in_D_N_A.red -> true [assume in_D_N_A.red].
  Event in_D_N_c_red: guard: not in_D_N_A.red -> true [assume not in_D_N_A.red].
  Event in_D_N_c_green: guard: button10.released and button14.pushed and (button17.released and emergencystop.released) and (in_D_N_A.redgreen and stop1.released and (stop2.released and stop4.released)) -> true [assume button10.released and button14.pushed and (button17.released and emergencystop.released) and (in_D_N_A.redgreen and stop1.released and (stop2.released and stop4.released))].

Constructing output CIF specification.
Writing output CIF file "generated_files_modular_largereq/subplant_84_sup.cif".
